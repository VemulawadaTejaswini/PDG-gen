Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void testArrayToStringFunctionWithNulls8() [ CD ]
Line_3 $$ public void testArrayToStringFunctionWithNulls8() -->Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ public void testArrayToStringFunctionWithNulls8() -->Line_5 $$ initTables(conn)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_5 $$ initTables(conn)[ FD ]
Line_3 $$ public void testArrayToStringFunctionWithNulls8() -->Line_6 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY[NULL, NULL, 'a', 'b', NULL, 'c', 'd', NULL, 'e', NULL, NULL], ', ') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_6 $$ conn.createStatement()[ FD ]
Line_3 $$ public void testArrayToStringFunctionWithNulls8() -->Line_7 $$ assertTrue(rs.next())[ CD ]
Line_3 $$ public void testArrayToStringFunctionWithNulls8() -->Line_8 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_3 $$ public void testArrayToStringFunctionWithNulls8() -->Line_9 $$ assertFalse(rs.next())[ CD ]
Line_0 $$ Entry-->Line_13 $$ //1
public class func [ CD ]
Line_13 $$ //1
public class func -->Line_14 $$ public void testArrayToStringFunctionWithNulls7() [ CD ]
Line_14 $$ public void testArrayToStringFunctionWithNulls7() -->Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_15 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_14 $$ public void testArrayToStringFunctionWithNulls7() -->Line_16 $$ initTables(conn)[ CD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_16 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_16 $$ initTables(conn)[ FD ]
Line_14 $$ public void testArrayToStringFunctionWithNulls7() -->Line_17 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY[NULL, NULL, 'a', 'b', NULL, 'c', 'd', NULL, 'e', NULL, NULL], ', ', '*') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_17 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_17 $$ conn.createStatement()[ FD ]
Line_14 $$ public void testArrayToStringFunctionWithNulls7() -->Line_18 $$ assertTrue(rs.next())[ CD ]
Line_14 $$ public void testArrayToStringFunctionWithNulls7() -->Line_19 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_14 $$ public void testArrayToStringFunctionWithNulls7() -->Line_20 $$ assertFalse(rs.next())[ CD ]
Line_0 $$ Entry-->Line_24 $$ //2
public class func [ CD ]
Line_24 $$ //2
public class func -->Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() [ CD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)[ CD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_26 $$ DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)[ CD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_27 $$ conn.setAutoCommit(true)[ CD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_27 $$ conn.setAutoCommit(true)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_27 $$ conn.setAutoCommit(true)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_27 $$ conn.setAutoCommit(true)[ FD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_28 $$ int count = conn.createStatement().executeUpdate("upsert into " + TENANT_TABLE_NAME + " (id, user) values (1, 'Bon Scott')")[ CD ]
Line_28 $$ int count = conn.createStatement().executeUpdate("upsert into " + TENANT_TABLE_NAME + " (id, user) values (1, 'Bon Scott')")-->Line_28 $$ conn.createStatement().executeUpdate("upsert into " + TENANT_TABLE_NAME + " (id, user) values (1, 'Bon Scott')")[ CD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_28 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_28 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_28 $$ conn.createStatement()[ FD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_29 $$ assertEquals("Expected 1 row to have been inserted", 1, count)[ CD ]
Line_28 $$ int count = conn.createStatement().executeUpdate("upsert into " + TENANT_TABLE_NAME + " (id, user) values (1, 'Bon Scott')")-->Line_29 $$ assertEquals("Expected 1 row to have been inserted", 1, count)[ FD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_30 $$ conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)[ CD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_30 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_30 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_30 $$ conn.createStatement()[ FD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_31 $$ rs.next()[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_31 $$ rs.next()[ FD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_32 $$ assertEquals(1, rs.getInt(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_32 $$ rs.getInt(1)[ FD ]
Line_25 $$ public void testUpsertValuesOnlyUpsertsTenantData() -->Line_33 $$ conn.close()[ CD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_33 $$ conn.close()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_33 $$ conn.close()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_33 $$ conn.close()[ FD ]
Line_0 $$ Entry-->Line_37 $$ //3
public class func [ CD ]
Line_37 $$ //3
public class func -->Line_38 $$ public void testArrayToStringFunctionDouble1() [ CD ]
Line_38 $$ public void testArrayToStringFunctionDouble1() -->Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_39 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_38 $$ public void testArrayToStringFunctionDouble1() -->Line_40 $$ initTables(conn)[ CD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_40 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_40 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_40 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_40 $$ initTables(conn)[ FD ]
Line_38 $$ public void testArrayToStringFunctionDouble1() -->Line_41 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(doubles, ', ') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_41 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_41 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_41 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_41 $$ conn.createStatement()[ FD ]
Line_38 $$ public void testArrayToStringFunctionDouble1() -->Line_42 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_42 $$ rs.next()[ FD ]
Line_38 $$ public void testArrayToStringFunctionDouble1() -->Line_43 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_43 $$ rs.getString(1)[ FD ]
Line_38 $$ public void testArrayToStringFunctionDouble1() -->Line_44 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_44 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_48 $$ //4
public class func [ CD ]
Line_48 $$ //4
public class func -->Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() [ CD ]
Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() -->Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_50 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() -->Line_51 $$ initTables(conn)[ CD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_51 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_51 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_51 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_51 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_51 $$ initTables(conn)[ FD ]
Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() -->Line_52 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY[ARRAY_ELEM(doubles, 1), ARRAY_ELEM(doubles, 1)], ', ') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_52 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_52 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_52 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_52 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_52 $$ conn.createStatement()[ FD ]
Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() -->Line_53 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_53 $$ rs.next()[ FD ]
Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() -->Line_54 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_54 $$ rs.getString(1)[ FD ]
Line_49 $$ public void testArrayToStringFunctionWithNestedFunctions3() -->Line_55 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_55 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_59 $$ //5
public class func [ CD ]
Line_59 $$ //5
public class func -->Line_60 $$ public void testArrayAppendFunctionInWhere4() [ CD ]
Line_60 $$ public void testArrayAppendFunctionInWhere4() -->Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_61 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_60 $$ public void testArrayAppendFunctionInWhere4() -->Line_62 $$ initTables(conn)[ CD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_62 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_62 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_62 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_62 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_62 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_62 $$ initTables(conn)[ FD ]
Line_60 $$ public void testArrayAppendFunctionInWhere4() -->Line_63 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE ARRAY[23.45,4634.5,2.3234,123.4]=ARRAY_APPEND(ARRAY[23.45,4634.5,2.3234],123.4)")[ CD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_63 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_63 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_63 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_63 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_63 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_63 $$ conn.createStatement()[ FD ]
Line_60 $$ public void testArrayAppendFunctionInWhere4() -->Line_64 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_64 $$ rs.next()[ FD ]
Line_60 $$ public void testArrayAppendFunctionInWhere4() -->Line_65 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_65 $$ rs.getString(1)[ FD ]
Line_60 $$ public void testArrayAppendFunctionInWhere4() -->Line_66 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_66 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_70 $$ //6
public class func [ CD ]
Line_70 $$ //6
public class func -->Line_71 $$ public void testArrayPrependFunctionInWhere5() [ CD ]
Line_71 $$ public void testArrayPrependFunctionInWhere5() -->Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_72 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_71 $$ public void testArrayPrependFunctionInWhere5() -->Line_73 $$ initTables(conn)[ CD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_73 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_73 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_73 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_73 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_73 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_73 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_73 $$ initTables(conn)[ FD ]
Line_71 $$ public void testArrayPrependFunctionInWhere5() -->Line_74 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE ARRAY['foo','2345','46345','23234']=ARRAY_PREPEND('foo',varchars)")[ CD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_74 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_74 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_74 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_74 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_74 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_74 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_74 $$ conn.createStatement()[ FD ]
Line_71 $$ public void testArrayPrependFunctionInWhere5() -->Line_75 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_75 $$ rs.next()[ FD ]
Line_71 $$ public void testArrayPrependFunctionInWhere5() -->Line_76 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_76 $$ rs.getString(1)[ FD ]
Line_71 $$ public void testArrayPrependFunctionInWhere5() -->Line_77 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_77 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_81 $$ //7
public class func [ CD ]
Line_81 $$ //7
public class func -->Line_82 $$ public void testArrayToStringFunctionBigint() [ CD ]
Line_82 $$ public void testArrayToStringFunctionBigint() -->Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_83 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_82 $$ public void testArrayToStringFunctionBigint() -->Line_84 $$ initTables(conn)[ CD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_84 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_84 $$ initTables(conn)[ FD ]
Line_82 $$ public void testArrayToStringFunctionBigint() -->Line_85 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(bigints, ', ') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_85 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_85 $$ conn.createStatement()[ FD ]
Line_82 $$ public void testArrayToStringFunctionBigint() -->Line_86 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_86 $$ rs.next()[ FD ]
Line_82 $$ public void testArrayToStringFunctionBigint() -->Line_87 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_87 $$ rs.getString(1)[ FD ]
Line_82 $$ public void testArrayToStringFunctionBigint() -->Line_88 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_88 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_92 $$ //8
public class func [ CD ]
Line_92 $$ //8
public class func -->Line_93 $$ public void testArrayToStringFunctionDouble2() [ CD ]
Line_93 $$ public void testArrayToStringFunctionDouble2() -->Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_94 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_93 $$ public void testArrayToStringFunctionDouble2() -->Line_95 $$ initTables(conn)[ CD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_95 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_95 $$ initTables(conn)[ FD ]
Line_93 $$ public void testArrayToStringFunctionDouble2() -->Line_96 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY[2.3, 4.5], ', ') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_96 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_96 $$ conn.createStatement()[ FD ]
Line_93 $$ public void testArrayToStringFunctionDouble2() -->Line_97 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_97 $$ rs.next()[ FD ]
Line_93 $$ public void testArrayToStringFunctionDouble2() -->Line_98 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_98 $$ rs.getString(1)[ FD ]
Line_93 $$ public void testArrayToStringFunctionDouble2() -->Line_99 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_99 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_103 $$ //9
public class func [ CD ]
Line_103 $$ //9
public class func -->Line_104 $$ public void testArrayToStringFunctionInWhere6() [ CD ]
Line_104 $$ public void testArrayToStringFunctionInWhere6() -->Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_105 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_104 $$ public void testArrayToStringFunctionInWhere6() -->Line_106 $$ initTables(conn)[ CD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_106 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_106 $$ initTables(conn)[ FD ]
Line_104 $$ public void testArrayToStringFunctionInWhere6() -->Line_107 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE ARRAY_TO_STRING(ARRAY[1,2,3], varchar1) = '1, 2, 3'")[ CD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_107 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_107 $$ conn.createStatement()[ FD ]
Line_104 $$ public void testArrayToStringFunctionInWhere6() -->Line_108 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_108 $$ rs.next()[ FD ]
Line_104 $$ public void testArrayToStringFunctionInWhere6() -->Line_109 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_109 $$ rs.getString(1)[ FD ]
Line_104 $$ public void testArrayToStringFunctionInWhere6() -->Line_110 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_110 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_114 $$ //10
public class func [ CD ]
Line_114 $$ //10
public class func -->Line_115 $$ public void testArrayToStringFunctionWithNulls5() [ CD ]
Line_115 $$ public void testArrayToStringFunctionWithNulls5() -->Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_116 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_115 $$ public void testArrayToStringFunctionWithNulls5() -->Line_117 $$ initTables(conn)[ CD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_117 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_117 $$ initTables(conn)[ FD ]
Line_115 $$ public void testArrayToStringFunctionWithNulls5() -->Line_118 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY['a', 'b', NULL], ', ', '*') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_118 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_118 $$ conn.createStatement()[ FD ]
Line_115 $$ public void testArrayToStringFunctionWithNulls5() -->Line_119 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_119 $$ rs.next()[ FD ]
Line_115 $$ public void testArrayToStringFunctionWithNulls5() -->Line_120 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_120 $$ rs.getString(1)[ FD ]
Line_115 $$ public void testArrayToStringFunctionWithNulls5() -->Line_121 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_121 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_125 $$ //11
public class func [ CD ]
Line_125 $$ //11
public class func -->Line_126 $$ public void testArrayToStringFunctionVarchar1() [ CD ]
Line_126 $$ public void testArrayToStringFunctionVarchar1() -->Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_127 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_126 $$ public void testArrayToStringFunctionVarchar1() -->Line_128 $$ initTables(conn)[ CD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_128 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_128 $$ initTables(conn)[ FD ]
Line_126 $$ public void testArrayToStringFunctionVarchar1() -->Line_129 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(varchars, ',','*') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_129 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_129 $$ conn.createStatement()[ FD ]
Line_126 $$ public void testArrayToStringFunctionVarchar1() -->Line_130 $$ assertTrue(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_130 $$ rs.next()[ FD ]
Line_126 $$ public void testArrayToStringFunctionVarchar1() -->Line_131 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_131 $$ rs.getString(1)[ FD ]
Line_126 $$ public void testArrayToStringFunctionVarchar1() -->Line_132 $$ assertFalse(rs.next())[ CD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_132 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_136 $$ //12
public class func [ CD ]
Line_136 $$ //12
public class func -->Line_137 $$ public void testCeilDate() [ CD ]
Line_137 $$ public void testCeilDate() -->Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_138 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_137 $$ public void testCeilDate() -->Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_139 $$ conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")[ CD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_139 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_139 $$ conn.createStatement()[ FD ]
Line_137 $$ public void testCeilDate() -->Line_140 $$ assertTrue(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_140 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_140 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_144 $$ //13
public class func [ CD ]
Line_144 $$ //13
public class func -->Line_145 $$ public void testNullReverse() [ CD ]
Line_145 $$ public void testNullReverse() -->Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_146 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_145 $$ public void testNullReverse() -->Line_147 $$ initTable(conn, "ASC", s)[ CD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_147 $$ initTable(conn, "ASC", s)[ FD ]
Line_145 $$ public void testNullReverse() -->Line_148 $$ conn.createStatement().executeQuery("SELECT reverse(kv) FROM REVERSE_TEST")[ CD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_148 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_148 $$ conn.createStatement()[ FD ]
Line_145 $$ public void testNullReverse() -->Line_149 $$ assertTrue(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_149 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_149 $$ rs.next()[ FD ]
Line_145 $$ public void testNullReverse() -->Line_150 $$ assertNull(rs.getString(1))[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_150 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_150 $$ rs.getString(1)[ FD ]
Line_145 $$ public void testNullReverse() -->Line_151 $$ assertFalse(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_151 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_151 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_155 $$ //14
public class func [ CD ]
Line_155 $$ //14
public class func -->Line_156 $$ public void testArrayToStringFunctionInWhere2() [ CD ]
Line_156 $$ public void testArrayToStringFunctionInWhere2() -->Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_157 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_156 $$ public void testArrayToStringFunctionInWhere2() -->Line_158 $$ initTables(conn)[ CD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_158 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_158 $$ initTables(conn)[ FD ]
Line_156 $$ public void testArrayToStringFunctionInWhere2() -->Line_159 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE 'a,b,c' = ARRAY_TO_STRING(ARRAY['a', 'b', 'c'], ',')")[ CD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_159 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_159 $$ conn.createStatement()[ FD ]
Line_156 $$ public void testArrayToStringFunctionInWhere2() -->Line_160 $$ assertTrue(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_160 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_160 $$ rs.next()[ FD ]
Line_156 $$ public void testArrayToStringFunctionInWhere2() -->Line_161 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_161 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_161 $$ rs.getString(1)[ FD ]
Line_156 $$ public void testArrayToStringFunctionInWhere2() -->Line_162 $$ assertFalse(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_162 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_162 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_166 $$ //15
public class func [ CD ]
Line_166 $$ //15
public class func -->Line_167 $$ public void testArrayFillFunctionInWhere4() [ CD ]
Line_167 $$ public void testArrayFillFunctionInWhere4() -->Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_168 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_167 $$ public void testArrayFillFunctionInWhere4() -->Line_169 $$ initTables(conn)[ CD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_169 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_169 $$ initTables(conn)[ FD ]
Line_167 $$ public void testArrayFillFunctionInWhere4() -->Line_170 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE ARRAY[23.45, 23.45, 23.45]=ARRAY_FILL(23.45, 3)")[ CD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_170 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_170 $$ conn.createStatement()[ FD ]
Line_167 $$ public void testArrayFillFunctionInWhere4() -->Line_171 $$ assertTrue(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_171 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_171 $$ rs.next()[ FD ]
Line_167 $$ public void testArrayFillFunctionInWhere4() -->Line_172 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_172 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_172 $$ rs.getString(1)[ FD ]
Line_167 $$ public void testArrayFillFunctionInWhere4() -->Line_173 $$ assertFalse(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_173 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_173 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_177 $$ //16
public class func [ CD ]
Line_177 $$ //16
public class func -->Line_178 $$ public void testArrayToStringFunctionChar1() [ CD ]
Line_178 $$ public void testArrayToStringFunctionChar1() -->Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_179 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_178 $$ public void testArrayToStringFunctionChar1() -->Line_180 $$ initTables(conn)[ CD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_180 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_180 $$ initTables(conn)[ FD ]
Line_178 $$ public void testArrayToStringFunctionChar1() -->Line_181 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(chars, ', ') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_181 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_181 $$ conn.createStatement()[ FD ]
Line_178 $$ public void testArrayToStringFunctionChar1() -->Line_182 $$ assertTrue(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_182 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_182 $$ rs.next()[ FD ]
Line_178 $$ public void testArrayToStringFunctionChar1() -->Line_183 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_183 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_183 $$ rs.getString(1)[ FD ]
Line_178 $$ public void testArrayToStringFunctionChar1() -->Line_184 $$ assertFalse(rs.next())[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_184 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_184 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_188 $$ //17
public class func [ CD ]
Line_188 $$ //17
public class func -->Line_189 $$ public void testSettingsAsProperties() [ CD ]
Line_189 $$ public void testSettingsAsProperties() -->Line_190 $$ String url = getURL("driver", true)[ CD ]
Line_190 $$ String url = getURL("driver", true)-->Line_190 $$ getURL("driver", true)[ CD ]
Line_189 $$ public void testSettingsAsProperties() -->Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)[ CD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_191 $$ DriverManager.getConnection(url, prop)[ CD ]
Line_190 $$ String url = getURL("driver", true)-->Line_191 $$ DriverManager.getConnection(url, prop)[ FD ]
Line_189 $$ public void testSettingsAsProperties() -->Line_192 $$ conn.createStatement().executeQuery("select * from information_schema.settings where name='MAX_COMPACT_TIME'")[ CD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_192 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_192 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_192 $$ conn.createStatement()[ FD ]
Line_189 $$ public void testSettingsAsProperties() -->Line_194 $$ rs.next()[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_194 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_194 $$ rs.next()[ FD ]
Line_189 $$ public void testSettingsAsProperties() -->Line_195 $$ assertEquals(1234, rs.getInt(2))[ CD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_195 $$ rs.getInt(2)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_195 $$ rs.getInt(2)[ FD ]
Line_189 $$ public void testSettingsAsProperties() -->Line_196 $$ conn.close()[ CD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_196 $$ conn.close()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_196 $$ conn.close()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_196 $$ conn.close()[ FD ]
Line_0 $$ Entry-->Line_200 $$ //18
public class func [ CD ]
Line_200 $$ //18
public class func -->Line_201 $$ public void testFloorDateInWhere() [ CD ]
Line_201 $$ public void testFloorDateInWhere() -->Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_202 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_201 $$ public void testFloorDateInWhere() -->Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")[ CD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_203 $$ conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")[ CD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_203 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_203 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_203 $$ conn.createStatement()[ FD ]
Line_201 $$ public void testFloorDateInWhere() -->Line_204 $$ assertTrue(rs.next())[ CD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_204 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_204 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_204 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_208 $$ //19
public class func [ CD ]
Line_208 $$ //19
public class func -->Line_209 $$ public void testCeilDouble() [ CD ]
Line_209 $$ public void testCeilDouble() -->Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_210 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_209 $$ public void testCeilDouble() -->Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")[ CD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_211 $$ conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")[ CD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_211 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_211 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_211 $$ conn.createStatement()[ FD ]
Line_209 $$ public void testCeilDouble() -->Line_212 $$ assertTrue(rs.next())[ CD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_212 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_212 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_212 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_212 $$ rs.next()[ FD ]
Line_209 $$ public void testCeilDouble() -->Line_213 $$ assertEquals(0, Doubles.compare(2, rs.getDouble(1)))[ CD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_213 $$ rs.getDouble(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_213 $$ rs.getDouble(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_213 $$ rs.getDouble(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_213 $$ rs.getDouble(1)[ FD ]
Line_209 $$ public void testCeilDouble() -->Line_214 $$ assertEquals(0, Doubles.compare(1.3, rs.getDouble(2)))[ CD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_214 $$ rs.getDouble(2)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_214 $$ rs.getDouble(2)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_214 $$ rs.getDouble(2)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_214 $$ rs.getDouble(2)[ FD ]
Line_209 $$ public void testCeilDouble() -->Line_215 $$ assertEquals(0, Doubles.compare(1.27, rs.getDouble(3)))[ CD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_215 $$ rs.getDouble(3)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_215 $$ rs.getDouble(3)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_215 $$ rs.getDouble(3)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_215 $$ rs.getDouble(3)[ FD ]
Line_209 $$ public void testCeilDouble() -->Line_216 $$ assertEquals(0, Doubles.compare(1.264, rs.getDouble(4)))[ CD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_216 $$ rs.getDouble(4)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_216 $$ rs.getDouble(4)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_216 $$ rs.getDouble(4)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_216 $$ rs.getDouble(4)[ FD ]
Line_0 $$ Entry-->Line_220 $$ //20
public class func [ CD ]
Line_220 $$ //20
public class func -->Line_221 $$ public void testCeilDateInWhere() [ CD ]
Line_221 $$ public void testCeilDateInWhere() -->Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_222 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_221 $$ public void testCeilDateInWhere() -->Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")[ CD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_223 $$ conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")[ CD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_223 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_223 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_223 $$ conn.createStatement()[ FD ]
Line_221 $$ public void testCeilDateInWhere() -->Line_224 $$ assertTrue(rs.next())[ CD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_224 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_224 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_224 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_224 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_224 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_228 $$ //21
public class func [ CD ]
Line_228 $$ //21
public class func -->Line_229 $$ public void testSplit_InFilter() [ CD ]
Line_229 $$ public void testSplit_InFilter() -->Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_230 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_229 $$ public void testSplit_InFilter() -->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ CD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_231 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_229 $$ public void testSplit_InFilter() -->Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_232 $$ conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")[ CD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_232 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_232 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_232 $$ conn.createStatement()[ FD ]
Line_229 $$ public void testSplit_InFilter() -->Line_234 $$ assertTrue(rs.next())[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_234 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_234 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_234 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_234 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_234 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_234 $$ rs.next()[ FD ]
Line_229 $$ public void testSplit_InFilter() -->Line_235 $$ assertEquals(1, rs.getInt(1))[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_235 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_235 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_235 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_235 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_235 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_235 $$ rs.getInt(1)[ FD ]
Line_229 $$ public void testSplit_InFilter() -->Line_236 $$ assertFalse(rs.next())[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_236 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_236 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_236 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_236 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_236 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_236 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_240 $$ //22
public class func [ CD ]
Line_240 $$ //22
public class func -->Line_241 $$ public void testArrayToStringFunctionInWhere5() [ CD ]
Line_241 $$ public void testArrayToStringFunctionInWhere5() -->Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_242 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_241 $$ public void testArrayToStringFunctionInWhere5() -->Line_243 $$ initTables(conn)[ CD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_243 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_243 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_243 $$ initTables(conn)[ FD ]
Line_241 $$ public void testArrayToStringFunctionInWhere5() -->Line_244 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE 'a, bbbb, c, ddd, e' = ARRAY_TO_STRING(ARRAY['a', 'bbbb', 'c' , 'ddd', 'e'], ', ')")[ CD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_244 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_244 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_244 $$ conn.createStatement()[ FD ]
Line_241 $$ public void testArrayToStringFunctionInWhere5() -->Line_245 $$ assertTrue(rs.next())[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_245 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_245 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_245 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_245 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_245 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_245 $$ rs.next()[ FD ]
Line_241 $$ public void testArrayToStringFunctionInWhere5() -->Line_246 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_246 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_246 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_246 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_246 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_246 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_246 $$ rs.getString(1)[ FD ]
Line_241 $$ public void testArrayToStringFunctionInWhere5() -->Line_247 $$ assertFalse(rs.next())[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_247 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_247 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_247 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_247 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_247 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_247 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_251 $$ //23
public class func [ CD ]
Line_251 $$ //23
public class func -->Line_252 $$ public void testArrayToStringFunctionInWhere3() [ CD ]
Line_252 $$ public void testArrayToStringFunctionInWhere3() -->Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_253 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_252 $$ public void testArrayToStringFunctionInWhere3() -->Line_254 $$ initTables(conn)[ CD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_254 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_254 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_254 $$ initTables(conn)[ FD ]
Line_252 $$ public void testArrayToStringFunctionInWhere3() -->Line_255 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE '1.1,2.2,3.3' = ARRAY_TO_STRING(ARRAY[1.1, 2.2, 3.3], ',')")[ CD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_255 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_255 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_255 $$ conn.createStatement()[ FD ]
Line_252 $$ public void testArrayToStringFunctionInWhere3() -->Line_256 $$ assertTrue(rs.next())[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_256 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_256 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_256 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_256 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_256 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_256 $$ rs.next()[ FD ]
Line_252 $$ public void testArrayToStringFunctionInWhere3() -->Line_257 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_257 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_257 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_257 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_257 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_257 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_257 $$ rs.getString(1)[ FD ]
Line_252 $$ public void testArrayToStringFunctionInWhere3() -->Line_258 $$ assertFalse(rs.next())[ CD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_258 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_258 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_258 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_258 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_258 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_258 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_262 $$ //24
public class func [ CD ]
Line_262 $$ //24
public class func -->Line_263 $$ public void testSplit_ArrayReference() [ CD ]
Line_263 $$ public void testSplit_ArrayReference() -->Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_264 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_263 $$ public void testSplit_ArrayReference() -->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ CD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_265 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_263 $$ public void testSplit_ArrayReference() -->Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")[ CD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_266 $$ conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")[ CD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_266 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_266 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_266 $$ conn.createStatement()[ FD ]
Line_263 $$ public void testSplit_ArrayReference() -->Line_268 $$ assertTrue(rs.next())[ CD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_268 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_268 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_268 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_268 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_268 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_268 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_268 $$ rs.next()[ FD ]
Line_263 $$ public void testSplit_ArrayReference() -->Line_269 $$ assertEquals("ONE", rs.getString(1))[ CD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_269 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_269 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_269 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_269 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_269 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_269 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_269 $$ rs.getString(1)[ FD ]
Line_263 $$ public void testSplit_ArrayReference() -->Line_270 $$ assertFalse(rs.next())[ CD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_270 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_270 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_270 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_270 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_270 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_270 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_270 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_274 $$ //25
public class func [ CD ]
Line_274 $$ //25
public class func -->Line_275 $$ public void testSplit_NullDynamicSeparator() [ CD ]
Line_275 $$ public void testSplit_NullDynamicSeparator() -->Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_276 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_275 $$ public void testSplit_NullDynamicSeparator() -->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ CD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_277 $$ initTable(conn, "ONE,TWO,THREE", null)[ FD ]
Line_275 $$ public void testSplit_NullDynamicSeparator() -->Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_278 $$ conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")[ CD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_278 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_278 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_278 $$ conn.createStatement()[ FD ]
Line_275 $$ public void testSplit_NullDynamicSeparator() -->Line_280 $$ assertTrue(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_280 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_280 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_280 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_280 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_280 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_280 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_280 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_280 $$ rs.next()[ FD ]
Line_275 $$ public void testSplit_NullDynamicSeparator() -->Line_281 $$ assertNull(rs.getString(1))[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_281 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_281 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_281 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_281 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_281 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_281 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_281 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_281 $$ rs.getString(1)[ FD ]
Line_275 $$ public void testSplit_NullDynamicSeparator() -->Line_282 $$ assertFalse(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_282 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_282 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_282 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_282 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_282 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_282 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_282 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_282 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_286 $$ //26
public class func [ CD ]
Line_286 $$ //26
public class func -->Line_287 $$ public void testArrayFillFunctionInWhere3() [ CD ]
Line_287 $$ public void testArrayFillFunctionInWhere3() -->Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_288 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_287 $$ public void testArrayFillFunctionInWhere3() -->Line_289 $$ initTables(conn)[ CD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_289 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_289 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_289 $$ initTables(conn)[ FD ]
Line_287 $$ public void testArrayFillFunctionInWhere3() -->Line_290 $$ conn.createStatement().executeQuery("SELECT region_name FROM regions WHERE ARRAY['2345', '2345', '2345', '2345']=ARRAY_FILL('2345', 4)")[ CD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_290 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_290 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_290 $$ conn.createStatement()[ FD ]
Line_287 $$ public void testArrayFillFunctionInWhere3() -->Line_291 $$ assertTrue(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_291 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_291 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_291 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_291 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_291 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_291 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_291 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_291 $$ rs.next()[ FD ]
Line_287 $$ public void testArrayFillFunctionInWhere3() -->Line_292 $$ assertEquals("SF Bay Area", rs.getString(1))[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_292 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_292 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_292 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_292 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_292 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_292 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_292 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_292 $$ rs.getString(1)[ FD ]
Line_287 $$ public void testArrayFillFunctionInWhere3() -->Line_293 $$ assertFalse(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_293 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_293 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_293 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_293 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_293 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_293 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_293 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_293 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_297 $$ //27
public class func [ CD ]
Line_297 $$ //27
public class func -->Line_298 $$ public void testArrayToStringFunctionWithNulls3() [ CD ]
Line_298 $$ public void testArrayToStringFunctionWithNulls3() -->Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_299 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_298 $$ public void testArrayToStringFunctionWithNulls3() -->Line_300 $$ initTables(conn)[ CD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_300 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_300 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_300 $$ initTables(conn)[ FD ]
Line_298 $$ public void testArrayToStringFunctionWithNulls3() -->Line_301 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY[NULL, 'a', 'b'], ', ', '*') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_301 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_301 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_301 $$ conn.createStatement()[ FD ]
Line_298 $$ public void testArrayToStringFunctionWithNulls3() -->Line_302 $$ assertTrue(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_302 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_302 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_302 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_302 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_302 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_302 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_302 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_302 $$ rs.next()[ FD ]
Line_298 $$ public void testArrayToStringFunctionWithNulls3() -->Line_303 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_303 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_303 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_303 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_303 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_303 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_303 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_303 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_303 $$ rs.getString(1)[ FD ]
Line_298 $$ public void testArrayToStringFunctionWithNulls3() -->Line_304 $$ assertFalse(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_304 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_304 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_304 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_304 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_304 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_304 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_304 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_304 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_308 $$ //28
public class func [ CD ]
Line_308 $$ //28
public class func -->Line_309 $$ public void testArrayToStringFunctionWithNulls1() [ CD ]
Line_309 $$ public void testArrayToStringFunctionWithNulls1() -->Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_310 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_309 $$ public void testArrayToStringFunctionWithNulls1() -->Line_311 $$ initTables(conn)[ CD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_311 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_311 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_311 $$ initTables(conn)[ FD ]
Line_309 $$ public void testArrayToStringFunctionWithNulls1() -->Line_312 $$ conn.createStatement().executeQuery("SELECT ARRAY_TO_STRING(ARRAY['a', NULL, 'b'], ', ','*') FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_312 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_312 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_312 $$ conn.createStatement()[ FD ]
Line_309 $$ public void testArrayToStringFunctionWithNulls1() -->Line_313 $$ assertTrue(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_313 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_313 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_313 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_313 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_313 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_313 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_313 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_313 $$ rs.next()[ FD ]
Line_309 $$ public void testArrayToStringFunctionWithNulls1() -->Line_314 $$ assertEquals(expected, rs.getString(1))[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_314 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_314 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_314 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_314 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_314 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_314 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_314 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_314 $$ rs.getString(1)[ FD ]
Line_309 $$ public void testArrayToStringFunctionWithNulls1() -->Line_315 $$ assertFalse(rs.next())[ CD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_315 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_315 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_315 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_315 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_315 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_315 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_315 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_315 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_319 $$ //29
public class func [ CD ]
Line_319 $$ //29
public class func -->Line_320 $$ public void testRoundingUpDate() [ CD ]
Line_320 $$ public void testRoundingUpDate() -->Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_321 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_320 $$ public void testRoundingUpDate() -->Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")[ CD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_322 $$ conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")[ CD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_322 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_322 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_322 $$ conn.createStatement()[ FD ]
Line_320 $$ public void testRoundingUpDate() -->Line_323 $$ assertTrue(rs.next())[ CD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_323 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_323 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_323 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_323 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_323 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_323 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_323 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_323 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_323 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_327 $$ //30
public class func [ CD ]
Line_327 $$ //30
public class func -->Line_328 $$ public void testRoundingUpTimestamp() [ CD ]
Line_328 $$ public void testRoundingUpTimestamp() -->Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_329 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_328 $$ public void testRoundingUpTimestamp() -->Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")[ CD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_330 $$ conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")[ CD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_330 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_330 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_330 $$ conn.createStatement()[ FD ]
Line_328 $$ public void testRoundingUpTimestamp() -->Line_331 $$ assertTrue(rs.next())[ CD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_331 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_331 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_331 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_331 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_331 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_331 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_331 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_331 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_331 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_331 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_335 $$ //31
public class func [ CD ]
Line_335 $$ //31
public class func -->Line_336 $$ public void testRoundingUpDecimal() [ CD ]
Line_336 $$ public void testRoundingUpDecimal() -->Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_337 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_336 $$ public void testRoundingUpDecimal() -->Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")[ CD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_338 $$ conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")[ CD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_338 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_338 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_338 $$ conn.createStatement()[ FD ]
Line_336 $$ public void testRoundingUpDecimal() -->Line_339 $$ assertTrue(rs.next())[ CD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_339 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_339 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_339 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_339 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_339 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_339 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_339 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_339 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_339 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_339 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_339 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_343 $$ //32
public class func [ CD ]
Line_343 $$ //32
public class func -->Line_344 $$ public void testFalseOrFalse() [ CD ]
Line_344 $$ public void testFalseOrFalse() -->Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)[ CD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_345 $$ DriverManager.getConnection(getUrl(), props)[ CD ]
Line_344 $$ public void testFalseOrFalse() -->Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")[ CD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_346 $$ conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")[ CD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_346 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_346 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_346 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_346 $$ conn.createStatement()[ FD ]
Line_344 $$ public void testFalseOrFalse() -->Line_347 $$ assertTrue(rs.next())[ CD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_347 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_347 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_347 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_347 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_347 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_347 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_347 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_347 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_347 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_347 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_347 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_347 $$ rs.next()[ FD ]
Line_344 $$ public void testFalseOrFalse() -->Line_348 $$ assertFalse(rs.getBoolean(1))[ CD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_348 $$ rs.getBoolean(1)[ FD ]
Line_344 $$ public void testFalseOrFalse() -->Line_349 $$ conn.close()[ CD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_349 $$ conn.close()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_349 $$ conn.close()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_349 $$ conn.close()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_349 $$ conn.close()[ FD ]
Line_0 $$ Entry-->Line_353 $$ //33
public class func [ CD ]
Line_353 $$ //33
public class func -->Line_354 $$ public void testRoundingUpDecimalInWhere() [ CD ]
Line_354 $$ public void testRoundingUpDecimalInWhere() -->Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_355 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_354 $$ public void testRoundingUpDecimalInWhere() -->Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")[ CD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_356 $$ conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")[ CD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_356 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_356 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_356 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_356 $$ conn.createStatement()[ FD ]
Line_354 $$ public void testRoundingUpDecimalInWhere() -->Line_357 $$ assertTrue(rs.next())[ CD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_357 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_357 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_357 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_357 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_357 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_357 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_357 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_357 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_357 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_357 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_357 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_357 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_357 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_361 $$ //34
public class func [ CD ]
Line_361 $$ //34
public class func -->Line_362 $$ public void testArrayPrependFunctionNulls1() [ CD ]
Line_362 $$ public void testArrayPrependFunctionNulls1() -->Line_363 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_362 $$ public void testArrayPrependFunctionNulls1() -->Line_364 $$ conn.createStatement().executeQuery("SELECT ARRAY_PREPEND(b,a) FROM t WHERE k = 'a'")[ CD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_364 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_364 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_364 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_364 $$ conn.createStatement()[ FD ]
Line_362 $$ public void testArrayPrependFunctionNulls1() -->Line_365 $$ assertTrue(rs.next())[ CD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_365 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_365 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_365 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_365 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_365 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_365 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_365 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_365 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_365 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_365 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_365 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_365 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_365 $$ rs.next()[ FD ]
Line_362 $$ public void testArrayPrependFunctionNulls1() -->Line_366 $$ assertEquals(array2, rs.getArray(1))[ CD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_366 $$ rs.getArray(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_366 $$ rs.getArray(1)[ FD ]
Line_0 $$ Entry-->Line_370 $$ //35
public class func [ CD ]
Line_370 $$ //35
public class func -->Line_371 $$ public void testFloorDate() [ CD ]
Line_371 $$ public void testFloorDate() -->Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_372 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_371 $$ public void testFloorDate() -->Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")[ CD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_373 $$ conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")[ CD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_373 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_373 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_373 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_373 $$ conn.createStatement()[ FD ]
Line_371 $$ public void testFloorDate() -->Line_374 $$ assertTrue(rs.next())[ CD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_374 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_374 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_374 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_374 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_374 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_374 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_374 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_374 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_374 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_374 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_374 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_374 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_374 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_374 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_378 $$ //36
public class func [ CD ]
Line_378 $$ //36
public class func -->Line_379 $$ public void testFloorDouble() [ CD ]
Line_379 $$ public void testFloorDouble() -->Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_380 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_379 $$ public void testFloorDouble() -->Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")[ CD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_381 $$ conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")[ CD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_381 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_381 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_381 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_381 $$ conn.createStatement()[ FD ]
Line_379 $$ public void testFloorDouble() -->Line_382 $$ assertTrue(rs.next())[ CD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_382 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_382 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_382 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_382 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_382 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_382 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_382 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_382 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_382 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_382 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_382 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_382 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_382 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_382 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_382 $$ rs.next()[ FD ]
Line_379 $$ public void testFloorDouble() -->Line_383 $$ assertEquals(0, Doubles.compare(1, rs.getDouble(1)))[ CD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_383 $$ rs.getDouble(1)[ FD ]
Line_379 $$ public void testFloorDouble() -->Line_384 $$ assertEquals(0, Doubles.compare(1.2, rs.getDouble(2)))[ CD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_384 $$ rs.getDouble(2)[ FD ]
Line_379 $$ public void testFloorDouble() -->Line_385 $$ assertEquals(0, Doubles.compare(1.26, rs.getDouble(3)))[ CD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_385 $$ rs.getDouble(3)[ FD ]
Line_379 $$ public void testFloorDouble() -->Line_386 $$ assertEquals(0, Doubles.compare(1.264, rs.getDouble(4)))[ CD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_386 $$ rs.getDouble(4)[ FD ]
Line_0 $$ Entry-->Line_390 $$ //37
public class func [ CD ]
Line_390 $$ //37
public class func -->Line_391 $$ public void testRoundFloat() [ CD ]
Line_391 $$ public void testRoundFloat() -->Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_392 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_391 $$ public void testRoundFloat() -->Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")[ CD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_393 $$ conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")[ CD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_393 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_393 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_393 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_393 $$ conn.createStatement()[ FD ]
Line_391 $$ public void testRoundFloat() -->Line_394 $$ assertTrue(rs.next())[ CD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_394 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_394 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_394 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_394 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_394 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_394 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_394 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_394 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_394 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_394 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_394 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_394 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_394 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_394 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_394 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_394 $$ rs.next()[ FD ]
Line_391 $$ public void testRoundFloat() -->Line_395 $$ assertEquals(0, Floats.compare(1, rs.getFloat(1)))[ CD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_395 $$ rs.getFloat(1)[ FD ]
Line_391 $$ public void testRoundFloat() -->Line_396 $$ assertEquals(0, Floats.compare(1.3f, rs.getFloat(2)))[ CD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_396 $$ rs.getFloat(2)[ FD ]
Line_391 $$ public void testRoundFloat() -->Line_397 $$ assertEquals(0, Floats.compare(1.26f, rs.getFloat(3)))[ CD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_397 $$ rs.getFloat(3)[ FD ]
Line_391 $$ public void testRoundFloat() -->Line_398 $$ assertEquals(0, Floats.compare(1.264f, rs.getFloat(4)))[ CD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_398 $$ rs.getFloat(4)[ FD ]
Line_0 $$ Entry-->Line_402 $$ //38
public class func [ CD ]
Line_402 $$ //38
public class func -->Line_403 $$ public void testFloorTimestamp() [ CD ]
Line_403 $$ public void testFloorTimestamp() -->Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_404 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_403 $$ public void testFloorTimestamp() -->Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")[ CD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_405 $$ conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")[ CD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_405 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_405 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_405 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_405 $$ conn.createStatement()[ FD ]
Line_403 $$ public void testFloorTimestamp() -->Line_406 $$ assertTrue(rs.next())[ CD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_406 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_406 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_406 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_406 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_406 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_406 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_406 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_406 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_406 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_406 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_406 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_406 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_406 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_406 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_406 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_406 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_406 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_410 $$ //39
public class func [ CD ]
Line_410 $$ //39
public class func -->Line_411 $$ public void testFloorDoubleInWhere() [ CD ]
Line_411 $$ public void testFloorDoubleInWhere() -->Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_412 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_411 $$ public void testFloorDoubleInWhere() -->Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")[ CD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_413 $$ conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")[ CD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_413 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_413 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_413 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_413 $$ conn.createStatement()[ FD ]
Line_411 $$ public void testFloorDoubleInWhere() -->Line_414 $$ assertTrue(rs.next())[ CD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_414 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_414 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_414 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_414 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_414 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_414 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_414 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_414 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_414 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_414 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_414 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_414 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_414 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_414 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_414 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_414 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_414 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_414 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_418 $$ //40
public class func [ CD ]
Line_418 $$ //40
public class func -->Line_419 $$ public void testRoundingUpDateInWhere() [ CD ]
Line_419 $$ public void testRoundingUpDateInWhere() -->Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_420 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_419 $$ public void testRoundingUpDateInWhere() -->Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")[ CD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_421 $$ conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")[ CD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_421 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_421 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_421 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_421 $$ conn.createStatement()[ FD ]
Line_419 $$ public void testRoundingUpDateInWhere() -->Line_422 $$ assertTrue(rs.next())[ CD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_422 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_422 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_422 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_422 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_422 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_422 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_422 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_422 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_422 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_422 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_422 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_422 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_422 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_422 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_422 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_422 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_422 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_422 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_422 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_426 $$ //41
public class func [ CD ]
Line_426 $$ //41
public class func -->Line_427 $$ public void testRoundingUpTime() [ CD ]
Line_427 $$ public void testRoundingUpTime() -->Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_428 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_427 $$ public void testRoundingUpTime() -->Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")[ CD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_429 $$ conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")[ CD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_429 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_429 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_429 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_429 $$ conn.createStatement()[ FD ]
Line_427 $$ public void testRoundingUpTime() -->Line_430 $$ assertTrue(rs.next())[ CD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_430 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_430 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_430 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_430 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_430 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_430 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_430 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_430 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_430 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_430 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_430 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_430 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_430 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_430 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_434 $$ //42
public class func [ CD ]
Line_434 $$ //42
public class func -->Line_435 $$ public void testCount() [ CD ]
Line_435 $$ public void testCount() -->Line_436 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 1))[ CD ]
Line_435 $$ public void testCount() -->Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_437 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_435 $$ public void testCount() -->Line_438 $$ Statement stmt = conn.createStatement()[ CD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_438 $$ conn.createStatement()[ CD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_438 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_438 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_438 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_438 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_438 $$ conn.createStatement()[ FD ]
Line_435 $$ public void testCount() -->Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_439 $$ stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)[ CD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_439 $$ stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)[ FD ]
Line_435 $$ public void testCount() -->Line_440 $$ assertTrue(rs.next())[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_440 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_440 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_440 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_440 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_440 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_440 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_440 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_440 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_440 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_440 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_440 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_440 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_440 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_440 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_440 $$ rs.next()[ FD ]
Line_435 $$ public void testCount() -->Line_441 $$ assertEquals(8, rs.getInt(1))[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_441 $$ rs.getInt(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_441 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_441 $$ rs.getInt(1)[ FD ]
Line_435 $$ public void testCount() -->Line_442 $$ assertFalse(rs.next())[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_442 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_442 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_442 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_442 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_442 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_442 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_442 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_442 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_442 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_442 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_442 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_442 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_442 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_442 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_442 $$ rs.next()[ FD ]
Line_435 $$ public void testCount() -->Line_443 $$ conn.close()[ CD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_443 $$ conn.close()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_443 $$ conn.close()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_443 $$ conn.close()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_443 $$ conn.close()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_443 $$ conn.close()[ FD ]
Line_0 $$ Entry-->Line_447 $$ //43
public class func [ CD ]
Line_447 $$ //43
public class func -->Line_448 $$ public void testArrayFillFunctionTimestamp() [ CD ]
Line_448 $$ public void testArrayFillFunctionTimestamp() -->Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_449 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_448 $$ public void testArrayFillFunctionTimestamp() -->Line_450 $$ initTables(conn)[ CD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_450 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_450 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_450 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_450 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_450 $$ initTables(conn)[ FD ]
Line_448 $$ public void testArrayFillFunctionTimestamp() -->Line_451 $$ conn.createStatement().executeQuery("SELECT ARRAY_FILL(timestamp,3) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_451 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_451 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_451 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_451 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_451 $$ conn.createStatement()[ FD ]
Line_448 $$ public void testArrayFillFunctionTimestamp() -->Line_452 $$ assertTrue(rs.next())[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_452 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_452 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_452 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_452 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_452 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_452 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_452 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_452 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_452 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_452 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_452 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_452 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_452 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_452 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_452 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_456 $$ //44
public class func [ CD ]
Line_456 $$ //44
public class func -->Line_457 $$ public void testArrayAppendFunctionBigIntDesc() [ CD ]
Line_457 $$ public void testArrayAppendFunctionBigIntDesc() -->Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_458 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_457 $$ public void testArrayAppendFunctionBigIntDesc() -->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ CD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_459 $$ initTablesDesc(conn, "BIGINT", "1112")[ FD ]
Line_457 $$ public void testArrayAppendFunctionBigIntDesc() -->Line_460 $$ conn.createStatement().executeQuery("SELECT ARRAY_APPEND(bigints,pk) FROM regions")[ CD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_460 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_460 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_460 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_460 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_460 $$ conn.createStatement()[ FD ]
Line_457 $$ public void testArrayAppendFunctionBigIntDesc() -->Line_461 $$ assertTrue(rs.next())[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_461 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_461 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_461 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_461 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_461 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_461 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_461 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_461 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_461 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_461 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_461 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_461 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_461 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_461 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_461 $$ rs.next()[ FD ]
Line_457 $$ public void testArrayAppendFunctionBigIntDesc() -->Line_462 $$ Array array = conn.createArrayOf("BIGINT", longs)[ CD ]
Line_462 $$ Array array = conn.createArrayOf("BIGINT", longs)-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ CD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_462 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_0 $$ Entry-->Line_466 $$ //45
public class func [ CD ]
Line_466 $$ //45
public class func -->Line_467 $$ public void testArrayFillFunctionDouble() [ CD ]
Line_467 $$ public void testArrayFillFunctionDouble() -->Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_468 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_467 $$ public void testArrayFillFunctionDouble() -->Line_469 $$ initTables(conn)[ CD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_469 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_469 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_469 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_469 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_469 $$ initTables(conn)[ FD ]
Line_467 $$ public void testArrayFillFunctionDouble() -->Line_470 $$ conn.createStatement().executeQuery("SELECT ARRAY_FILL(double,4) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_470 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_470 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_470 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_470 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_470 $$ conn.createStatement()[ FD ]
Line_467 $$ public void testArrayFillFunctionDouble() -->Line_471 $$ assertTrue(rs.next())[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_471 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_471 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_471 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_471 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_471 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_471 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_471 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_471 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_471 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_471 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_471 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_471 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_471 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_471 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_471 $$ rs.next()[ FD ]
Line_467 $$ public void testArrayFillFunctionDouble() -->Line_472 $$ Array array = conn.createArrayOf("DOUBLE", objects)[ CD ]
Line_472 $$ Array array = conn.createArrayOf("DOUBLE", objects)-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ CD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_472 $$ conn.createArrayOf("DOUBLE", objects)[ FD ]
Line_0 $$ Entry-->Line_476 $$ //46
public class func [ CD ]
Line_476 $$ //46
public class func -->Line_477 $$ public void testArrayFillFunctionInteger() [ CD ]
Line_477 $$ public void testArrayFillFunctionInteger() -->Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_478 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_477 $$ public void testArrayFillFunctionInteger() -->Line_479 $$ initTables(conn)[ CD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_479 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_479 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_479 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_479 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_479 $$ initTables(conn)[ FD ]
Line_477 $$ public void testArrayFillFunctionInteger() -->Line_480 $$ conn.createStatement().executeQuery("SELECT ARRAY_FILL(integer,4) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_480 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_480 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_480 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_480 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_480 $$ conn.createStatement()[ FD ]
Line_477 $$ public void testArrayFillFunctionInteger() -->Line_481 $$ assertTrue(rs.next())[ CD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_481 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_481 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_481 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_481 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_481 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_481 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_481 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_481 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_481 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_481 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_481 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_481 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_481 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_481 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_481 $$ rs.next()[ FD ]
Line_477 $$ public void testArrayFillFunctionInteger() -->Line_482 $$ Array array = conn.createArrayOf("INTEGER", objects)[ CD ]
Line_482 $$ Array array = conn.createArrayOf("INTEGER", objects)-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ CD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_482 $$ conn.createArrayOf("INTEGER", objects)[ FD ]
Line_0 $$ Entry-->Line_486 $$ //47
public class func [ CD ]
Line_486 $$ //47
public class func -->Line_487 $$ public void testSplit_AlternateSeparator() [ CD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_488 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ CD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_489 $$ initTable(conn, "ONE:TWO:THREE")[ FD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")[ CD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_490 $$ conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")[ CD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_490 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_490 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_490 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_490 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_490 $$ conn.createStatement()[ FD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_492 $$ assertTrue(rs.next())[ CD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_492 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_492 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_492 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_492 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_492 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_492 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_492 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_492 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_492 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_492 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_492 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_492 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_492 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_492 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_492 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_492 $$ rs.next()[ FD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_493 $$ Array array = rs.getArray(1)[ CD ]
Line_493 $$ Array array = rs.getArray(1)-->Line_493 $$ rs.getArray(1)[ CD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_493 $$ rs.getArray(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_493 $$ rs.getArray(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_493 $$ rs.getArray(1)[ FD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_494 $$ String[] values = (String[]) array.getArray()[ CD ]
Line_493 $$ Array array = rs.getArray(1)-->Line_494 $$ array.getArray()[ FD ]
Line_482 $$ Array array = conn.createArrayOf("INTEGER", objects)-->Line_494 $$ array.getArray()[ FD ]
Line_472 $$ Array array = conn.createArrayOf("DOUBLE", objects)-->Line_494 $$ array.getArray()[ FD ]
Line_462 $$ Array array = conn.createArrayOf("BIGINT", longs)-->Line_494 $$ array.getArray()[ FD ]
Line_487 $$ public void testSplit_AlternateSeparator() -->Line_495 $$ assertArrayEquals(new String[] [ CD ]
Line_494 $$ String[] values = (String[]) array.getArray()-->Line_495 $$ assertArrayEquals(new String[] [ FD ]
Line_0 $$ Entry-->Line_499 $$ //48
public class func [ CD ]
Line_499 $$ //48
public class func -->Line_500 $$ public void testSplit_NoSplitString() [ CD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_501 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ CD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_502 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_503 $$ conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")[ CD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_503 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_503 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_503 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_503 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_503 $$ conn.createStatement()[ FD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_505 $$ assertTrue(rs.next())[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_505 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_505 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_505 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_505 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_505 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_505 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_505 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_505 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_505 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_505 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_505 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_505 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_505 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_505 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_505 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_505 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_505 $$ rs.next()[ FD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_506 $$ Array array = rs.getArray(1)[ CD ]
Line_506 $$ Array array = rs.getArray(1)-->Line_506 $$ rs.getArray(1)[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_506 $$ rs.getArray(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_506 $$ rs.getArray(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_506 $$ rs.getArray(1)[ FD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_507 $$ String[] values = (String[]) array.getArray()[ CD ]
Line_506 $$ Array array = rs.getArray(1)-->Line_507 $$ array.getArray()[ FD ]
Line_493 $$ Array array = rs.getArray(1)-->Line_507 $$ array.getArray()[ FD ]
Line_482 $$ Array array = conn.createArrayOf("INTEGER", objects)-->Line_507 $$ array.getArray()[ FD ]
Line_472 $$ Array array = conn.createArrayOf("DOUBLE", objects)-->Line_507 $$ array.getArray()[ FD ]
Line_462 $$ Array array = conn.createArrayOf("BIGINT", longs)-->Line_507 $$ array.getArray()[ FD ]
Line_500 $$ public void testSplit_NoSplitString() -->Line_508 $$ assertArrayEquals(new String[] [ CD ]
Line_507 $$ String[] values = (String[]) array.getArray()-->Line_508 $$ assertArrayEquals(new String[] [ FD ]
Line_494 $$ String[] values = (String[]) array.getArray()-->Line_508 $$ assertArrayEquals(new String[] [ FD ]
Line_0 $$ Entry-->Line_512 $$ //49
public class func [ CD ]
Line_512 $$ //49
public class func -->Line_513 $$ public void testArrayFillFunctionWithNestedFunctions3() [ CD ]
Line_513 $$ public void testArrayFillFunctionWithNestedFunctions3() -->Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_514 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_513 $$ public void testArrayFillFunctionWithNestedFunctions3() -->Line_515 $$ initTables(conn)[ CD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_515 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_515 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_515 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_515 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_515 $$ initTables(conn)[ FD ]
Line_513 $$ public void testArrayFillFunctionWithNestedFunctions3() -->Line_516 $$ conn.createStatement().executeQuery("SELECT ARRAY_FILL(3.4, ARRAY_LENGTH(ARRAY[34, 45])) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_516 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_516 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_516 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_516 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_516 $$ conn.createStatement()[ FD ]
Line_513 $$ public void testArrayFillFunctionWithNestedFunctions3() -->Line_517 $$ assertTrue(rs.next())[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_517 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_517 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_517 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_517 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_517 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_517 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_517 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_517 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_517 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_517 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_517 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_517 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_517 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_517 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_517 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_517 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_517 $$ rs.next()[ FD ]
Line_0 $$ Entry-->Line_521 $$ //50
public class func [ CD ]
Line_521 $$ //50
public class func -->Line_522 $$ public void testArrayPrependFunctionDouble() [ CD ]
Line_522 $$ public void testArrayPrependFunctionDouble() -->Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_523 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_522 $$ public void testArrayPrependFunctionDouble() -->Line_524 $$ initTables(conn)[ CD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_524 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_524 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_524 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_524 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_524 $$ initTables(conn)[ FD ]
Line_522 $$ public void testArrayPrependFunctionDouble() -->Line_525 $$ conn.createStatement().executeQuery("SELECT ARRAY_PREPEND(double1,doubles) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_525 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_525 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_525 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_525 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_525 $$ conn.createStatement()[ FD ]
Line_522 $$ public void testArrayPrependFunctionDouble() -->Line_526 $$ assertTrue(rs.next())[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_526 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_526 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_526 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_526 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_526 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_526 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_526 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_526 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_526 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_526 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_526 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_526 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_526 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_526 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_526 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_526 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_526 $$ rs.next()[ FD ]
Line_522 $$ public void testArrayPrependFunctionDouble() -->Line_527 $$ Array array = conn.createArrayOf("DOUBLE", doubles)[ CD ]
Line_527 $$ Array array = conn.createArrayOf("DOUBLE", doubles)-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ CD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_527 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_0 $$ Entry-->Line_531 $$ //51
public class func [ CD ]
Line_531 $$ //51
public class func -->Line_532 $$ public void testArrayConcatFunctionDouble() [ CD ]
Line_532 $$ public void testArrayConcatFunctionDouble() -->Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_533 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_532 $$ public void testArrayConcatFunctionDouble() -->Line_534 $$ initTables(conn)[ CD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_534 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_534 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_534 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_534 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_534 $$ initTables(conn)[ FD ]
Line_532 $$ public void testArrayConcatFunctionDouble() -->Line_535 $$ conn.createStatement().executeQuery("SELECT ARRAY_CAT(doubles,doubles) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_535 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_535 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_535 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_535 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_535 $$ conn.createStatement()[ FD ]
Line_532 $$ public void testArrayConcatFunctionDouble() -->Line_536 $$ assertTrue(rs.next())[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_536 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_536 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_536 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_536 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_536 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_536 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_536 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_536 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_536 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_536 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_536 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_536 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_536 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_536 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_536 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_536 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_536 $$ rs.next()[ FD ]
Line_532 $$ public void testArrayConcatFunctionDouble() -->Line_537 $$ Array array = conn.createArrayOf("DOUBLE", doubles)[ CD ]
Line_537 $$ Array array = conn.createArrayOf("DOUBLE", doubles)-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ CD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_537 $$ conn.createArrayOf("DOUBLE", doubles)[ FD ]
Line_0 $$ Entry-->Line_541 $$ //52
public class func [ CD ]
Line_541 $$ //52
public class func -->Line_542 $$ public void testArrayConcatFunctionChar2() [ CD ]
Line_542 $$ public void testArrayConcatFunctionChar2() -->Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_543 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_542 $$ public void testArrayConcatFunctionChar2() -->Line_544 $$ initTables(conn)[ CD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_544 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_544 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_544 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_544 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_544 $$ initTables(conn)[ FD ]
Line_542 $$ public void testArrayConcatFunctionChar2() -->Line_545 $$ conn.createStatement().executeQuery("SELECT ARRAY_CAT(chars,ARRAY['facfacfacfacfacfacfac','facfacfacfacfacfacfac']) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_545 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_545 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_545 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_545 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_545 $$ conn.createStatement()[ FD ]
Line_542 $$ public void testArrayConcatFunctionChar2() -->Line_546 $$ rs.next()[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_546 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_546 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_546 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_546 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_546 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_546 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_546 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_546 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_546 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_546 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_546 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_546 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_546 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_546 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_546 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_546 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_546 $$ rs.next()[ FD ]
Line_542 $$ public void testArrayConcatFunctionChar2() -->Line_547 $$ rs.getArray(1)[ CD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_547 $$ rs.getArray(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_547 $$ rs.getArray(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_547 $$ rs.getArray(1)[ FD ]
Line_0 $$ Entry-->Line_551 $$ //53
public class func [ CD ]
Line_551 $$ //53
public class func -->Line_552 $$ public void testSelectAfterUpsertInQuery() [ CD ]
Line_552 $$ public void testSelectAfterUpsertInQuery() -->Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_553 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_552 $$ public void testSelectAfterUpsertInQuery() -->Line_554 $$ initSelectAfterUpsertTable(conn)[ CD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_554 $$ initSelectAfterUpsertTable(conn)[ FD ]
Line_552 $$ public void testSelectAfterUpsertInQuery() -->Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_555 $$ conn.createStatement().executeQuery(query)[ CD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_555 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_555 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_555 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_555 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_555 $$ conn.createStatement()[ FD ]
Line_552 $$ public void testSelectAfterUpsertInQuery() -->Line_556 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_556 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_556 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_556 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_556 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_556 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_556 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_556 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_556 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_556 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_556 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_556 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_556 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_556 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_556 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_556 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_556 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_556 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_556 $$ rs.next()[ FD ]
Line_552 $$ public void testSelectAfterUpsertInQuery() -->Line_557 $$ assertEquals(0, rs.getInt(1))[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_557 $$ rs.getInt(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_557 $$ rs.getInt(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_557 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_557 $$ rs.getInt(1)[ FD ]
Line_552 $$ public void testSelectAfterUpsertInQuery() -->Line_558 $$ conn.close()[ CD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_558 $$ conn.close()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_558 $$ conn.close()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_558 $$ conn.close()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_558 $$ conn.close()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_558 $$ conn.close()[ FD ]
Line_0 $$ Entry-->Line_562 $$ //54
public class func [ CD ]
Line_562 $$ //54
public class func -->Line_563 $$ public void testArrayConcatFunctionChar() [ CD ]
Line_563 $$ public void testArrayConcatFunctionChar() -->Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_564 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_563 $$ public void testArrayConcatFunctionChar() -->Line_565 $$ initTables(conn)[ CD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_565 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_565 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_565 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_565 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_565 $$ initTables(conn)[ FD ]
Line_563 $$ public void testArrayConcatFunctionChar() -->Line_566 $$ conn.createStatement().executeQuery("SELECT ARRAY_CAT(chars,chars) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_566 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_566 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_566 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_566 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_566 $$ conn.createStatement()[ FD ]
Line_563 $$ public void testArrayConcatFunctionChar() -->Line_567 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_567 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_567 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_567 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_567 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_567 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_567 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_567 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_567 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_567 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_567 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_567 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_567 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_567 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_567 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_567 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_567 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_567 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_567 $$ rs.next()[ FD ]
Line_563 $$ public void testArrayConcatFunctionChar() -->Line_568 $$ Array array = conn.createArrayOf("CHAR", strings)[ CD ]
Line_568 $$ Array array = conn.createArrayOf("CHAR", strings)-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ CD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_568 $$ conn.createArrayOf("CHAR", strings)[ FD ]
Line_0 $$ Entry-->Line_572 $$ //55
public class func [ CD ]
Line_572 $$ //55
public class func -->Line_573 $$ public void testArrayAppendFunctionBooleanDesc() [ CD ]
Line_573 $$ public void testArrayAppendFunctionBooleanDesc() -->Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_574 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_573 $$ public void testArrayAppendFunctionBooleanDesc() -->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ CD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_575 $$ initTablesDesc(conn, "BOOLEAN", "false")[ FD ]
Line_573 $$ public void testArrayAppendFunctionBooleanDesc() -->Line_576 $$ conn.createStatement().executeQuery("SELECT ARRAY_APPEND(bools,pk) FROM regions")[ CD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_576 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_576 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_576 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_576 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_576 $$ conn.createStatement()[ FD ]
Line_573 $$ public void testArrayAppendFunctionBooleanDesc() -->Line_577 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_577 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_577 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_577 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_577 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_577 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_577 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_577 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_577 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_577 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_577 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_577 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_577 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_577 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_577 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_577 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_577 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_577 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_577 $$ rs.next()[ FD ]
Line_573 $$ public void testArrayAppendFunctionBooleanDesc() -->Line_578 $$ Array array = conn.createArrayOf("BOOLEAN", booleans)[ CD ]
Line_578 $$ Array array = conn.createArrayOf("BOOLEAN", booleans)-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ CD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_578 $$ conn.createArrayOf("BOOLEAN", booleans)[ FD ]
Line_0 $$ Entry-->Line_582 $$ //56
public class func [ CD ]
Line_582 $$ //56
public class func -->Line_583 $$ public void testArrayPrependFunctionVarchar() [ CD ]
Line_583 $$ public void testArrayPrependFunctionVarchar() -->Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_584 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_583 $$ public void testArrayPrependFunctionVarchar() -->Line_585 $$ initTables(conn)[ CD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_585 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_585 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_585 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_585 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_585 $$ initTables(conn)[ FD ]
Line_583 $$ public void testArrayPrependFunctionVarchar() -->Line_586 $$ conn.createStatement().executeQuery("SELECT ARRAY_PREPEND('34567',varchars) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_586 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_586 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_586 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_586 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_586 $$ conn.createStatement()[ FD ]
Line_583 $$ public void testArrayPrependFunctionVarchar() -->Line_587 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_587 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_587 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_587 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_587 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_587 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_587 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_587 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_587 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_587 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_587 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_587 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_587 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_587 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_587 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_587 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_587 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_587 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_587 $$ rs.next()[ FD ]
Line_583 $$ public void testArrayPrependFunctionVarchar() -->Line_588 $$ Array array = conn.createArrayOf("VARCHAR", strings)[ CD ]
Line_588 $$ Array array = conn.createArrayOf("VARCHAR", strings)-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ CD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_588 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_0 $$ Entry-->Line_592 $$ //57
public class func [ CD ]
Line_592 $$ //57
public class func -->Line_593 $$ public void testArrayAppendFunctionVarcharDesc() [ CD ]
Line_593 $$ public void testArrayAppendFunctionVarcharDesc() -->Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_594 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_593 $$ public void testArrayAppendFunctionVarcharDesc() -->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ CD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_595 $$ initTablesDesc(conn, "VARCHAR", "'e'")[ FD ]
Line_593 $$ public void testArrayAppendFunctionVarcharDesc() -->Line_596 $$ conn.createStatement().executeQuery("SELECT ARRAY_APPEND(varchars,pk) FROM regions")[ CD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_596 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_596 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_596 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_596 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_596 $$ conn.createStatement()[ FD ]
Line_593 $$ public void testArrayAppendFunctionVarcharDesc() -->Line_597 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_597 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_597 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_597 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_597 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_597 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_597 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_597 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_597 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_597 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_597 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_597 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_597 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_597 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_597 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_597 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_597 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_597 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_597 $$ rs.next()[ FD ]
Line_593 $$ public void testArrayAppendFunctionVarcharDesc() -->Line_598 $$ Array array = conn.createArrayOf("VARCHAR", strings)[ CD ]
Line_598 $$ Array array = conn.createArrayOf("VARCHAR", strings)-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ CD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_598 $$ conn.createArrayOf("VARCHAR", strings)[ FD ]
Line_0 $$ Entry-->Line_602 $$ //58
public class func [ CD ]
Line_602 $$ //58
public class func -->Line_603 $$ public void testArrayPrependFunctionIntegerDesc() [ CD ]
Line_603 $$ public void testArrayPrependFunctionIntegerDesc() -->Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_604 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_603 $$ public void testArrayPrependFunctionIntegerDesc() -->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ CD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_605 $$ initTablesDesc(conn, "INTEGER", "23")[ FD ]
Line_603 $$ public void testArrayPrependFunctionIntegerDesc() -->Line_606 $$ conn.createStatement().executeQuery("SELECT ARRAY_PREPEND(pk,integers) FROM regions")[ CD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_606 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_606 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_606 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_606 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_606 $$ conn.createStatement()[ FD ]
Line_603 $$ public void testArrayPrependFunctionIntegerDesc() -->Line_607 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_607 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_607 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_607 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_607 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_607 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_607 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_607 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_607 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_607 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_607 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_607 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_607 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_607 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_607 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_607 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_607 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_607 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_607 $$ rs.next()[ FD ]
Line_603 $$ public void testArrayPrependFunctionIntegerDesc() -->Line_608 $$ Array array = conn.createArrayOf("INTEGER", integers)[ CD ]
Line_608 $$ Array array = conn.createArrayOf("INTEGER", integers)-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ CD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_608 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_0 $$ Entry-->Line_612 $$ //59
public class func [ CD ]
Line_612 $$ //59
public class func -->Line_613 $$ public void testArrayConcatFunctionBigint() [ CD ]
Line_613 $$ public void testArrayConcatFunctionBigint() -->Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_614 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_613 $$ public void testArrayConcatFunctionBigint() -->Line_615 $$ initTables(conn)[ CD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_615 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_615 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_615 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_615 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_615 $$ initTables(conn)[ FD ]
Line_613 $$ public void testArrayConcatFunctionBigint() -->Line_616 $$ conn.createStatement().executeQuery("SELECT ARRAY_CAT(bigints,bigints) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_616 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_616 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_616 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_616 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_616 $$ conn.createStatement()[ FD ]
Line_613 $$ public void testArrayConcatFunctionBigint() -->Line_617 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_617 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_617 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_617 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_617 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_617 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_617 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_617 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_617 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_617 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_617 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_617 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_617 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_617 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_617 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_617 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_617 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_617 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_617 $$ rs.next()[ FD ]
Line_613 $$ public void testArrayConcatFunctionBigint() -->Line_618 $$ Array array = conn.createArrayOf("BIGINT", longs)[ CD ]
Line_618 $$ Array array = conn.createArrayOf("BIGINT", longs)-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ CD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_618 $$ conn.createArrayOf("BIGINT", longs)[ FD ]
Line_0 $$ Entry-->Line_622 $$ //60
public class func [ CD ]
Line_622 $$ //60
public class func -->Line_623 $$ public void testArrayPrependFunctionInteger() [ CD ]
Line_623 $$ public void testArrayPrependFunctionInteger() -->Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_624 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_623 $$ public void testArrayPrependFunctionInteger() -->Line_625 $$ initTables(conn)[ CD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_625 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_625 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_625 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_625 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_625 $$ initTables(conn)[ FD ]
Line_623 $$ public void testArrayPrependFunctionInteger() -->Line_626 $$ conn.createStatement().executeQuery("SELECT ARRAY_PREPEND(1234,integers) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_626 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_626 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_626 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_626 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_626 $$ conn.createStatement()[ FD ]
Line_623 $$ public void testArrayPrependFunctionInteger() -->Line_627 $$ assertTrue(rs.next())[ CD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_627 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_627 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_627 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_627 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_627 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_627 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_627 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_627 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_627 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_627 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_627 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_627 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_627 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_627 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_627 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_627 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_627 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_627 $$ rs.next()[ FD ]
Line_623 $$ public void testArrayPrependFunctionInteger() -->Line_628 $$ Array array = conn.createArrayOf("INTEGER", integers)[ CD ]
Line_628 $$ Array array = conn.createArrayOf("INTEGER", integers)-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ CD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_628 $$ conn.createArrayOf("INTEGER", integers)[ FD ]
Line_0 $$ Entry-->Line_632 $$ //61
public class func [ CD ]
Line_632 $$ //61
public class func -->Line_633 $$ public void test_4() [ CD ]
Line_633 $$ public void test_4() -->Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_634 $$ DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_633 $$ public void test_4() -->Line_635 $$ Statement stmt = conn.createStatement()[ CD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_635 $$ conn.createStatement()[ CD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_635 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_635 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_635 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_635 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_635 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_635 $$ conn.createStatement()[ FD ]
Line_633 $$ public void test_4() -->Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ CD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_636 $$ stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ CD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_636 $$ stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_636 $$ stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ FD ]
Line_633 $$ public void test_4() -->Line_637 $$ Assert.assertTrue(rs.next())[ CD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_637 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_637 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_637 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_637 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_637 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_637 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_637 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_637 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_637 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_637 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_637 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_637 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_637 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_637 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_637 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_637 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_637 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_637 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_637 $$ rs.next()[ FD ]
Line_633 $$ public void test_4() -->Line_638 $$ Assert.assertEquals("ABCDE", rs.getString(1))[ CD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_638 $$ rs.getString(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_638 $$ rs.getString(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_638 $$ rs.getString(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_638 $$ rs.getString(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_638 $$ rs.getString(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_638 $$ rs.getString(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_638 $$ rs.getString(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_638 $$ rs.getString(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_638 $$ rs.getString(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_638 $$ rs.getString(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_638 $$ rs.getString(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_638 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_638 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_638 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_638 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_638 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_638 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_638 $$ rs.getString(1)[ FD ]
Line_633 $$ public void test_4() -->Line_639 $$ rs.close()[ CD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_639 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_639 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_639 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_639 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_639 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_639 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_639 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_639 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_639 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_639 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_639 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_639 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_639 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_639 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_639 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_639 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_639 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_639 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_639 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_643 $$ //62
public class func [ CD ]
Line_643 $$ //62
public class func -->Line_644 $$ public void assertConnection(int port) [ CD ]
Line_644 $$ public void assertConnection(int port) -->Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)[ CD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_645 $$ DriverManager.getConnection(connectionStr)[ CD ]
Line_644 $$ public void assertConnection(int port) -->Line_646 $$ final Statement stmt = conn.createStatement()[ CD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_646 $$ conn.createStatement()[ CD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_646 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_646 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_646 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_646 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_646 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_646 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_646 $$ conn.createStatement()[ FD ]
Line_644 $$ public void assertConnection(int port) -->Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_647 $$ stmt.executeQuery("values(1)")[ CD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_647 $$ stmt.executeQuery("values(1)")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_647 $$ stmt.executeQuery("values(1)")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_647 $$ stmt.executeQuery("values(1)")[ FD ]
Line_644 $$ public void assertConnection(int port) -->Line_648 $$ while (rs.next()) [ CD ]
Line_644 $$ public void assertConnection(int port) -->Line_644 $$ public void assertConnection(int port) [ CD ]
Line_648 $$ while (rs.next()) -->Line_648 $$ rs.next()[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_648 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_648 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_648 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_648 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_648 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_648 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_648 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_648 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_648 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_648 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_648 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_648 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_648 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_648 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_648 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_648 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_648 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_648 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_648 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_648 $$ rs.next()[ FD ]
Line_648 $$ while (rs.next()) -->Line_650 $$ Assert.assertEquals("1", rs.getString(1))[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_650 $$ rs.getString(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_650 $$ rs.getString(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_650 $$ rs.getString(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_650 $$ rs.getString(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_650 $$ rs.getString(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_650 $$ rs.getString(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_650 $$ rs.getString(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_650 $$ rs.getString(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_650 $$ rs.getString(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_650 $$ rs.getString(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_650 $$ rs.getString(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_650 $$ rs.getString(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_650 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_650 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_650 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_650 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_650 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_650 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_650 $$ rs.getString(1)[ FD ]
Line_644 $$ public void assertConnection(int port) -->Line_652 $$ Assert.assertTrue("No value found.", valueFound)[ CD ]
Line_0 $$ Entry-->Line_656 $$ //63
public class func [ CD ]
Line_656 $$ //63
public class func -->Line_657 $$ public void getDateAsString() [ CD ]
Line_657 $$ public void getDateAsString() -->Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_658 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_657 $$ public void getDateAsString() -->Line_660 $$ conn.createStatement()[ CD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_660 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_660 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_660 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_660 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_660 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_660 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_660 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_660 $$ conn.createStatement()[ FD ]
Line_657 $$ public void getDateAsString() -->Line_661 $$ stmt.executeQuery("SELECT CURRENT_DATE")[ CD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_661 $$ stmt.executeQuery("SELECT CURRENT_DATE")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_661 $$ stmt.executeQuery("SELECT CURRENT_DATE")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_661 $$ stmt.executeQuery("SELECT CURRENT_DATE")[ FD ]
Line_657 $$ public void getDateAsString() -->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();[ FD ]
Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();-->Line_662 $$ rs.next()[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_662 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_662 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_662 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_662 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_662 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_662 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_662 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_662 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_662 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_662 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_662 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_662 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_662 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_662 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_662 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_662 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_662 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_662 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_662 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_662 $$ rs.next()[ FD ]
Line_662 $$ if (rs.next())
    return rs.getDate(1).toString();-->Line_663 $$ return rs.getDate(1).toString();[ CD ]
Line_663 $$ return rs.getDate(1).toString();-->Line_663 $$ rs.getDate(1).toString()[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_663 $$ rs.getDate(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_663 $$ rs.getDate(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_663 $$ rs.getDate(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_663 $$ rs.getDate(1)[ FD ]
Line_657 $$ public void getDateAsString() -->Line_664 $$ if (rs != null)
    rs.close();[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_664 $$ if (rs != null)
    rs.close();[ FD ]
Line_664 $$ if (rs != null)
    rs.close();-->Line_665 $$ rs.close()[ CD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_665 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_665 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_665 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_665 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_665 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_665 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_665 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_665 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_665 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_665 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_665 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_665 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_665 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_665 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_665 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_665 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_665 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_665 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_665 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_665 $$ rs.close()[ FD ]
Line_657 $$ public void getDateAsString() -->Line_666 $$ if (stmt != null)
    stmt.close();[ CD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_666 $$ if (stmt != null)
    stmt.close();[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_666 $$ if (stmt != null)
    stmt.close();[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_666 $$ if (stmt != null)
    stmt.close();[ FD ]
Line_666 $$ if (stmt != null)
    stmt.close();-->Line_667 $$ stmt.close()[ CD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_667 $$ stmt.close()[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_667 $$ stmt.close()[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_667 $$ stmt.close()[ FD ]
Line_657 $$ public void getDateAsString() -->Line_668 $$ conn.close()[ CD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_668 $$ conn.close()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_668 $$ conn.close()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_668 $$ conn.close()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_668 $$ conn.close()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_668 $$ conn.close()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_668 $$ conn.close()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_668 $$ conn.close()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_668 $$ conn.close()[ FD ]
Line_0 $$ Entry-->Line_672 $$ //64
public class func [ CD ]
Line_672 $$ //64
public class func -->Line_673 $$ public void test_0() [ CD ]
Line_673 $$ public void test_0() -->Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_674 $$ DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_673 $$ public void test_0() -->Line_675 $$ Statement stmt = conn.createStatement()[ CD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_675 $$ conn.createStatement()[ CD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_675 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_675 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_675 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_675 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_675 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_675 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_675 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_675 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_675 $$ conn.createStatement()[ FD ]
Line_673 $$ public void test_0() -->Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")[ CD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_676 $$ stmt.executeQuery("SELECT 2")[ CD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_676 $$ stmt.executeQuery("SELECT 2")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_676 $$ stmt.executeQuery("SELECT 2")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_676 $$ stmt.executeQuery("SELECT 2")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_676 $$ stmt.executeQuery("SELECT 2")[ FD ]
Line_673 $$ public void test_0() -->Line_677 $$ Assert.assertTrue(rs.next())[ CD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_677 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_677 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_677 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_677 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_677 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_677 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_677 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_677 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_677 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_677 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_677 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_677 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_677 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_677 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_677 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_677 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_677 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_677 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_677 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_677 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_677 $$ rs.next()[ FD ]
Line_673 $$ public void test_0() -->Line_678 $$ Assert.assertEquals(2, rs.getInt(1))[ CD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_678 $$ rs.getInt(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_678 $$ rs.getInt(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_678 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_678 $$ rs.getInt(1)[ FD ]
Line_673 $$ public void test_0() -->Line_679 $$ rs.close()[ CD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_679 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_679 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_679 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_679 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_679 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_679 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_679 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_679 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_679 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_679 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_679 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_679 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_679 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_679 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_679 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_679 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_679 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_679 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_679 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_679 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_679 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_683 $$ //65
public class func [ CD ]
Line_683 $$ //65
public class func -->Line_684 $$ public void countRows(String schema, String table) [ CD ]
Line_684 $$ public void countRows(String schema, String table) -->Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_685 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_684 $$ public void countRows(String schema, String table) -->Line_686 $$ Statement s = conn.createStatement()[ CD ]
Line_686 $$ Statement s = conn.createStatement()-->Line_686 $$ conn.createStatement()[ CD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_686 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_686 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_686 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_686 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_686 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_686 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_686 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_686 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_686 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_686 $$ conn.createStatement()[ FD ]
Line_684 $$ public void countRows(String schema, String table) -->Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)[ CD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_687 $$ s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)[ CD ]
Line_686 $$ Statement s = conn.createStatement()-->Line_687 $$ s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)[ FD ]
Line_684 $$ public void countRows(String schema, String table) -->Line_688 $$ rs.next()[ CD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_688 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_688 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_688 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_688 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_688 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_688 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_688 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_688 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_688 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_688 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_688 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_688 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_688 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_688 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_688 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_688 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_688 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_688 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_688 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_688 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_688 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_688 $$ rs.next()[ FD ]
Line_684 $$ public void countRows(String schema, String table) -->Line_689 $$ int count = rs.getInt(1)[ CD ]
Line_689 $$ int count = rs.getInt(1)-->Line_689 $$ rs.getInt(1)[ CD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_689 $$ rs.getInt(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_689 $$ rs.getInt(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_689 $$ rs.getInt(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_689 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_689 $$ rs.getInt(1)[ FD ]
Line_684 $$ public void countRows(String schema, String table) -->Line_690 $$ rs.close()[ CD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_690 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_690 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_690 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_690 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_690 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_690 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_690 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_690 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_690 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_690 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_690 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_690 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_690 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_690 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_690 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_690 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_690 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_690 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_690 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_690 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_690 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_690 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_694 $$ //66
public class func [ CD ]
Line_694 $$ //66
public class func -->Line_695 $$ public void currentPatches(String database) [ CD ]
Line_695 $$ public void currentPatches(String database) -->Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")[ CD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_696 $$ DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")[ CD ]
Line_695 $$ public void currentPatches(String database) -->Line_697 $$ Statement stmt = conn.createStatement()[ CD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_697 $$ conn.createStatement()[ CD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_697 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_697 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_697 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_697 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_697 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_697 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_697 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_697 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_697 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_697 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_697 $$ conn.createStatement()[ FD ]
Line_695 $$ public void currentPatches(String database) -->Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")[ CD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_698 $$ stmt.executeQuery("SELECT * FROM patches")[ CD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_698 $$ stmt.executeQuery("SELECT * FROM patches")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_698 $$ stmt.executeQuery("SELECT * FROM patches")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_698 $$ stmt.executeQuery("SELECT * FROM patches")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_698 $$ stmt.executeQuery("SELECT * FROM patches")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_698 $$ stmt.executeQuery("SELECT * FROM patches")[ FD ]
Line_695 $$ public void currentPatches(String database) -->Line_699 $$ while (resultSet.next()) [ CD ]
Line_695 $$ public void currentPatches(String database) -->Line_695 $$ public void currentPatches(String database) [ CD ]
Line_699 $$ while (resultSet.next()) -->Line_699 $$ resultSet.next()[ CD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_699 $$ resultSet.next()[ FD ]
Line_699 $$ while (resultSet.next()) -->Line_700 $$ log.info("Result " + resultSet.getInt(2))[ CD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_700 $$ resultSet.getInt(2)[ FD ]
Line_695 $$ public void currentPatches(String database) -->Line_702 $$ SqlUtil.close(conn, stmt, null)[ CD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_702 $$ SqlUtil.close(conn, stmt, null)[ FD ]
Line_0 $$ Entry-->Line_706 $$ //67
public class func [ CD ]
Line_706 $$ //67
public class func -->Line_707 $$ public void getNumOfEventsInStore() [ CD ]
Line_707 $$ public void getNumOfEventsInStore() -->Line_708 $$ DriverManager.getConnection(URL)[ CD ]
Line_707 $$ public void getNumOfEventsInStore() -->Line_709 $$ Statement stmt = con.createStatement()[ CD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_709 $$ con.createStatement()[ CD ]
Line_707 $$ public void getNumOfEventsInStore() -->Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)[ CD ]
Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_710 $$ stmt.executeQuery(countQuery)[ CD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_710 $$ stmt.executeQuery(countQuery)[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_710 $$ stmt.executeQuery(countQuery)[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_710 $$ stmt.executeQuery(countQuery)[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_710 $$ stmt.executeQuery(countQuery)[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_710 $$ stmt.executeQuery(countQuery)[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_710 $$ stmt.executeQuery(countQuery)[ FD ]
Line_707 $$ public void getNumOfEventsInStore() -->Line_711 $$ resultSet.next()[ CD ]
Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_711 $$ resultSet.next()[ FD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_711 $$ resultSet.next()[ FD ]
Line_707 $$ public void getNumOfEventsInStore() -->Line_712 $$ return resultSet.getInt(1);[ CD ]
Line_712 $$ return resultSet.getInt(1);-->Line_712 $$ resultSet.getInt(1)[ CD ]
Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_712 $$ resultSet.getInt(1)[ FD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_712 $$ resultSet.getInt(1)[ FD ]
Line_0 $$ Entry-->Line_716 $$ //68
public class func [ CD ]
Line_716 $$ //68
public class func -->Line_717 $$ public void countTestRecords(int[] count) [ CD ]
Line_717 $$ public void countTestRecords(int[] count) -->Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_718 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_717 $$ public void countTestRecords(int[] count) -->Line_719 $$ Statement ps1 = conn.createStatement()[ CD ]
Line_719 $$ Statement ps1 = conn.createStatement()-->Line_719 $$ conn.createStatement()[ CD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_719 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_719 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_719 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_719 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_719 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_719 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_719 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_719 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_719 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_719 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_719 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_719 $$ conn.createStatement()[ FD ]
Line_717 $$ public void countTestRecords(int[] count) -->Line_720 $$ ResultSet resultSet = ps1.executeQuery("SELECT COUNT(*) FROM PLANET")[ CD ]
Line_720 $$ ResultSet resultSet = ps1.executeQuery("SELECT COUNT(*) FROM PLANET")-->Line_720 $$ ps1.executeQuery("SELECT COUNT(*) FROM PLANET")[ CD ]
Line_719 $$ Statement ps1 = conn.createStatement()-->Line_720 $$ ps1.executeQuery("SELECT COUNT(*) FROM PLANET")[ FD ]
Line_717 $$ public void countTestRecords(int[] count) -->Line_721 $$ resultSet.next()[ CD ]
Line_720 $$ ResultSet resultSet = ps1.executeQuery("SELECT COUNT(*) FROM PLANET")-->Line_721 $$ resultSet.next()[ FD ]
Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_721 $$ resultSet.next()[ FD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_721 $$ resultSet.next()[ FD ]
Line_717 $$ public void countTestRecords(int[] count) -->Line_722 $$ count[0] = resultSet.getInt(1)[ CD ]
Line_722 $$ count[0] = resultSet.getInt(1)-->Line_722 $$ resultSet.getInt(1)[ CD ]
Line_720 $$ ResultSet resultSet = ps1.executeQuery("SELECT COUNT(*) FROM PLANET")-->Line_722 $$ resultSet.getInt(1)[ FD ]
Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_722 $$ resultSet.getInt(1)[ FD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_722 $$ resultSet.getInt(1)[ FD ]
Line_0 $$ Entry-->Line_726 $$ //69
public class func [ CD ]
Line_726 $$ //69
public class func -->Line_727 $$ public void test_2() [ CD ]
Line_727 $$ public void test_2() -->Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_728 $$ DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_727 $$ public void test_2() -->Line_729 $$ Statement stmt = conn.createStatement()[ CD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_729 $$ conn.createStatement()[ CD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_729 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_729 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_729 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_729 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_729 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_729 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_729 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_729 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_729 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_729 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_729 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_729 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_729 $$ conn.createStatement()[ FD ]
Line_727 $$ public void test_2() -->Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")[ CD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ CD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_730 $$ stmt.executeQuery("SELECT NOW()")[ FD ]
Line_727 $$ public void test_2() -->Line_731 $$ Assert.assertTrue(rs.next())[ CD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_731 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_731 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_731 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_731 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_731 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_731 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_731 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_731 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_731 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_731 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_731 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_731 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_731 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_731 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_731 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_731 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_731 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_731 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_731 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_731 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_731 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_731 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_731 $$ rs.next()[ FD ]
Line_727 $$ public void test_2() -->Line_732 $$ Assert.assertTrue(rs.getObject(1) instanceof Timestamp)[ CD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_732 $$ rs.getObject(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_732 $$ rs.getObject(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_732 $$ rs.getObject(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_732 $$ rs.getObject(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_732 $$ rs.getObject(1)[ FD ]
Line_727 $$ public void test_2() -->Line_733 $$ rs.close()[ CD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_733 $$ rs.close()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_733 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_733 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_733 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_733 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_733 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_733 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_733 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_733 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_733 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_733 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_733 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_733 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_733 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_733 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_733 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_733 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_733 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_733 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_733 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_733 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_733 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_733 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_737 $$ //70
public class func [ CD ]
Line_737 $$ //70
public class func -->Line_738 $$ public void main(String args[]) [ CD ]
Line_738 $$ public void main(String args[]) -->Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")[ CD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_739 $$ DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")[ CD ]
Line_738 $$ public void main(String args[]) -->Line_741 $$ Statement stmt = conn.createStatement()[ CD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_741 $$ conn.createStatement()[ CD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_741 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_741 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_741 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_741 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_741 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_741 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_741 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_741 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_741 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_741 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_741 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_741 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_741 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_741 $$ conn.createStatement()[ FD ]
Line_738 $$ public void main(String args[]) -->Line_742 $$ ResultSet rset = stmt.executeQuery("select* from belli")[ CD ]
Line_742 $$ ResultSet rset = stmt.executeQuery("select* from belli")-->Line_742 $$ stmt.executeQuery("select* from belli")[ CD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_742 $$ stmt.executeQuery("select* from belli")[ FD ]
Line_738 $$ public void main(String args[]) -->Line_743 $$ while (rset.next()) // Print col 1
System.out.println(rset.getString(1));[ CD ]
Line_738 $$ public void main(String args[]) -->Line_738 $$ public void main(String args[]) [ CD ]
Line_743 $$ while (rset.next()) // Print col 1
System.out.println(rset.getString(1));-->Line_743 $$ rset.next()[ CD ]
Line_742 $$ ResultSet rset = stmt.executeQuery("select* from belli")-->Line_743 $$ rset.next()[ FD ]
Line_743 $$ while (rset.next()) // Print col 1
System.out.println(rset.getString(1));-->Line_744 $$ System.out.println(rset.getString(1))[ CD ]
Line_742 $$ ResultSet rset = stmt.executeQuery("select* from belli")-->Line_744 $$ rset.getString(1)[ FD ]
Line_738 $$ public void main(String args[]) -->Line_745 $$ stmt.close()[ CD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_745 $$ stmt.close()[ FD ]
Line_0 $$ Entry-->Line_749 $$ //71
public class func [ CD ]
Line_749 $$ //71
public class func -->Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) [ CD ]
Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) -->Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)[ CD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_751 $$ DriverManager.getConnection(oriDBUrl, username, password)[ CD ]
Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) -->Line_752 $$ Catalog.setSeparator(conn)[ CD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_752 $$ Catalog.setSeparator(conn)[ FD ]
Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) -->Line_753 $$ Statement s = conn.createStatement()[ CD ]
Line_753 $$ Statement s = conn.createStatement()-->Line_753 $$ conn.createStatement()[ CD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_753 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_753 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_753 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_753 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_753 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_753 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_753 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_753 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_753 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_753 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_753 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_753 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_753 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_753 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_753 $$ conn.createStatement()[ FD ]
Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) -->Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")[ CD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_754 $$ s.executeQuery("SHOW ALL;")[ CD ]
Line_753 $$ Statement s = conn.createStatement()-->Line_754 $$ s.executeQuery("SHOW ALL;")[ FD ]
Line_686 $$ Statement s = conn.createStatement()-->Line_754 $$ s.executeQuery("SHOW ALL;")[ FD ]
Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) -->Line_755 $$ while (out.next()) [ CD ]
Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) -->Line_750 $$ public void POSTGRESCollector(String oriDBUrl, String username, String password) [ CD ]
Line_755 $$ while (out.next()) -->Line_755 $$ out.next()[ CD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_755 $$ out.next()[ FD ]
Line_755 $$ while (out.next()) -->Line_756 $$ dbConf.put(out.getString("name"), out.getString("setting"))[ CD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_756 $$ out.getString("name")[ FD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_756 $$ out.getString("setting")[ FD ]
Line_0 $$ Entry-->Line_761 $$ //72
public class func [ CD ]
Line_761 $$ //72
public class func -->Line_762 $$ public void getVarcharFromDb(int id) [ CD ]
Line_762 $$ public void getVarcharFromDb(int id) -->Line_763 $$ Connection con = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_763 $$ Connection con = DriverManager.getConnection("jdbc:default:connection")-->Line_763 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_762 $$ public void getVarcharFromDb(int id) -->Line_764 $$ Statement stmt = con.createStatement()[ CD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_764 $$ con.createStatement()[ CD ]
Line_763 $$ Connection con = DriverManager.getConnection("jdbc:default:connection")-->Line_764 $$ con.createStatement()[ FD ]
Line_762 $$ public void getVarcharFromDb(int id) -->Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ CD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ CD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_765 $$ stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)[ FD ]
Line_762 $$ public void getVarcharFromDb(int id) -->Line_767 $$ rs.next()[ CD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_767 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_767 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_767 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_767 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_767 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_767 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_767 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_767 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_767 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_767 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_767 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_767 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_767 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_767 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_767 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_767 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_767 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_767 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_767 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_767 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_767 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_767 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_767 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_767 $$ rs.next()[ FD ]
Line_762 $$ public void getVarcharFromDb(int id) -->Line_768 $$ String chardata = rs.getString(1)[ CD ]
Line_768 $$ String chardata = rs.getString(1)-->Line_768 $$ rs.getString(1)[ CD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_768 $$ rs.getString(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_768 $$ rs.getString(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_768 $$ rs.getString(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_768 $$ rs.getString(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_768 $$ rs.getString(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_768 $$ rs.getString(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_768 $$ rs.getString(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_768 $$ rs.getString(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_768 $$ rs.getString(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_768 $$ rs.getString(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_768 $$ rs.getString(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_768 $$ rs.getString(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_768 $$ rs.getString(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_768 $$ rs.getString(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_768 $$ rs.getString(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_768 $$ rs.getString(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_768 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_768 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_768 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_768 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_768 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_768 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_768 $$ rs.getString(1)[ FD ]
Line_762 $$ public void getVarcharFromDb(int id) -->Line_769 $$ rs.close()[ CD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_769 $$ rs.close()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_769 $$ rs.close()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_769 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_769 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_769 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_769 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_769 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_769 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_769 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_769 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_769 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_769 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_769 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_769 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_769 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_769 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_769 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_769 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_769 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_769 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_769 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_769 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_769 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_769 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_773 $$ //73
public class func [ CD ]
Line_773 $$ //73
public class func -->Line_774 $$ public void getSchemaTransition(String nextSchema) [ CD ]
Line_774 $$ public void getSchemaTransition(String nextSchema) -->Line_775 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_775 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_775 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_774 $$ public void getSchemaTransition(String nextSchema) -->Line_776 $$ Statement s = c.createStatement()[ CD ]
Line_776 $$ Statement s = c.createStatement()-->Line_776 $$ c.createStatement()[ CD ]
Line_775 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_776 $$ c.createStatement()[ FD ]
Line_774 $$ public void getSchemaTransition(String nextSchema) -->Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")[ CD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_777 $$ s.executeQuery("VALUES CURRENT SCHEMA")[ CD ]
Line_776 $$ Statement s = c.createStatement()-->Line_777 $$ s.executeQuery("VALUES CURRENT SCHEMA")[ FD ]
Line_753 $$ Statement s = conn.createStatement()-->Line_777 $$ s.executeQuery("VALUES CURRENT SCHEMA")[ FD ]
Line_686 $$ Statement s = conn.createStatement()-->Line_777 $$ s.executeQuery("VALUES CURRENT SCHEMA")[ FD ]
Line_774 $$ public void getSchemaTransition(String nextSchema) -->Line_778 $$ rs.next()[ CD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_778 $$ rs.next()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_778 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_778 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_778 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_778 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_778 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_778 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_778 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_778 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_778 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_778 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_778 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_778 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_778 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_778 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_778 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_778 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_778 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_778 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_778 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_778 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_778 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_778 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_778 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_778 $$ rs.next()[ FD ]
Line_774 $$ public void getSchemaTransition(String nextSchema) -->Line_779 $$ String prevSchema = rs.getString(1)[ CD ]
Line_779 $$ String prevSchema = rs.getString(1)-->Line_779 $$ rs.getString(1)[ CD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_779 $$ rs.getString(1)[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_779 $$ rs.getString(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_779 $$ rs.getString(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_779 $$ rs.getString(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_779 $$ rs.getString(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_779 $$ rs.getString(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_779 $$ rs.getString(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_779 $$ rs.getString(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_779 $$ rs.getString(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_779 $$ rs.getString(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_779 $$ rs.getString(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_779 $$ rs.getString(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_779 $$ rs.getString(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_779 $$ rs.getString(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_779 $$ rs.getString(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_779 $$ rs.getString(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_779 $$ rs.getString(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_779 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_779 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_779 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_779 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_779 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_779 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_779 $$ rs.getString(1)[ FD ]
Line_774 $$ public void getSchemaTransition(String nextSchema) -->Line_780 $$ rs.close()[ CD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_780 $$ rs.close()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_780 $$ rs.close()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_780 $$ rs.close()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_780 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_780 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_780 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_780 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_780 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_780 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_780 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_780 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_780 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_780 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_780 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_780 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_780 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_780 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_780 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_780 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_780 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_780 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_780 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_780 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_780 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_780 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_784 $$ //74
public class func [ CD ]
Line_784 $$ //74
public class func -->Line_785 $$ public void main2(String[] args) [ CD ]
Line_785 $$ public void main2(String[] args) -->Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")[ CD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_786 $$ DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")[ CD ]
Line_785 $$ public void main2(String[] args) -->Line_788 $$ Statement stmt = conn.createStatement()[ CD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_788 $$ conn.createStatement()[ CD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_788 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_788 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_788 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_788 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_788 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_788 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_788 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_788 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_788 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_788 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_788 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_788 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_788 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_788 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_788 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_788 $$ conn.createStatement()[ FD ]
Line_785 $$ public void main2(String[] args) -->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ CD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_789 $$ stmt.executeUpdate("INSERT INTO my_table(name) VALUES('zhh')")[ FD ]
Line_785 $$ public void main2(String[] args) -->Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")[ CD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ CD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_790 $$ stmt.executeQuery("SELECT name FROM my_table")[ FD ]
Line_785 $$ public void main2(String[] args) -->Line_791 $$ rs.next()[ CD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_791 $$ rs.next()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_791 $$ rs.next()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_791 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_791 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_791 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_791 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_791 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_791 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_791 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_791 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_791 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_791 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_791 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_791 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_791 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_791 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_791 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_791 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_791 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_791 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_791 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_791 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_791 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_791 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_791 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_791 $$ rs.next()[ FD ]
Line_785 $$ public void main2(String[] args) -->Line_792 $$ System.out.println(rs.getString(1))[ CD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_792 $$ rs.getString(1)[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_792 $$ rs.getString(1)[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_792 $$ rs.getString(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_792 $$ rs.getString(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_792 $$ rs.getString(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_792 $$ rs.getString(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_792 $$ rs.getString(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_792 $$ rs.getString(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_792 $$ rs.getString(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_792 $$ rs.getString(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_792 $$ rs.getString(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_792 $$ rs.getString(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_792 $$ rs.getString(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_792 $$ rs.getString(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_792 $$ rs.getString(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_792 $$ rs.getString(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_792 $$ rs.getString(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_792 $$ rs.getString(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_792 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_792 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_792 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_792 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_792 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_792 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_792 $$ rs.getString(1)[ FD ]
Line_0 $$ Entry-->Line_796 $$ //75
public class func [ CD ]
Line_796 $$ //75
public class func -->Line_797 $$ public void test_1() [ CD ]
Line_797 $$ public void test_1() -->Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_798 $$ DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_797 $$ public void test_1() -->Line_799 $$ Statement stmt = conn.createStatement()[ CD ]
Line_799 $$ Statement stmt = conn.createStatement()-->Line_799 $$ conn.createStatement()[ CD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_799 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_799 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_799 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_799 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_799 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_799 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_799 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_799 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_799 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_799 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_799 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_799 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_799 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_799 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_799 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_799 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_799 $$ conn.createStatement()[ FD ]
Line_797 $$ public void test_1() -->Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")[ CD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ CD ]
Line_799 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_800 $$ stmt.executeQuery("SELECT NULL")[ FD ]
Line_797 $$ public void test_1() -->Line_801 $$ Assert.assertTrue(rs.next())[ CD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_801 $$ rs.next()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_801 $$ rs.next()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_801 $$ rs.next()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_801 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_801 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_801 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_801 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_801 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_801 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_801 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_801 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_801 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_801 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_801 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_801 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_801 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_801 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_801 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_801 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_801 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_801 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_801 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_801 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_801 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_801 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_801 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_801 $$ rs.next()[ FD ]
Line_797 $$ public void test_1() -->Line_802 $$ Assert.assertEquals(0, rs.getInt(1))[ CD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_802 $$ rs.getInt(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_802 $$ rs.getInt(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_802 $$ rs.getInt(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_802 $$ rs.getInt(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_802 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_802 $$ rs.getInt(1)[ FD ]
Line_797 $$ public void test_1() -->Line_803 $$ Assert.assertEquals(null, rs.getObject(1))[ CD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_803 $$ rs.getObject(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_803 $$ rs.getObject(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_803 $$ rs.getObject(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_803 $$ rs.getObject(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_803 $$ rs.getObject(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_803 $$ rs.getObject(1)[ FD ]
Line_797 $$ public void test_1() -->Line_804 $$ rs.close()[ CD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_804 $$ rs.close()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_804 $$ rs.close()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_804 $$ rs.close()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_804 $$ rs.close()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_804 $$ rs.close()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_804 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_804 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_804 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_804 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_804 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_804 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_804 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_804 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_804 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_804 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_804 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_804 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_804 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_804 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_804 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_804 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_804 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_804 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_804 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_804 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_804 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_804 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_808 $$ //76
public class func [ CD ]
Line_808 $$ //76
public class func -->Line_809 $$ public void exists(final int id) [ CD ]
Line_809 $$ public void exists(final int id) -->Line_810 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)[ CD ]
Line_810 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_810 $$ DriverManager.getConnection(URL, USER, PASSWORD)[ CD ]
Line_809 $$ public void exists(final int id) -->Line_811 $$ final Statement statement = connection.createStatement()[ CD ]
Line_811 $$ final Statement statement = connection.createStatement()-->Line_811 $$ connection.createStatement()[ CD ]
Line_810 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_811 $$ connection.createStatement()[ FD ]
Line_809 $$ public void exists(final int id) -->Line_812 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)[ CD ]
Line_812 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_812 $$ statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)[ CD ]
Line_811 $$ final Statement statement = connection.createStatement()-->Line_812 $$ statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)[ FD ]
Line_809 $$ public void exists(final int id) -->Line_813 $$ assertTrue(result.next())[ CD ]
Line_812 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_813 $$ result.next()[ FD ]
Line_809 $$ public void exists(final int id) -->Line_814 $$ return result.getInt(1) == 1;[ CD ]
Line_812 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_814 $$ result.getInt(1)[ FD ]
Line_0 $$ Entry-->Line_818 $$ //77
public class func [ CD ]
Line_818 $$ //77
public class func -->Line_819 $$ public void accessSql() [ CD ]
Line_819 $$ public void accessSql() -->Line_820 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_819 $$ public void accessSql() -->Line_822 $$ Statement stmt = conn.createStatement()[ CD ]
Line_822 $$ Statement stmt = conn.createStatement()-->Line_822 $$ conn.createStatement()[ CD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_822 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_822 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_822 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_822 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_822 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_822 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_822 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_822 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_822 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_822 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_822 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_822 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_822 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_822 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_822 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_822 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_822 $$ conn.createStatement()[ FD ]
Line_819 $$ public void accessSql() -->Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")[ CD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_823 $$ stmt.executeQuery("values 777")[ CD ]
Line_822 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_799 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_823 $$ stmt.executeQuery("values 777")[ FD ]
Line_819 $$ public void accessSql() -->Line_824 $$ rs.next()[ CD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_824 $$ rs.next()[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_824 $$ rs.next()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_824 $$ rs.next()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_824 $$ rs.next()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_824 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_824 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_824 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_824 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_824 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_824 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_824 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_824 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_824 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_824 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_824 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_824 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_824 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_824 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_824 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_824 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_824 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_824 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_824 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_824 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_824 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_824 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_824 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_824 $$ rs.next()[ FD ]
Line_819 $$ public void accessSql() -->Line_825 $$ return rs.getInt(1);[ CD ]
Line_825 $$ return rs.getInt(1);-->Line_825 $$ rs.getInt(1)[ CD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_825 $$ rs.getInt(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_825 $$ rs.getInt(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_825 $$ rs.getInt(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_825 $$ rs.getInt(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_825 $$ rs.getInt(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_825 $$ rs.getInt(1)[ FD ]
Line_0 $$ Entry-->Line_829 $$ //78
public class func [ CD ]
Line_829 $$ //78
public class func -->Line_830 $$ public void count(final String where) [ CD ]
Line_830 $$ public void count(final String where) -->Line_831 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)[ CD ]
Line_831 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_831 $$ DriverManager.getConnection(URL, USER, PASSWORD)[ CD ]
Line_830 $$ public void count(final String where) -->Line_832 $$ final Statement statement = connection.createStatement()[ CD ]
Line_832 $$ final Statement statement = connection.createStatement()-->Line_832 $$ connection.createStatement()[ CD ]
Line_831 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_832 $$ connection.createStatement()[ FD ]
Line_810 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_832 $$ connection.createStatement()[ FD ]
Line_830 $$ public void count(final String where) -->Line_833 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)[ CD ]
Line_833 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)-->Line_833 $$ statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)[ CD ]
Line_832 $$ final Statement statement = connection.createStatement()-->Line_833 $$ statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)[ FD ]
Line_811 $$ final Statement statement = connection.createStatement()-->Line_833 $$ statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)[ FD ]
Line_830 $$ public void count(final String where) -->Line_834 $$ assertTrue(result.next())[ CD ]
Line_833 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)-->Line_834 $$ result.next()[ FD ]
Line_812 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_834 $$ result.next()[ FD ]
Line_830 $$ public void count(final String where) -->Line_835 $$ return result.getInt(1);[ CD ]
Line_835 $$ return result.getInt(1);-->Line_835 $$ result.getInt(1)[ CD ]
Line_833 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + where)-->Line_835 $$ result.getInt(1)[ FD ]
Line_812 $$ final ResultSet result = statement.executeQuery("SELECT count(*) AS NB FROM " + TABLE + " WHERE ID = " + id)-->Line_835 $$ result.getInt(1)[ FD ]
Line_0 $$ Entry-->Line_839 $$ //79
public class func [ CD ]
Line_839 $$ //79
public class func -->Line_840 $$ public void run() [ CD ]
Line_840 $$ public void run() -->Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_841 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_840 $$ public void run() -->Line_842 $$ Statement stmt = conn.createStatement()[ CD ]
Line_842 $$ Statement stmt = conn.createStatement()-->Line_842 $$ conn.createStatement()[ CD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_842 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_842 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_842 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_842 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_842 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_842 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_842 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_842 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_842 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_842 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_842 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_842 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_842 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_842 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_842 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_842 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_842 $$ conn.createStatement()[ FD ]
Line_840 $$ public void run() -->Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")[ CD ]
Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ CD ]
Line_842 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_822 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_799 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_843 $$ stmt.executeQuery("select * from test where name = 'name2'")[ FD ]
Line_840 $$ public void run() -->Line_844 $$ while (rs.next()) [ CD ]
Line_840 $$ public void run() -->Line_840 $$ public void run() [ CD ]
Line_844 $$ while (rs.next()) -->Line_844 $$ rs.next()[ CD ]
Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")-->Line_844 $$ rs.next()[ FD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_844 $$ rs.next()[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_844 $$ rs.next()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_844 $$ rs.next()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_844 $$ rs.next()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_844 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_844 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_844 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_844 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_844 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_844 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_844 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_844 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_844 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_844 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_844 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_844 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_844 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_844 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_844 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_844 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_844 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_844 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_844 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_844 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_844 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_844 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_844 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_844 $$ rs.next()[ FD ]
Line_840 $$ public void run() -->Line_847 $$ rs.close()[ CD ]
Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")-->Line_847 $$ rs.close()[ FD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_847 $$ rs.close()[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_847 $$ rs.close()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_847 $$ rs.close()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_847 $$ rs.close()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_847 $$ rs.close()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_847 $$ rs.close()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_847 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_847 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_847 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_847 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_847 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_847 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_847 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_847 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_847 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_847 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_847 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_847 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_847 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_847 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_847 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_847 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_847 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_847 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_847 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_847 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_847 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_847 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_851 $$ //80
public class func [ CD ]
Line_851 $$ //80
public class func -->Line_852 $$ public void testConnectionUrl() [ CD ]
Line_852 $$ public void testConnectionUrl() -->Line_853 $$ Connection c = DriverManager.getConnection(url, this.username, this.password)[ CD ]
Line_853 $$ Connection c = DriverManager.getConnection(url, this.username, this.password)-->Line_853 $$ DriverManager.getConnection(url, this.username, this.password)[ CD ]
Line_190 $$ String url = getURL("driver", true)-->Line_853 $$ DriverManager.getConnection(url, this.username, this.password)[ FD ]
Line_852 $$ public void testConnectionUrl() -->Line_854 $$ ResultSet rs = c.createStatement().executeQuery("select user()")[ CD ]
Line_854 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_854 $$ c.createStatement().executeQuery("select user()")[ CD ]
Line_853 $$ Connection c = DriverManager.getConnection(url, this.username, this.password)-->Line_854 $$ c.createStatement()[ FD ]
Line_775 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_854 $$ c.createStatement()[ FD ]
Line_852 $$ public void testConnectionUrl() -->Line_855 $$ rs.next()[ CD ]
Line_854 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_855 $$ rs.next()[ FD ]
Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")-->Line_855 $$ rs.next()[ FD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_855 $$ rs.next()[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_855 $$ rs.next()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_855 $$ rs.next()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_855 $$ rs.next()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_855 $$ rs.next()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_855 $$ rs.next()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_855 $$ rs.next()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_855 $$ rs.next()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_855 $$ rs.next()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_855 $$ rs.next()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_855 $$ rs.next()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_855 $$ rs.next()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_855 $$ rs.next()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_855 $$ rs.next()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_855 $$ rs.next()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_855 $$ rs.next()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_855 $$ rs.next()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_855 $$ rs.next()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_855 $$ rs.next()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_855 $$ rs.next()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_855 $$ rs.next()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_855 $$ rs.next()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_855 $$ rs.next()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_855 $$ rs.next()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_855 $$ rs.next()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_855 $$ rs.next()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_855 $$ rs.next()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_855 $$ rs.next()[ FD ]
Line_852 $$ public void testConnectionUrl() -->Line_856 $$ String userFromDb = rs.getString(1).split("@")[0][ CD ]
Line_854 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_856 $$ rs.getString(1)[ FD ]
Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")-->Line_856 $$ rs.getString(1)[ FD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_856 $$ rs.getString(1)[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_856 $$ rs.getString(1)[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_856 $$ rs.getString(1)[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_856 $$ rs.getString(1)[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_856 $$ rs.getString(1)[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_856 $$ rs.getString(1)[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_856 $$ rs.getString(1)[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_856 $$ rs.getString(1)[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_856 $$ rs.getString(1)[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_856 $$ rs.getString(1)[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_856 $$ rs.getString(1)[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_856 $$ rs.getString(1)[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_856 $$ rs.getString(1)[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_856 $$ rs.getString(1)[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_856 $$ rs.getString(1)[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_856 $$ rs.getString(1)[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_856 $$ rs.getString(1)[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_856 $$ rs.getString(1)[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_856 $$ rs.getString(1)[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_856 $$ rs.getString(1)[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_856 $$ rs.getString(1)[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_856 $$ rs.getString(1)[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_856 $$ rs.getString(1)[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_856 $$ rs.getString(1)[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_856 $$ rs.getString(1)[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_856 $$ rs.getString(1)[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_856 $$ rs.getString(1)[ FD ]
Line_852 $$ public void testConnectionUrl() -->Line_857 $$ assertEquals(this.username, userFromDb)[ CD ]
Line_856 $$ String userFromDb = rs.getString(1).split("@")[0]-->Line_857 $$ assertEquals(this.username, userFromDb)[ FD ]
Line_852 $$ public void testConnectionUrl() -->Line_858 $$ rs.close()[ CD ]
Line_854 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_858 $$ rs.close()[ FD ]
Line_843 $$ ResultSet rs = stmt.executeQuery("select * from test where name = 'name2'")-->Line_858 $$ rs.close()[ FD ]
Line_823 $$ ResultSet rs = stmt.executeQuery("values 777")-->Line_858 $$ rs.close()[ FD ]
Line_800 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_858 $$ rs.close()[ FD ]
Line_790 $$ ResultSet rs = stmt.executeQuery("SELECT name FROM my_table")-->Line_858 $$ rs.close()[ FD ]
Line_777 $$ ResultSet rs = s.executeQuery("VALUES CURRENT SCHEMA")-->Line_858 $$ rs.close()[ FD ]
Line_765 $$ ResultSet rs = stmt.executeQuery("SELECT CHARDATA FROM CSDATA " + "WHERE ID = " + id)-->Line_858 $$ rs.close()[ FD ]
Line_730 $$ ResultSet rs = stmt.executeQuery("SELECT NOW()")-->Line_858 $$ rs.close()[ FD ]
Line_687 $$ ResultSet rs = s.executeQuery("SELECT COUNT(*) FROM " + schema + "." + table)-->Line_858 $$ rs.close()[ FD ]
Line_676 $$ ResultSet rs = stmt.executeQuery("SELECT 2")-->Line_858 $$ rs.close()[ FD ]
Line_647 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_858 $$ rs.close()[ FD ]
Line_636 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_858 $$ rs.close()[ FD ]
Line_555 $$ ResultSet rs = conn.createStatement().executeQuery(query)-->Line_858 $$ rs.close()[ FD ]
Line_503 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_858 $$ rs.close()[ FD ]
Line_490 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST")-->Line_858 $$ rs.close()[ FD ]
Line_439 $$ ResultSet rs = stmt.executeQuery("select count(1) from " + GROUPBYTEST_NAME)-->Line_858 $$ rs.close()[ FD ]
Line_429 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_421 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dt, 'day') = to_date('2012-01-02 00:00:00')")-->Line_858 $$ rs.close()[ FD ]
Line_413 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(doub, 2) = 1.26")-->Line_858 $$ rs.close()[ FD ]
Line_405 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(ts, 'day'), FLOOR(ts, 'hour', 1), FLOOR(ts, 'minute', 1), FLOOR(ts, 'second', 1), FLOOR(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_858 $$ rs.close()[ FD ]
Line_393 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_381 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(doub), FLOOR(doub, 1), FLOOR(doub, 2), FLOOR(doub, 3) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_373 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT FLOOR(dt, 'day', 1), FLOOR(dt, 'hour', 1), FLOOR(dt, 'minute', 1), FLOOR(dt, 'second', 1) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_356 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE ROUND(dec, 2) = 1.26")-->Line_858 $$ rs.close()[ FD ]
Line_346 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT (FALSE OR FALSE) AS B FROM SYSTEM.CATALOG LIMIT 1")-->Line_858 $$ rs.close()[ FD ]
Line_338 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dec), ROUND(dec, 1), ROUND(dec, 2), ROUND(dec, 3) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_330 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(ts, 'day'), ROUND(ts, 'hour', 1), ROUND(ts, 'minute', 1), ROUND(ts, 'second', 1), ROUND(ts, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_858 $$ rs.close()[ FD ]
Line_322 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(dt, 'day'), ROUND(dt, 'hour', 1), ROUND(dt, 'minute', 1), ROUND(dt, 'second', 1), ROUND(dt, 'millisecond', 1) FROM ROUND_DATE_TIME_TS_DECIMAL")-->Line_858 $$ rs.close()[ FD ]
Line_278 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, SEP) FROM SPLIT_TEST")-->Line_858 $$ rs.close()[ FD ]
Line_266 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST")-->Line_858 $$ rs.close()[ FD ]
Line_232 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'")-->Line_858 $$ rs.close()[ FD ]
Line_223 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM ROUND_DATE_TIME_TS_DECIMAL WHERE CEIL(dt, 'second') = to_date('2012-01-01 14:25:29')")-->Line_858 $$ rs.close()[ FD ]
Line_211 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(doub), CEIL(doub, 1), CEIL(doub, 2), CEIL(doub, 3) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_203 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM t1 WHERE FLOOR(dt, 'hour') = to_date('2012-01-01 14:00:00')")-->Line_858 $$ rs.close()[ FD ]
Line_139 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT CEIL(dt, 'day', 1), CEIL(dt, 'hour', 1), CEIL(dt, 'minute', 1), CEIL(dt, 'second', 1) FROM t1")-->Line_858 $$ rs.close()[ FD ]
Line_30 $$ ResultSet rs = conn.createStatement().executeQuery("select count(*) from " + TENANT_TABLE_NAME)-->Line_858 $$ rs.close()[ FD ]
Line_0 $$ Entry-->Line_862 $$ //81
public class func [ CD ]
Line_862 $$ //81
public class func -->Line_863 $$ public void getNumOfEventsInStore() [ CD ]
Line_863 $$ public void getNumOfEventsInStore() -->Line_864 $$ DriverManager.getConnection(URL)[ CD ]
Line_863 $$ public void getNumOfEventsInStore() -->Line_865 $$ Statement stmt = con.createStatement()[ CD ]
Line_865 $$ Statement stmt = con.createStatement()-->Line_865 $$ con.createStatement()[ CD ]
Line_763 $$ Connection con = DriverManager.getConnection("jdbc:default:connection")-->Line_865 $$ con.createStatement()[ FD ]
Line_863 $$ public void getNumOfEventsInStore() -->Line_866 $$ ResultSet resultSet = stmt.executeQuery(countQuery)[ CD ]
Line_866 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_866 $$ stmt.executeQuery(countQuery)[ CD ]
Line_865 $$ Statement stmt = con.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_842 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_822 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_799 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_788 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_764 $$ Statement stmt = con.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_741 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_729 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_709 $$ Statement stmt = con.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_697 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_675 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_646 $$ final Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_635 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_438 $$ Statement stmt = conn.createStatement()-->Line_866 $$ stmt.executeQuery(countQuery)[ FD ]
Line_863 $$ public void getNumOfEventsInStore() -->Line_867 $$ while (resultSet.next()) [ CD ]
Line_863 $$ public void getNumOfEventsInStore() -->Line_863 $$ public void getNumOfEventsInStore() [ CD ]
Line_867 $$ while (resultSet.next()) -->Line_867 $$ resultSet.next()[ CD ]
Line_866 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_867 $$ resultSet.next()[ FD ]
Line_720 $$ ResultSet resultSet = ps1.executeQuery("SELECT COUNT(*) FROM PLANET")-->Line_867 $$ resultSet.next()[ FD ]
Line_710 $$ ResultSet resultSet = stmt.executeQuery(countQuery)-->Line_867 $$ resultSet.next()[ FD ]
Line_698 $$ ResultSet resultSet = stmt.executeQuery("SELECT * FROM patches")-->Line_867 $$ resultSet.next()[ FD ]
Line_0 $$ Entry-->Line_873 $$ //82
public class func [ CD ]
Line_873 $$ //82
public class func -->Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) [ CD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_875 $$ String dbUrl = oriDBUrl.substring(0, oriDBUrl.lastIndexOf('/'))[ CD ]
Line_875 $$ String dbUrl = oriDBUrl.substring(0, oriDBUrl.lastIndexOf('/'))-->Line_875 $$ oriDBUrl.substring(0, oriDBUrl.lastIndexOf('/'))[ CD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)[ CD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_876 $$ DriverManager.getConnection(dbUrl, username, password)[ CD ]
Line_875 $$ String dbUrl = oriDBUrl.substring(0, oriDBUrl.lastIndexOf('/'))-->Line_876 $$ DriverManager.getConnection(dbUrl, username, password)[ FD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_877 $$ Catalog.setSeparator(conn)[ CD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_877 $$ Catalog.setSeparator(conn)[ FD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_878 $$ Statement s = conn.createStatement()[ CD ]
Line_878 $$ Statement s = conn.createStatement()-->Line_878 $$ conn.createStatement()[ CD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_878 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_878 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_878 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_878 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_878 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_878 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_878 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_878 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_878 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_878 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_878 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_878 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_878 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_878 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_878 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_878 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_878 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_878 $$ conn.createStatement()[ FD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_879 $$ ResultSet out = s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")[ CD ]
Line_879 $$ ResultSet out = s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")-->Line_879 $$ s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")[ CD ]
Line_878 $$ Statement s = conn.createStatement()-->Line_879 $$ s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")[ FD ]
Line_776 $$ Statement s = c.createStatement()-->Line_879 $$ s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")[ FD ]
Line_753 $$ Statement s = conn.createStatement()-->Line_879 $$ s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")[ FD ]
Line_686 $$ Statement s = conn.createStatement()-->Line_879 $$ s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")[ FD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_880 $$ while (out.next()) [ CD ]
Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) -->Line_874 $$ public void MYSQLCollector(String oriDBUrl, String username, String password) [ CD ]
Line_880 $$ while (out.next()) -->Line_880 $$ out.next()[ CD ]
Line_879 $$ ResultSet out = s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")-->Line_880 $$ out.next()[ FD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_880 $$ out.next()[ FD ]
Line_880 $$ while (out.next()) -->Line_881 $$ dbConf.put(out.getString("VARIABLE_NAME"), out.getString("VARIABLE_VALUE"))[ CD ]
Line_879 $$ ResultSet out = s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")-->Line_881 $$ out.getString("VARIABLE_NAME")[ FD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_881 $$ out.getString("VARIABLE_NAME")[ FD ]
Line_879 $$ ResultSet out = s.executeQuery("SELECT * FROM GLOBAL_VARIABLES;")-->Line_881 $$ out.getString("VARIABLE_VALUE")[ FD ]
Line_754 $$ ResultSet out = s.executeQuery("SHOW ALL;")-->Line_881 $$ out.getString("VARIABLE_VALUE")[ FD ]
Line_0 $$ Entry-->Line_886 $$ //83
public class func [ CD ]
Line_886 $$ //83
public class func -->Line_887 $$ public void shouldPingDatabase() [ CD ]
Line_887 $$ public void shouldPingDatabase() -->Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")[ CD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_888 $$ DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")[ CD ]
Line_887 $$ public void shouldPingDatabase() -->Line_889 $$ conn.createStatement().executeQuery("SELECT 1 FROM SYSIBM.SYSDUMMY1")[ CD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_889 $$ conn.createStatement()[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_889 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_889 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_889 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_889 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_889 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_889 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_889 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_889 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_889 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_889 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_889 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_889 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_889 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_889 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_889 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_889 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_889 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_889 $$ conn.createStatement()[ FD ]
Line_0 $$ Entry-->Line_893 $$ //84
public class func [ CD ]
Line_893 $$ //84
public class func -->Line_894 $$ public void retrieveExternalResult(String dbName, String user, String password, ResultSet[] external) [ CD ]
Line_894 $$ public void retrieveExternalResult(String dbName, String user, String password, ResultSet[] external) -->Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)[ CD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_895 $$ DriverManager.getConnection(url, user, password)[ CD ]
Line_190 $$ String url = getURL("driver", true)-->Line_895 $$ DriverManager.getConnection(url, user, password)[ FD ]
Line_894 $$ public void retrieveExternalResult(String dbName, String user, String password, ResultSet[] external) -->Line_896 $$ conn.createStatement().executeQuery("VALUES(1)")[ CD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_896 $$ conn.createStatement()[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_896 $$ conn.createStatement()[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_896 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_896 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_896 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_896 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_896 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_896 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_896 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_896 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_896 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_896 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_896 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_896 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_896 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_896 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_896 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_896 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_896 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_896 $$ conn.createStatement()[ FD ]
Line_0 $$ Entry-->Line_900 $$ //85
public class func [ CD ]
Line_900 $$ //85
public class func -->Line_901 $$ public void testFailNoFromClauseSelect() [ CD ]
Line_901 $$ public void testFailNoFromClauseSelect() -->Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_902 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_901 $$ public void testFailNoFromClauseSelect() -->Line_903 $$ conn.createStatement().executeQuery("SELECT foo, bar")[ CD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_903 $$ conn.createStatement()[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_903 $$ conn.createStatement()[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_903 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_903 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_903 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_903 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_903 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_903 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_903 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_903 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_903 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_903 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_903 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_903 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_903 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_903 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_903 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_903 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_903 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_903 $$ conn.createStatement()[ FD ]
Line_0 $$ Entry-->Line_907 $$ //86
public class func [ CD ]
Line_907 $$ //86
public class func -->Line_908 $$ public void retrieveExternalResult(String dbName, String user, String password, ResultSet[] external) [ CD ]
Line_908 $$ public void retrieveExternalResult(String dbName, String user, String password, ResultSet[] external) -->Line_909 $$ Connection conn = DriverManager.getConnection(create_url)[ CD ]
Line_909 $$ Connection conn = DriverManager.getConnection(create_url)-->Line_909 $$ DriverManager.getConnection(create_url)[ CD ]
Line_908 $$ public void retrieveExternalResult(String dbName, String user, String password, ResultSet[] external) -->Line_910 $$ external[0] = conn.createStatement().executeQuery("VALUES(1)")[ CD ]
Line_910 $$ external[0] = conn.createStatement().executeQuery("VALUES(1)")-->Line_910 $$ conn.createStatement().executeQuery("VALUES(1)")[ CD ]
Line_909 $$ Connection conn = DriverManager.getConnection(create_url)-->Line_910 $$ conn.createStatement()[ FD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_910 $$ conn.createStatement()[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_910 $$ conn.createStatement()[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_910 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_910 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_910 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_910 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_910 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_910 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_910 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_910 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_910 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_910 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_910 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_910 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_910 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_910 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_910 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_910 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_910 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_910 $$ conn.createStatement()[ FD ]
Line_0 $$ Entry-->Line_914 $$ //87
public class func [ CD ]
Line_914 $$ //87
public class func -->Line_915 $$ public void testArrayConcatFunctionIntToCharArray() [ CD ]
Line_915 $$ public void testArrayConcatFunctionIntToCharArray() -->Line_916 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_916 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_916 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_915 $$ public void testArrayConcatFunctionIntToCharArray() -->Line_917 $$ initTables(conn)[ CD ]
Line_916 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_909 $$ Connection conn = DriverManager.getConnection(create_url)-->Line_917 $$ initTables(conn)[ FD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_917 $$ initTables(conn)[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_917 $$ initTables(conn)[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_917 $$ initTables(conn)[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_917 $$ initTables(conn)[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_917 $$ initTables(conn)[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_917 $$ initTables(conn)[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_917 $$ initTables(conn)[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_917 $$ initTables(conn)[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_917 $$ initTables(conn)[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_917 $$ initTables(conn)[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_917 $$ initTables(conn)[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_917 $$ initTables(conn)[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_917 $$ initTables(conn)[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_917 $$ initTables(conn)[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_917 $$ initTables(conn)[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_917 $$ initTables(conn)[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_917 $$ initTables(conn)[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_917 $$ initTables(conn)[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_917 $$ initTables(conn)[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_917 $$ initTables(conn)[ FD ]
Line_915 $$ public void testArrayConcatFunctionIntToCharArray() -->Line_918 $$ conn.createStatement().executeQuery("SELECT ARRAY_CAT(varchars,ARRAY[23,45]) FROM regions WHERE region_name = 'SF Bay Area'")[ CD ]
Line_916 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_909 $$ Connection conn = DriverManager.getConnection(create_url)-->Line_918 $$ conn.createStatement()[ FD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_918 $$ conn.createStatement()[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_918 $$ conn.createStatement()[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_918 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_918 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_918 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_918 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_918 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_918 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_918 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_918 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_918 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_918 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_918 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_918 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_918 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_918 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_918 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_918 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_918 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_918 $$ conn.createStatement()[ FD ]
Line_0 $$ Entry-->Line_922 $$ //88
public class func [ CD ]
Line_922 $$ //88
public class func -->Line_923 $$ public void testSplit_Upsert() [ CD ]
Line_923 $$ public void testSplit_Upsert() -->Line_924 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_924 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_924 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_923 $$ public void testSplit_Upsert() -->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ CD ]
Line_924 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_916 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_909 $$ Connection conn = DriverManager.getConnection(create_url)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_925 $$ initTable(conn, "ONE,TWO,THREE")[ FD ]
Line_923 $$ public void testSplit_Upsert() -->Line_926 $$ conn.createStatement().executeUpdate("UPSERT INTO SPLIT_TEST (ID, ARR) SELECT ID, " + "REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")[ CD ]
Line_924 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_916 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_909 $$ Connection conn = DriverManager.getConnection(create_url)-->Line_926 $$ conn.createStatement()[ FD ]
Line_902 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_895 $$ Connection conn = DriverManager.getConnection(url, user, password)-->Line_926 $$ conn.createStatement()[ FD ]
Line_888 $$ Connection conn = DriverManager.getConnection("jdbc:derby:memory:chapter02DB;create=true", "APP2", "APP")-->Line_926 $$ conn.createStatement()[ FD ]
Line_876 $$ Connection conn = DriverManager.getConnection(dbUrl, username, password)-->Line_926 $$ conn.createStatement()[ FD ]
Line_841 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_798 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_926 $$ conn.createStatement()[ FD ]
Line_786 $$ Connection conn = DriverManager.getConnection("jdbc:h2:tcp://localhost:9092/mydb", "sa", "")-->Line_926 $$ conn.createStatement()[ FD ]
Line_751 $$ Connection conn = DriverManager.getConnection(oriDBUrl, username, password)-->Line_926 $$ conn.createStatement()[ FD ]
Line_739 $$ Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl", "scott", "tiger")-->Line_926 $$ conn.createStatement()[ FD ]
Line_728 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_926 $$ conn.createStatement()[ FD ]
Line_718 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_926 $$ conn.createStatement()[ FD ]
Line_696 $$ Connection conn = DriverManager.getConnection("jdbc:hsqldb:mem:orders", "sa", "")-->Line_926 $$ conn.createStatement()[ FD ]
Line_685 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_926 $$ conn.createStatement()[ FD ]
Line_674 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_926 $$ conn.createStatement()[ FD ]
Line_658 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_926 $$ conn.createStatement()[ FD ]
Line_645 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_926 $$ conn.createStatement()[ FD ]
Line_634 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_926 $$ conn.createStatement()[ FD ]
Line_624 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_614 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_604 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_594 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_584 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_574 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_564 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_553 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_543 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_533 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_523 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_514 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_501 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_488 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_478 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_468 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_458 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_449 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_437 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_926 $$ conn.createStatement()[ FD ]
Line_428 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_420 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_412 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_404 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_392 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_380 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_372 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_355 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_345 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_926 $$ conn.createStatement()[ FD ]
Line_337 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_329 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_321 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_310 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_299 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_288 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_276 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_264 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_253 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_242 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_230 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_222 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_210 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_202 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_191 $$ Connection conn = DriverManager.getConnection(url, prop)-->Line_926 $$ conn.createStatement()[ FD ]
Line_179 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_168 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_157 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_146 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_138 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_127 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_116 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_105 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_94 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_83 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_72 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_61 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_39 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_26 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_TENANT_SPECIFIC_URL)-->Line_926 $$ conn.createStatement()[ FD ]
Line_15 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_926 $$ conn.createStatement()[ FD ]
Line_0 $$ Entry-->Line_931 $$ //89
public class func [ CD ]
Line_931 $$ //89
public class func -->Line_932 $$ public void setUp() [ CD ]
Line_932 $$ public void setUp() -->Line_933 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))[ CD ]
Line_933 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))-->Line_933 $$ DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))[ CD ]
Line_932 $$ public void setUp() -->Line_935 $$ doOnAllTables(connection, null, "public", "DROP TABLE \"%s\" CASCADE")[ CD ]
Line_933 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))-->Line_935 $$ doOnAllTables(connection, null, "public", "DROP TABLE \"%s\" CASCADE")[ FD ]
Line_831 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_935 $$ doOnAllTables(connection, null, "public", "DROP TABLE \"%s\" CASCADE")[ FD ]
Line_810 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_935 $$ doOnAllTables(connection, null, "public", "DROP TABLE \"%s\" CASCADE")[ FD ]
Line_932 $$ public void setUp() -->Line_936 $$ Statement st = connection.createStatement()[ CD ]
Line_936 $$ Statement st = connection.createStatement()-->Line_936 $$ connection.createStatement()[ CD ]
Line_933 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))-->Line_936 $$ connection.createStatement()[ FD ]
Line_831 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_936 $$ connection.createStatement()[ FD ]
Line_810 $$ final Connection connection = DriverManager.getConnection(URL, USER, PASSWORD)-->Line_936 $$ connection.createStatement()[ FD ]
Line_932 $$ public void setUp() -->Line_937 $$ executeSql(st, "DROP SEQUENCE IF EXISTS hierarchy_seq")[ CD ]
Line_936 $$ Statement st = connection.createStatement()-->Line_937 $$ executeSql(st, "DROP SEQUENCE IF EXISTS hierarchy_seq")[ FD ]
Line_932 $$ public void setUp() -->Line_938 $$ st.close()[ CD ]
Line_936 $$ Statement st = connection.createStatement()-->Line_938 $$ st.close()[ FD ]
