Line_0 $$ Entry-->Line_2 $$ //152
public class func [ CD ]
Line_2 $$ //152
public class func -->Line_3 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) [ CD ]
Line_3 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) -->Line_4 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_4 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_4 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_3 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) -->Line_5 $$ Statement s = c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)[ CD ]
Line_5 $$ Statement s = c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)-->Line_5 $$ c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)[ CD ]
Line_4 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_5 $$ c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)[ FD ]
Line_3 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) -->Line_8 $$ rs[0] = s.executeQuery("values (1), (2), (3)")[ CD ]
Line_8 $$ rs[0] = s.executeQuery("values (1), (2), (3)")-->Line_8 $$ s.executeQuery("values (1), (2), (3)")[ CD ]
Line_5 $$ Statement s = c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)-->Line_8 $$ s.executeQuery("values (1), (2), (3)")[ FD ]
