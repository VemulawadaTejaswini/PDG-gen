Line_0 $$ Entry-->Line_2 $$ //383
public class func [ CD ]
Line_2 $$ //383
public class func -->Line_3 $$ public void singleSpan() [ CD ]
Line_3 $$ public void singleSpan() -->Line_4 $$ Connection conn = DriverManager.getConnection(getUrl(), props)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_4 $$ DriverManager.getConnection(getUrl(), props)[ CD ]
Line_3 $$ public void singleSpan() -->Line_5 $$ sink.initForTesting(conn)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_5 $$ sink.initForTesting(conn)[ FD ]
Line_3 $$ public void singleSpan() -->Line_6 $$ createAndFlush(sink, traceid, Span.ROOT_SPAN_ID, 10, "root", 12, 13, "host-name.value", "test annotation for a span")[ CD ]
Line_3 $$ public void singleSpan() -->Line_8 $$ validateTraces(Collections.singletonList(record), conn, traceid)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_8 $$ validateTraces(Collections.singletonList(record), conn, traceid)[ FD ]
