Line_0 $$ Entry-->Line_2 $$ //62
public class func [ CD ]
Line_2 $$ //62
public class func -->Line_3 $$ public void assertConnection(int port) [ CD ]
Line_3 $$ public void assertConnection(int port) -->Line_4 $$ final Connection conn = DriverManager.getConnection(connectionStr)[ CD ]
Line_4 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_4 $$ DriverManager.getConnection(connectionStr)[ CD ]
Line_3 $$ public void assertConnection(int port) -->Line_5 $$ final Statement stmt = conn.createStatement()[ CD ]
Line_5 $$ final Statement stmt = conn.createStatement()-->Line_5 $$ conn.createStatement()[ CD ]
Line_4 $$ final Connection conn = DriverManager.getConnection(connectionStr)-->Line_5 $$ conn.createStatement()[ FD ]
Line_3 $$ public void assertConnection(int port) -->Line_6 $$ final ResultSet rs = stmt.executeQuery("values(1)")[ CD ]
Line_6 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_6 $$ stmt.executeQuery("values(1)")[ CD ]
Line_5 $$ final Statement stmt = conn.createStatement()-->Line_6 $$ stmt.executeQuery("values(1)")[ FD ]
Line_3 $$ public void assertConnection(int port) -->Line_7 $$ while (rs.next()) [ CD ]
Line_3 $$ public void assertConnection(int port) -->Line_3 $$ public void assertConnection(int port) [ CD ]
Line_7 $$ while (rs.next()) -->Line_7 $$ rs.next()[ CD ]
Line_6 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_7 $$ rs.next()[ FD ]
Line_7 $$ while (rs.next()) -->Line_9 $$ Assert.assertEquals("1", rs.getString(1))[ CD ]
Line_6 $$ final ResultSet rs = stmt.executeQuery("values(1)")-->Line_9 $$ rs.getString(1)[ FD ]
Line_3 $$ public void assertConnection(int port) -->Line_11 $$ Assert.assertTrue("No value found.", valueFound)[ CD ]
