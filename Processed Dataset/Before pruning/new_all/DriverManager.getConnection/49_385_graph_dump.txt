Line_0 $$ Entry-->Line_2 $$ //48
public class func [ CD ]
Line_2 $$ //48
public class func -->Line_3 $$ public void testSplit_NoSplitString() [ CD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_5 $$ initTable(conn, "CANNOT BE SPLIT")[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_5 $$ initTable(conn, "CANNOT BE SPLIT")[ FD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_6 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")[ CD ]
Line_6 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_6 $$ conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_6 $$ conn.createStatement()[ FD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_8 $$ assertTrue(rs.next())[ CD ]
Line_6 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_8 $$ rs.next()[ FD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_9 $$ Array array = rs.getArray(1)[ CD ]
Line_9 $$ Array array = rs.getArray(1)-->Line_9 $$ rs.getArray(1)[ CD ]
Line_6 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',') FROM SPLIT_TEST")-->Line_9 $$ rs.getArray(1)[ FD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_10 $$ String[] values = (String[]) array.getArray()[ CD ]
Line_9 $$ Array array = rs.getArray(1)-->Line_10 $$ array.getArray()[ FD ]
Line_3 $$ public void testSplit_NoSplitString() -->Line_11 $$ assertArrayEquals(new String[] [ CD ]
Line_10 $$ String[] values = (String[]) array.getArray()-->Line_11 $$ assertArrayEquals(new String[] [ FD ]
