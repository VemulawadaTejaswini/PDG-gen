Line_0 $$ Entry-->Line_2 $$ //16
public class func [ CD ]
Line_2 $$ //16
public class func -->Line_3 $$ public void testOrderByOptimizedOut() [ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_4 $$ DriverManager.getConnection(getUrl(), props)[ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_5 $$ conn.createStatement().execute("CREATE VIEW v(v2 VARCHAR) AS SELECT * FROM t WHERE k1 = 'a'")[ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_6 $$ conn.createStatement().execute("CREATE INDEX i1 ON v(v2) INCLUDE(v1)")[ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_7 $$ ResultSet rs = conn.createStatement().executeQuery("EXPLAIN SELECT v1,v2 FROM v WHERE v2 > 'a' ORDER BY v2")[ CD ]
Line_7 $$ ResultSet rs = conn.createStatement().executeQuery("EXPLAIN SELECT v1,v2 FROM v WHERE v2 > 'a' ORDER BY v2")-->Line_7 $$ conn.createStatement().executeQuery("EXPLAIN SELECT v1,v2 FROM v WHERE v2 > 'a' ORDER BY v2")[ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_8 $$ assertEquals("CLIENT PARALLEL 1-WAY RANGE SCAN OVER _IDX_T ['me',-32768,'a'] - ['me',-32768,*]", QueryUtil.getExplainPlan(rs))[ CD ]
Line_7 $$ ResultSet rs = conn.createStatement().executeQuery("EXPLAIN SELECT v1,v2 FROM v WHERE v2 > 'a' ORDER BY v2")-->Line_9 $$ QueryUtil.getExplainPlan(rs)[ FD ]
