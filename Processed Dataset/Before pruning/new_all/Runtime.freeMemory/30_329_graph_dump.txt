Line_0 $$ Entry-->Line_2 $$ //29
public class func [ CD ]
Line_2 $$ //29
public class func -->Line_3 $$ public void printMemory() [ CD ]
Line_3 $$ public void printMemory() -->Line_4 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void printMemory() -->Line_5 $$ long total = rt.totalMemory()[ CD ]
Line_5 $$ long total = rt.totalMemory()-->Line_5 $$ rt.totalMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.totalMemory()[ FD ]
Line_3 $$ public void printMemory() -->Line_6 $$ long free = rt.freeMemory()[ CD ]
Line_6 $$ long free = rt.freeMemory()-->Line_6 $$ rt.freeMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_6 $$ rt.freeMemory()[ FD ]
Line_3 $$ public void printMemory() -->Line_7 $$ long max = rt.maxMemory()[ CD ]
Line_7 $$ long max = rt.maxMemory()-->Line_7 $$ rt.maxMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_7 $$ rt.maxMemory()[ FD ]
Line_3 $$ public void printMemory() -->Line_8 $$ System.out.println(String.format("total=%dk, free=%dk, max=%dk, use=%dk", total / 1024, free / 1024, max / 1024, (total - free) / 1024))[ CD ]
