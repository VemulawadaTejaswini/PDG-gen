Line_0 $$ Entry-->Line_2 $$ //41
public class func [ CD ]
Line_2 $$ //41
public class func -->Line_3 $$ public void logMemoryStatistics() [ CD ]
Line_3 $$ public void logMemoryStatistics() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void logMemoryStatistics() -->Line_5 $$ long freeBytes = runtime.freeMemory()[ CD ]
Line_5 $$ long freeBytes = runtime.freeMemory()-->Line_5 $$ runtime.freeMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void logMemoryStatistics() -->Line_6 $$ long maxBytes = runtime.maxMemory()[ CD ]
Line_6 $$ long maxBytes = runtime.maxMemory()-->Line_6 $$ runtime.maxMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.maxMemory()[ FD ]
Line_3 $$ public void logMemoryStatistics() -->Line_7 $$ long totalBytes = runtime.totalMemory()[ CD ]
Line_7 $$ long totalBytes = runtime.totalMemory()-->Line_7 $$ runtime.totalMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_7 $$ runtime.totalMemory()[ FD ]
Line_3 $$ public void logMemoryStatistics() -->Line_8 $$ log.info("Memory (bytes): [ CD ]
Line_7 $$ long totalBytes = runtime.totalMemory()-->Line_8 $$ log.info("Memory (bytes): [ FD ]
Line_6 $$ long maxBytes = runtime.maxMemory()-->Line_8 $$ log.info("Memory (bytes): [ FD ]
