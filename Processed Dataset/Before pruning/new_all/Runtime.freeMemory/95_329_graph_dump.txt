Line_0 $$ Entry-->Line_2 $$ //94
public class func [ CD ]
Line_2 $$ //94
public class func -->Line_3 $$ public void describeMemoryUsage() [ CD ]
Line_3 $$ public void describeMemoryUsage() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void describeMemoryUsage() -->Line_5 $$ long free = runtime.freeMemory()[ CD ]
Line_5 $$ long free = runtime.freeMemory()-->Line_5 $$ runtime.freeMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void describeMemoryUsage() -->Line_6 $$ return String.format("%sM used, %sM free, %sM max", (runtime.totalMemory() - free) / 1000000, free / 1000000, runtime.maxMemory() / 1000000);[ CD ]
Line_6 $$ return String.format("%sM used, %sM free, %sM max", (runtime.totalMemory() - free) / 1000000, free / 1000000, runtime.maxMemory() / 1000000);-->Line_6 $$ String.format("%sM used, %sM free, %sM max", (runtime.totalMemory() - free) / 1000000, free / 1000000, runtime.maxMemory() / 1000000)[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_8 $$ runtime.totalMemory()[ FD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_10 $$ runtime.maxMemory()[ FD ]
