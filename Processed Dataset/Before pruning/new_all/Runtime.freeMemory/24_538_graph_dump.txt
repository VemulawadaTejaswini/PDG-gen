Line_0 $$ Entry-->Line_2 $$ //23
public class func [ CD ]
Line_2 $$ //23
public class func -->Line_3 $$ public void getMemoryUsage() [ CD ]
Line_3 $$ public void getMemoryUsage() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void getMemoryUsage() -->Line_5 $$ long freeMemory = runtime.freeMemory()[ CD ]
Line_5 $$ long freeMemory = runtime.freeMemory()-->Line_5 $$ runtime.freeMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void getMemoryUsage() -->Line_6 $$ long totalMemory = runtime.totalMemory()[ CD ]
Line_6 $$ long totalMemory = runtime.totalMemory()-->Line_6 $$ runtime.totalMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.totalMemory()[ FD ]
Line_3 $$ public void getMemoryUsage() -->Line_7 $$ String memoryStatus = usedInMegabytes + "M / " + totalInMegabytes + "M / " + (runtime.maxMemory() / mega) + "M"[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_7 $$ runtime.maxMemory()[ FD ]
Line_3 $$ public void getMemoryUsage() -->Line_8 $$ if (usedInMegabytes <= lastUsage - MEMORY_THRESHOLD || usedInMegabytes >= lastUsage + MEMORY_THRESHOLD) [ CD ]
Line_8 $$ if (usedInMegabytes <= lastUsage - MEMORY_THRESHOLD || usedInMegabytes >= lastUsage + MEMORY_THRESHOLD) -->Line_9 $$ Log.info("Memory usage: " + memoryStatus)[ CD ]
