Line_0 $$ Entry-->Line_2 $$ //89
public class func [ CD ]
Line_2 $$ //89
public class func -->Line_3 $$ public void uft() [ CD ]
Line_3 $$ public void uft() -->Line_4 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void uft() -->Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory(), used = total - free[ CD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory(), used = total - free-->Line_5 $$ rt.freeMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.freeMemory()[ FD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory(), used = total - free-->Line_5 $$ rt.totalMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.totalMemory()[ FD ]
Line_3 $$ public void uft() -->Line_6 $$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
return ", used " + nf.format(used) + ", free " + nf.format(free) + ", total " + nf.format(total);[ CD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory(), used = total - free-->Line_6 $$ nf.format(used)[ FD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory(), used = total - free-->Line_6 $$ nf.format(free)[ FD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory(), used = total - free-->Line_6 $$ nf.format(total)[ FD ]
