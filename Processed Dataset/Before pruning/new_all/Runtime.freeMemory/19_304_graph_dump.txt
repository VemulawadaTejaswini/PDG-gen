Line_0 $$ Entry-->Line_2 $$ //18
public class func [ CD ]
Line_2 $$ //18
public class func -->Line_3 $$ public void getMemory() [ CD ]
Line_3 $$ public void getMemory() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void getMemory() -->Line_5 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.totalMemory()[ FD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void getMemory() -->Line_6 $$ while (presentMemory < memory) [ CD ]
Line_3 $$ public void getMemory() -->Line_3 $$ public void getMemory() [ CD ]
Line_5 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_6 $$ while (presentMemory < memory) [ FD ]
Line_6 $$ while (presentMemory < memory) -->Line_10 $$ doGarbageCollection()[ CD ]
Line_6 $$ while (presentMemory < memory) -->Line_12 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ CD ]
Line_12 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_12 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_5 $$ long presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_12 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())[ FD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_12 $$ runtime.totalMemory()[ FD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_12 $$ runtime.freeMemory()[ FD ]
Line_12 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_6 $$ while (presentMemory < memory) [ FD ]
Line_12 $$ presentMemory = (runtime.totalMemory() - runtime.freeMemory())-->Line_6 $$ while (presentMemory < memory) [ FD ]
