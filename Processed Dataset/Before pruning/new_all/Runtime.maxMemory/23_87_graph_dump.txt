Line_0 $$ Entry-->Line_2 $$ //22
public class func [ CD ]
Line_2 $$ //22
public class func -->Line_3 $$ public void run() [ CD ]
Line_3 $$ public void run() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void run() -->Line_5 $$ long dalvikMax = runtime.maxMemory()[ CD ]
Line_5 $$ long dalvikMax = runtime.maxMemory()-->Line_5 $$ runtime.maxMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.maxMemory()[ FD ]
Line_3 $$ public void run() -->Line_6 $$ long dalvikUsed = runtime.totalMemory() - runtime.freeMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.totalMemory()[ FD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void run() -->Line_7 $$ if (dalvikUsed > ((3 * dalvikMax) / 4)) [ CD ]
Line_6 $$ long dalvikUsed = runtime.totalMemory() - runtime.freeMemory()-->Line_7 $$ if (dalvikUsed > ((3 * dalvikMax) / 4)) [ FD ]
Line_7 $$ if (dalvikUsed > ((3 * dalvikMax) / 4)) -->Line_8 $$ if (DEBUG_MEMORY_TRIM)
    Slog.d(TAG, "Dalvik max=" + (dalvikMax / 1024) + " total=" + (runtime.totalMemory() / 1024) + " used=" + (dalvikUsed / 1024));[ CD ]
Line_8 $$ if (DEBUG_MEMORY_TRIM)
    Slog.d(TAG, "Dalvik max=" + (dalvikMax / 1024) + " total=" + (runtime.totalMemory() / 1024) + " used=" + (dalvikUsed / 1024));-->Line_8 $$ Slog.d(TAG, "Dalvik max=" + (dalvikMax / 1024) + " total=" + (runtime.totalMemory() / 1024) + " used=" + (dalvikUsed / 1024))[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_9 $$ runtime.totalMemory()[ FD ]
