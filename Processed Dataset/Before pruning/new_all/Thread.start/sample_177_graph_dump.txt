Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void HttpClient() [ CD ]
Line_3 $$ public void HttpClient() -->Line_4 $$ Thread t = new Thread(this, name)[ CD ]
Line_3 $$ public void HttpClient() -->Line_5 $$ t.setDaemon(true)[ CD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_5 $$ t.setDaemon(true)[ FD ]
Line_3 $$ public void HttpClient() -->Line_6 $$ t.start()[ CD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_6 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_10 $$ //1
public class func [ CD ]
Line_10 $$ //1
public class func -->Line_11 $$ public void AsyncInMemoryIndexingService() [ CD ]
Line_11 $$ public void AsyncInMemoryIndexingService() -->Line_12 $$ Thread delete = new Thread(new DeleteThread())[ CD ]
Line_11 $$ public void AsyncInMemoryIndexingService() -->Line_13 $$ delete.setDaemon(true)[ CD ]
Line_12 $$ Thread delete = new Thread(new DeleteThread())-->Line_13 $$ delete.setDaemon(true)[ FD ]
Line_11 $$ public void AsyncInMemoryIndexingService() -->Line_14 $$ delete.start()[ CD ]
Line_12 $$ Thread delete = new Thread(new DeleteThread())-->Line_14 $$ delete.start()[ FD ]
Line_0 $$ Entry-->Line_18 $$ //2
public class func [ CD ]
Line_18 $$ //2
public class func -->Line_19 $$ public void execute(Runnable command) [ CD ]
Line_19 $$ public void execute(Runnable command) -->Line_20 $$ String name = metadata.get(Metadata.RESOURCE_NAME_KEY)[ CD ]
Line_20 $$ String name = metadata.get(Metadata.RESOURCE_NAME_KEY)-->Line_20 $$ metadata.get(Metadata.RESOURCE_NAME_KEY)[ CD ]
Line_19 $$ public void execute(Runnable command) -->Line_21 $$ if (name != null) [ CD ]
Line_20 $$ String name = metadata.get(Metadata.RESOURCE_NAME_KEY)-->Line_21 $$ if (name != null) [ FD ]
Line_21 $$ if (name != null) -->Line_22 $$ name = "Apache Tika: " + name[ CD ]
Line_20 $$ String name = metadata.get(Metadata.RESOURCE_NAME_KEY)-->Line_22 $$ name = "Apache Tika: " + name[ FD ]
Line_22 $$ name = "Apache Tika: " + name-->Line_22 $$ name = "Apache Tika: " + name[ FD ]
Line_20 $$ String name = metadata.get(Metadata.RESOURCE_NAME_KEY)-->Line_22 $$ name = "Apache Tika: " + name[ FD ]
Line_22 $$ name = "Apache Tika: " + name-->Line_22 $$ name = "Apache Tika: " + name[ FD ]
Line_21 $$ if (name != null) -->Line_24 $$ name = "Apache Tika"[ CD ]
Line_20 $$ String name = metadata.get(Metadata.RESOURCE_NAME_KEY)-->Line_24 $$ name = "Apache Tika"[ FD ]
Line_22 $$ name = "Apache Tika: " + name-->Line_24 $$ name = "Apache Tika"[ FD ]
Line_24 $$ name = "Apache Tika"-->Line_24 $$ name = "Apache Tika"[ FD ]
Line_19 $$ public void execute(Runnable command) -->Line_26 $$ Thread thread = new Thread(command, name)[ CD ]
Line_19 $$ public void execute(Runnable command) -->Line_27 $$ thread.setDaemon(true)[ CD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_27 $$ thread.setDaemon(true)[ FD ]
Line_19 $$ public void execute(Runnable command) -->Line_28 $$ thread.start()[ CD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_28 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_32 $$ //3
public class func [ CD ]
Line_32 $$ //3
public class func -->Line_33 $$ public void start() [ CD ]
Line_33 $$ public void start() -->Line_34 $$ updateHeartbeatTimestamp()[ CD ]
Line_33 $$ public void start() -->Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")[ CD ]
Line_33 $$ public void start() -->Line_36 $$ t.setDaemon(false)[ CD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_36 $$ t.setDaemon(false)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_36 $$ t.setDaemon(false)[ FD ]
Line_33 $$ public void start() -->Line_37 $$ t.start()[ CD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_37 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_37 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_41 $$ //4
public class func [ CD ]
Line_41 $$ //4
public class func -->Line_42 $$ public void start() [ CD ]
Line_42 $$ public void start() -->Line_43 $$ builder.start()[ CD ]
Line_42 $$ public void start() -->Line_45 $$ InputStreamReader output = new InputStreamReader(new BufferedInputStream(process.getInputStream()))[ CD ]
Line_42 $$ public void start() -->Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))[ CD ]
Line_42 $$ public void start() -->Line_47 $$ t.setDaemon(true)[ CD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_47 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_47 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_47 $$ t.setDaemon(true)[ FD ]
Line_42 $$ public void start() -->Line_48 $$ t.start()[ CD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_48 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_48 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_48 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_52 $$ //5
public class func [ CD ]
Line_52 $$ //5
public class func -->Line_53 $$ public void activate() [ CD ]
Line_53 $$ public void activate() -->Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")[ CD ]
Line_53 $$ public void activate() -->Line_55 $$ thread.setDaemon(true)[ CD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_55 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_55 $$ thread.setDaemon(true)[ FD ]
Line_53 $$ public void activate() -->Line_56 $$ thread.start()[ CD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_56 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_56 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_60 $$ //6
public class func [ CD ]
Line_60 $$ //6
public class func -->Line_61 $$ public void ProcessManager() [ CD ]
Line_61 $$ public void ProcessManager() -->Line_62 $$ Thread reaperThread = new Thread(ProcessManager.class.getName()) [ CD ]
Line_63 $$ @Override
public void run() -->Line_64 $$ watchChildren()[ CD ]
Line_61 $$ public void ProcessManager() -->Line_67 $$ reaperThread.setDaemon(true)[ CD ]
Line_62 $$ Thread reaperThread = new Thread(ProcessManager.class.getName()) -->Line_67 $$ reaperThread.setDaemon(true)[ FD ]
Line_61 $$ public void ProcessManager() -->Line_68 $$ reaperThread.start()[ CD ]
Line_62 $$ Thread reaperThread = new Thread(ProcessManager.class.getName()) -->Line_68 $$ reaperThread.start()[ FD ]
Line_0 $$ Entry-->Line_72 $$ //7
public class func [ CD ]
Line_72 $$ //7
public class func -->Line_73 $$ public void createWorker(String nodeId) [ CD ]
Line_73 $$ public void createWorker(String nodeId) -->Line_74 $$ Worker worker = new Worker(this, port, nodeId)[ CD ]
Line_73 $$ public void createWorker(String nodeId) -->Line_75 $$ workers.add(worker)[ CD ]
Line_74 $$ Worker worker = new Worker(this, port, nodeId)-->Line_75 $$ workers.add(worker)[ FD ]
Line_73 $$ public void createWorker(String nodeId) -->Line_76 $$ Thread t = new Thread(worker)[ CD ]
Line_73 $$ public void createWorker(String nodeId) -->Line_77 $$ t.setDaemon(true)[ CD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_77 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_77 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_77 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_77 $$ t.setDaemon(true)[ FD ]
Line_73 $$ public void createWorker(String nodeId) -->Line_78 $$ t.start()[ CD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_78 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_78 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_78 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_78 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_82 $$ //8
public class func [ CD ]
Line_82 $$ //8
public class func -->Line_83 $$ public void startListening() [ CD ]
Line_83 $$ public void startListening() -->Line_84 $$ final Thread thread = new Thread(this)[ CD ]
Line_83 $$ public void startListening() -->Line_85 $$ thread.setDaemon(true)[ CD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_85 $$ thread.setDaemon(true)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_85 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_85 $$ thread.setDaemon(true)[ FD ]
Line_83 $$ public void startListening() -->Line_86 $$ thread.start()[ CD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_86 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_86 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_86 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_90 $$ //9
public class func [ CD ]
Line_90 $$ //9
public class func -->Line_91 $$ public void backgroundTask(Runnable task) [ CD ]
Line_91 $$ public void backgroundTask(Runnable task) -->Line_92 $$ Thread th = new Thread(task, task.getClass().getName())[ CD ]
Line_91 $$ public void backgroundTask(Runnable task) -->Line_93 $$ th.setDaemon(true)[ CD ]
Line_92 $$ Thread th = new Thread(task, task.getClass().getName())-->Line_93 $$ th.setDaemon(true)[ FD ]
Line_91 $$ public void backgroundTask(Runnable task) -->Line_94 $$ th.start()[ CD ]
Line_92 $$ Thread th = new Thread(task, task.getClass().getName())-->Line_94 $$ th.start()[ FD ]
Line_0 $$ Entry-->Line_98 $$ //10
public class func [ CD ]
Line_98 $$ //10
public class func -->Line_99 $$ public void StreamMonitor(InputStream istr, String prefixString, boolean printContents) [ CD ]
Line_99 $$ public void StreamMonitor(InputStream istr, String prefixString, boolean printContents) -->Line_100 $$ Thread thr = new Thread(this)[ CD ]
Line_99 $$ public void StreamMonitor(InputStream istr, String prefixString, boolean printContents) -->Line_101 $$ thr.setDaemon(true)[ CD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_101 $$ thr.setDaemon(true)[ FD ]
Line_99 $$ public void StreamMonitor(InputStream istr, String prefixString, boolean printContents) -->Line_102 $$ thr.start()[ CD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_102 $$ thr.start()[ FD ]
Line_0 $$ Entry-->Line_106 $$ //11
public class func [ CD ]
Line_106 $$ //11
public class func -->Line_107 $$ public void InternalEventHandler(VirtualMachineImpl vm, EventQueueImpl queue) [ CD ]
Line_107 $$ public void InternalEventHandler(VirtualMachineImpl vm, EventQueueImpl queue) -->Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")[ CD ]
Line_107 $$ public void InternalEventHandler(VirtualMachineImpl vm, EventQueueImpl queue) -->Line_110 $$ thread.setDaemon(true)[ CD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_110 $$ thread.setDaemon(true)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_110 $$ thread.setDaemon(true)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_110 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_110 $$ thread.setDaemon(true)[ FD ]
Line_107 $$ public void InternalEventHandler(VirtualMachineImpl vm, EventQueueImpl queue) -->Line_111 $$ thread.start()[ CD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_111 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_111 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_111 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_111 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_115 $$ //12
public class func [ CD ]
Line_115 $$ //12
public class func -->Line_116 $$ public void startListener(Listener l) [ CD ]
Line_116 $$ public void startListener(Listener l) -->Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))[ CD ]
Line_116 $$ public void startListener(Listener l) -->Line_118 $$ t.setDaemon(true)[ CD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_118 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_118 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_118 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_118 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_118 $$ t.setDaemon(true)[ FD ]
Line_116 $$ public void startListener(Listener l) -->Line_119 $$ t.start()[ CD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_119 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_119 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_119 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_119 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_119 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_123 $$ //13
public class func [ CD ]
Line_123 $$ //13
public class func -->Line_124 $$ public void newStartedThread(Runnable runnable) [ CD ]
Line_124 $$ public void newStartedThread(Runnable runnable) -->Line_125 $$ Thread t = new Thread(runnable)[ CD ]
Line_124 $$ public void newStartedThread(Runnable runnable) -->Line_126 $$ t.setDaemon(true)[ CD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_126 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_126 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_126 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_126 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_126 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_126 $$ t.setDaemon(true)[ FD ]
Line_124 $$ public void newStartedThread(Runnable runnable) -->Line_127 $$ t.start()[ CD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_127 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_127 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_127 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_127 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_127 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_127 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_131 $$ //14
public class func [ CD ]
Line_131 $$ //14
public class func -->Line_132 $$ public void forCaches(final Logger logger, final Cache... caches) [ CD ]
Line_132 $$ public void forCaches(final Logger logger, final Cache... caches) -->Line_133 $$ logger.error("DebugStatistics object created - do not use in production code")[ CD ]
Line_132 $$ public void forCaches(final Logger logger, final Cache... caches) -->Line_134 $$ final DebugStatistics stats = new DebugStatistics(logger, caches)[ CD ]
Line_132 $$ public void forCaches(final Logger logger, final Cache... caches) -->Line_135 $$ final Thread statsThread = new Thread(stats)[ CD ]
Line_132 $$ public void forCaches(final Logger logger, final Cache... caches) -->Line_136 $$ statsThread.setDaemon(true)[ CD ]
Line_135 $$ final Thread statsThread = new Thread(stats)-->Line_136 $$ statsThread.setDaemon(true)[ FD ]
Line_132 $$ public void forCaches(final Logger logger, final Cache... caches) -->Line_137 $$ statsThread.start()[ CD ]
Line_135 $$ final Thread statsThread = new Thread(stats)-->Line_137 $$ statsThread.start()[ FD ]
Line_0 $$ Entry-->Line_141 $$ //15
public class func [ CD ]
Line_141 $$ //15
public class func -->Line_142 $$ public void activate() [ CD ]
Line_142 $$ public void activate() -->Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")[ CD ]
Line_142 $$ public void activate() -->Line_144 $$ thread.setDaemon(true)[ CD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_144 $$ thread.setDaemon(true)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_144 $$ thread.setDaemon(true)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_144 $$ thread.setDaemon(true)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_144 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_144 $$ thread.setDaemon(true)[ FD ]
Line_142 $$ public void activate() -->Line_145 $$ thread.start()[ CD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_145 $$ thread.start()[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_145 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_145 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_145 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_145 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_149 $$ //16
public class func [ CD ]
Line_149 $$ //16
public class func -->Line_150 $$ public void StopWatchTimer() [ CD ]
Line_150 $$ public void StopWatchTimer() -->Line_151 $$ Thread timerThread = new Thread(this)[ CD ]
Line_150 $$ public void StopWatchTimer() -->Line_152 $$ timerThread.setDaemon(true)[ CD ]
Line_151 $$ Thread timerThread = new Thread(this)-->Line_152 $$ timerThread.setDaemon(true)[ FD ]
Line_150 $$ public void StopWatchTimer() -->Line_153 $$ timerThread.start()[ CD ]
Line_151 $$ Thread timerThread = new Thread(this)-->Line_153 $$ timerThread.start()[ FD ]
Line_0 $$ Entry-->Line_157 $$ //17
public class func [ CD ]
Line_157 $$ //17
public class func -->Line_158 $$ public void evaluate() [ CD ]
Line_158 $$ public void evaluate() -->Line_159 $$ Thread t = new Thread("JavaFX Init Thread") [ CD ]
Line_160 $$ public void run() -->Line_161 $$ Application.launch(JavaFXRule.class, new String[0])[ CD ]
Line_158 $$ public void evaluate() -->Line_164 $$ t.setDaemon(true)[ CD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_164 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_164 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_164 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_164 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_164 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_164 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_164 $$ t.setDaemon(true)[ FD ]
Line_158 $$ public void evaluate() -->Line_165 $$ t.start()[ CD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_165 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_165 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_165 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_165 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_165 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_165 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_165 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_169 $$ //18
public class func [ CD ]
Line_169 $$ //18
public class func -->Line_170 $$ public void serviceAdded(ServiceEvent serviceEvent) [ CD ]
Line_170 $$ public void serviceAdded(ServiceEvent serviceEvent) -->Line_171 $$ GetServiceInfoRunnable r = new GetServiceInfoRunnable(serviceEvent)[ CD ]
Line_170 $$ public void serviceAdded(ServiceEvent serviceEvent) -->Line_172 $$ Thread t = new Thread(r)[ CD ]
Line_170 $$ public void serviceAdded(ServiceEvent serviceEvent) -->Line_173 $$ t.setDaemon(true)[ CD ]
Line_172 $$ Thread t = new Thread(r)-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_173 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_173 $$ t.setDaemon(true)[ FD ]
Line_170 $$ public void serviceAdded(ServiceEvent serviceEvent) -->Line_174 $$ t.start()[ CD ]
Line_172 $$ Thread t = new Thread(r)-->Line_174 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_174 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_174 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_174 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_174 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_174 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_174 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_174 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_178 $$ //19
public class func [ CD ]
Line_178 $$ //19
public class func -->Line_179 $$ public void startJob(Runnable target) [ CD ]
Line_179 $$ public void startJob(Runnable target) -->Line_180 $$ final Thread thread = new Thread(target)[ CD ]
Line_179 $$ public void startJob(Runnable target) -->Line_181 $$ thread.setDaemon(true)[ CD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_181 $$ thread.setDaemon(true)[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_181 $$ thread.setDaemon(true)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_181 $$ thread.setDaemon(true)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_181 $$ thread.setDaemon(true)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_181 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_181 $$ thread.setDaemon(true)[ FD ]
Line_179 $$ public void startJob(Runnable target) -->Line_182 $$ thread.start()[ CD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_182 $$ thread.start()[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_182 $$ thread.start()[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_182 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_182 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_182 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_182 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_186 $$ //20
public class func [ CD ]
Line_186 $$ //20
public class func -->Line_187 $$ public void createTBI(TeamBroadcastListener list) [ CD ]
Line_187 $$ public void createTBI(TeamBroadcastListener list) -->Line_188 $$ TeamBroadcastInstance ret = new TeamBroadcastInstance()[ CD ]
Line_187 $$ public void createTBI(TeamBroadcastListener list) -->Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))[ CD ]
Line_188 $$ TeamBroadcastInstance ret = new TeamBroadcastInstance()-->Line_189 $$ ret.name()[ FD ]
Line_187 $$ public void createTBI(TeamBroadcastListener list) -->Line_190 $$ t.setDaemon(true)[ CD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_190 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_190 $$ t.setDaemon(true)[ FD ]
Line_187 $$ public void createTBI(TeamBroadcastListener list) -->Line_191 $$ t.start()[ CD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_191 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_191 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_191 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_191 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_191 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_191 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_191 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_191 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_191 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_195 $$ //21
public class func [ CD ]
Line_195 $$ //21
public class func -->Line_196 $$ public void run() [ CD ]
Line_196 $$ public void run() -->Line_197 $$ Thread thr = new Thread(thisRunnable)[ CD ]
Line_196 $$ public void run() -->Line_198 $$ thr.setDaemon(true)[ CD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_198 $$ thr.setDaemon(true)[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_198 $$ thr.setDaemon(true)[ FD ]
Line_196 $$ public void run() -->Line_199 $$ thr.start()[ CD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_199 $$ thr.start()[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_199 $$ thr.start()[ FD ]
Line_0 $$ Entry-->Line_203 $$ //22
public class func [ CD ]
Line_203 $$ //22
public class func -->Line_204 $$ public void start() [ CD ]
Line_204 $$ public void start() -->Line_206 $$ t.setDaemon(false)[ CD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_206 $$ t.setDaemon(false)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_206 $$ t.setDaemon(false)[ FD ]
Line_204 $$ public void start() -->Line_207 $$ t.start()[ CD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_207 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_207 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_207 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_207 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_207 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_207 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_207 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_207 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_207 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_211 $$ //23
public class func [ CD ]
Line_211 $$ //23
public class func -->Line_212 $$ public void HTTPSession(Socket s) [ CD ]
Line_212 $$ public void HTTPSession(Socket s) -->Line_213 $$ Thread t = new Thread(this)[ CD ]
Line_212 $$ public void HTTPSession(Socket s) -->Line_214 $$ t.setDaemon(true)[ CD ]
Line_213 $$ Thread t = new Thread(this)-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_214 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_214 $$ t.setDaemon(true)[ FD ]
Line_212 $$ public void HTTPSession(Socket s) -->Line_215 $$ t.start()[ CD ]
Line_213 $$ Thread t = new Thread(this)-->Line_215 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_215 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_215 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_215 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_215 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_215 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_215 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_215 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_215 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_215 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_219 $$ //24
public class func [ CD ]
Line_219 $$ //24
public class func -->Line_220 $$ public void HTTPSession(Socket s) [ CD ]
Line_220 $$ public void HTTPSession(Socket s) -->Line_221 $$ Thread t = new Thread(this)[ CD ]
Line_220 $$ public void HTTPSession(Socket s) -->Line_222 $$ t.setDaemon(true)[ CD ]
Line_221 $$ Thread t = new Thread(this)-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_222 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_222 $$ t.setDaemon(true)[ FD ]
Line_220 $$ public void HTTPSession(Socket s) -->Line_223 $$ t.start()[ CD ]
Line_221 $$ Thread t = new Thread(this)-->Line_223 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_223 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_223 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_223 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_223 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_223 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_223 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_223 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_223 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_223 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_223 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_227 $$ //25
public class func [ CD ]
Line_227 $$ //25
public class func -->Line_228 $$ public void start() [ CD ]
Line_228 $$ public void start() -->Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")[ CD ]
Line_228 $$ public void start() -->Line_231 $$ t.setDaemon(true)[ CD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_231 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_231 $$ t.setDaemon(true)[ FD ]
Line_228 $$ public void start() -->Line_232 $$ t.start()[ CD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_232 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_232 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_232 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_232 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_232 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_232 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_232 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_232 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_232 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_232 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_232 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_232 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_236 $$ //26
public class func [ CD ]
Line_236 $$ //26
public class func -->Line_237 $$ public void DiffingObserver(boolean startInBackground) [ CD ]
Line_237 $$ public void DiffingObserver(boolean startInBackground) -->Line_238 $$ Thread th = new Thread(this)[ CD ]
Line_237 $$ public void DiffingObserver(boolean startInBackground) -->Line_239 $$ th.setDaemon(true)[ CD ]
Line_238 $$ Thread th = new Thread(this)-->Line_239 $$ th.setDaemon(true)[ FD ]
Line_92 $$ Thread th = new Thread(task, task.getClass().getName())-->Line_239 $$ th.setDaemon(true)[ FD ]
Line_237 $$ public void DiffingObserver(boolean startInBackground) -->Line_240 $$ th.start()[ CD ]
Line_238 $$ Thread th = new Thread(this)-->Line_240 $$ th.start()[ FD ]
Line_92 $$ Thread th = new Thread(task, task.getClass().getName())-->Line_240 $$ th.start()[ FD ]
Line_0 $$ Entry-->Line_244 $$ //27
public class func [ CD ]
Line_244 $$ //27
public class func -->Line_245 $$ public void run() [ CD ]
Line_245 $$ public void run() -->Line_246 $$ Thread taskThread = new Thread(task)[ CD ]
Line_245 $$ public void run() -->Line_247 $$ taskThread.setDaemon(true)[ CD ]
Line_246 $$ Thread taskThread = new Thread(task)-->Line_247 $$ taskThread.setDaemon(true)[ FD ]
Line_245 $$ public void run() -->Line_248 $$ taskThread.start()[ CD ]
Line_246 $$ Thread taskThread = new Thread(task)-->Line_248 $$ taskThread.start()[ FD ]
Line_0 $$ Entry-->Line_252 $$ //28
public class func [ CD ]
Line_252 $$ //28
public class func -->Line_253 $$ public void registerServices(JmDNS jmDns, List<ServiceInfo> serviceInfos) [ CD ]
Line_253 $$ public void registerServices(JmDNS jmDns, List<ServiceInfo> serviceInfos) -->Line_254 $$ if (logger.isInfoEnabled())
    logger.info("Registering services for [ CD ]
Line_254 $$ if (logger.isInfoEnabled())
    logger.info("Registering services for -->Line_254 $$ logger.isInfoEnabled()[ CD ]
Line_254 $$ if (logger.isInfoEnabled())
    logger.info("Registering services for -->Line_254 $$ logger.info("Registering services for [ CD ]
Line_253 $$ public void registerServices(JmDNS jmDns, List<ServiceInfo> serviceInfos) -->Line_255 $$ ServiceRegistrationRunnable r = new ServiceRegistrationRunnable(jmDns, serviceInfos)[ CD ]
Line_253 $$ public void registerServices(JmDNS jmDns, List<ServiceInfo> serviceInfos) -->Line_256 $$ Thread t = new Thread(r)[ CD ]
Line_253 $$ public void registerServices(JmDNS jmDns, List<ServiceInfo> serviceInfos) -->Line_257 $$ t.setDaemon(true)[ CD ]
Line_256 $$ Thread t = new Thread(r)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_257 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_257 $$ t.setDaemon(true)[ FD ]
Line_253 $$ public void registerServices(JmDNS jmDns, List<ServiceInfo> serviceInfos) -->Line_258 $$ t.start()[ CD ]
Line_256 $$ Thread t = new Thread(r)-->Line_258 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_258 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_258 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_258 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_258 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_258 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_258 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_258 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_258 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_258 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_258 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_258 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_258 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_262 $$ //29
public class func [ CD ]
Line_262 $$ //29
public class func -->Line_263 $$ public void init() [ CD ]
Line_263 $$ public void init() -->Line_264 $$ Thread connectorThread = new Thread(this.connector, "IM-Reconnector-Thread")[ CD ]
Line_263 $$ public void init() -->Line_265 $$ connectorThread.setDaemon(true)[ CD ]
Line_264 $$ Thread connectorThread = new Thread(this.connector, "IM-Reconnector-Thread")-->Line_265 $$ connectorThread.setDaemon(true)[ FD ]
Line_263 $$ public void init() -->Line_266 $$ connectorThread.start()[ CD ]
Line_264 $$ Thread connectorThread = new Thread(this.connector, "IM-Reconnector-Thread")-->Line_266 $$ connectorThread.start()[ FD ]
Line_0 $$ Entry-->Line_270 $$ //30
public class func [ CD ]
Line_270 $$ //30
public class func -->Line_271 $$ public void start() [ CD ]
Line_271 $$ public void start() -->Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")[ CD ]
Line_271 $$ public void start() -->Line_273 $$ t.setDaemon(true)[ CD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_273 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_273 $$ t.setDaemon(true)[ FD ]
Line_271 $$ public void start() -->Line_274 $$ t.start()[ CD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_274 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_274 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_274 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_274 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_274 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_274 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_274 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_274 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_274 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_274 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_274 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_274 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_274 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_274 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_278 $$ //31
public class func [ CD ]
Line_278 $$ //31
public class func -->Line_279 $$ public void init() [ CD ]
Line_279 $$ public void init() -->Line_281 $$ messageSenderThread.setDaemon(true)[ CD ]
Line_279 $$ public void init() -->Line_282 $$ messageSenderThread.start()[ CD ]
Line_0 $$ Entry-->Line_286 $$ //32
public class func [ CD ]
Line_286 $$ //32
public class func -->Line_287 $$ public void handle(InputStream in) [ CD ]
Line_287 $$ public void handle(InputStream in) -->Line_288 $$ IOHandler handler = new IOHandler(in)[ CD ]
Line_287 $$ public void handle(InputStream in) -->Line_289 $$ Thread thr = new Thread(handler)[ CD ]
Line_287 $$ public void handle(InputStream in) -->Line_290 $$ thr.setDaemon(true)[ CD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_290 $$ thr.setDaemon(true)[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_290 $$ thr.setDaemon(true)[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_290 $$ thr.setDaemon(true)[ FD ]
Line_287 $$ public void handle(InputStream in) -->Line_291 $$ thr.start()[ CD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_291 $$ thr.start()[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_291 $$ thr.start()[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_291 $$ thr.start()[ FD ]
Line_0 $$ Entry-->Line_295 $$ //33
public class func [ CD ]
Line_295 $$ //33
public class func -->Line_296 $$ public void start() [ CD ]
Line_296 $$ public void start() -->Line_297 $$ final Thread dispatchThread = new Thread(getCollectionJob(), getName())[ CD ]
Line_296 $$ public void start() -->Line_298 $$ dispatchThread.setDaemon(false)[ CD ]
Line_297 $$ final Thread dispatchThread = new Thread(getCollectionJob(), getName())-->Line_298 $$ dispatchThread.setDaemon(false)[ FD ]
Line_296 $$ public void start() -->Line_299 $$ dispatchThread.start()[ CD ]
Line_297 $$ final Thread dispatchThread = new Thread(getCollectionJob(), getName())-->Line_299 $$ dispatchThread.start()[ FD ]
Line_0 $$ Entry-->Line_303 $$ //34
public class func [ CD ]
Line_303 $$ //34
public class func -->Line_304 $$ public void setUp() [ CD ]
Line_304 $$ public void setUp() -->Line_305 $$ int port = MetaStoreUtils.findFreePort()[ CD ]
Line_305 $$ int port = MetaStoreUtils.findFreePort()-->Line_305 $$ MetaStoreUtils.findFreePort()[ CD ]
Line_304 $$ public void setUp() -->Line_306 $$ Thread t = new Thread(new RunMS(port))[ CD ]
Line_304 $$ public void setUp() -->Line_307 $$ t.setDaemon(true)[ CD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_307 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_307 $$ t.setDaemon(true)[ FD ]
Line_304 $$ public void setUp() -->Line_308 $$ t.start()[ CD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_308 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_308 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_308 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_308 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_308 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_308 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_308 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_308 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_308 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_308 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_308 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_308 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_308 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_308 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_308 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_312 $$ //35
public class func [ CD ]
Line_312 $$ //35
public class func -->Line_313 $$ public void TorrentFetcherDownload(TransferManager manager, TorrentDownloadInfo info) [ CD ]
Line_313 $$ public void TorrentFetcherDownload(TransferManager manager, TorrentDownloadInfo info) -->Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())[ CD ]
Line_313 $$ public void TorrentFetcherDownload(TransferManager manager, TorrentDownloadInfo info) -->Line_315 $$ t.setDaemon(true)[ CD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_315 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_315 $$ t.setDaemon(true)[ FD ]
Line_313 $$ public void TorrentFetcherDownload(TransferManager manager, TorrentDownloadInfo info) -->Line_316 $$ t.start()[ CD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_316 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_316 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_316 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_316 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_316 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_316 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_316 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_316 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_316 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_316 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_316 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_316 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_316 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_316 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_316 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_316 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_320 $$ //36
public class func [ CD ]
Line_320 $$ //36
public class func -->Line_321 $$ public void startPump(String mode, InputStream inputStream) [ CD ]
Line_321 $$ public void startPump(String mode, InputStream inputStream) -->Line_322 $$ ConsoleStreamer pump = new ConsoleStreamer(mode, inputStream)[ CD ]
Line_321 $$ public void startPump(String mode, InputStream inputStream) -->Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)[ CD ]
Line_321 $$ public void startPump(String mode, InputStream inputStream) -->Line_324 $$ thread.setDaemon(true)[ CD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_324 $$ thread.setDaemon(true)[ FD ]
Line_321 $$ public void startPump(String mode, InputStream inputStream) -->Line_325 $$ thread.start()[ CD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_325 $$ thread.start()[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_325 $$ thread.start()[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_325 $$ thread.start()[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_325 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_325 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_325 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_325 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_329 $$ //37
public class func [ CD ]
Line_329 $$ //37
public class func -->Line_330 $$ public void main(String[] args) [ CD ]
Line_330 $$ public void main(String[] args) -->Line_331 $$ Thread clientThread = new Thread(new BinaryLightClient())[ CD ]
Line_330 $$ public void main(String[] args) -->Line_332 $$ clientThread.setDaemon(false)[ CD ]
Line_331 $$ Thread clientThread = new Thread(new BinaryLightClient())-->Line_332 $$ clientThread.setDaemon(false)[ FD ]
Line_330 $$ public void main(String[] args) -->Line_333 $$ clientThread.start()[ CD ]
Line_331 $$ Thread clientThread = new Thread(new BinaryLightClient())-->Line_333 $$ clientThread.start()[ FD ]
Line_0 $$ Entry-->Line_337 $$ //38
public class func [ CD ]
Line_337 $$ //38
public class func -->Line_338 $$ public void MyInputStream(String name, InputStream in) [ CD ]
Line_338 $$ public void MyInputStream(String name, InputStream in) -->Line_339 $$ Thread thr = new Thread(this)[ CD ]
Line_338 $$ public void MyInputStream(String name, InputStream in) -->Line_340 $$ thr.setDaemon(true)[ CD ]
Line_339 $$ Thread thr = new Thread(this)-->Line_340 $$ thr.setDaemon(true)[ FD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_340 $$ thr.setDaemon(true)[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_340 $$ thr.setDaemon(true)[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_340 $$ thr.setDaemon(true)[ FD ]
Line_338 $$ public void MyInputStream(String name, InputStream in) -->Line_341 $$ thr.start()[ CD ]
Line_339 $$ Thread thr = new Thread(this)-->Line_341 $$ thr.start()[ FD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_341 $$ thr.start()[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_341 $$ thr.start()[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_341 $$ thr.start()[ FD ]
Line_0 $$ Entry-->Line_345 $$ //39
public class func [ CD ]
Line_345 $$ //39
public class func -->Line_346 $$ public void Tee(Socket s) [ CD ]
Line_346 $$ public void Tee(Socket s) -->Line_347 $$ Thread t = new Thread(this)[ CD ]
Line_346 $$ public void Tee(Socket s) -->Line_348 $$ t.setDaemon(true)[ CD ]
Line_347 $$ Thread t = new Thread(this)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_348 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_348 $$ t.setDaemon(true)[ FD ]
Line_346 $$ public void Tee(Socket s) -->Line_349 $$ t.start()[ CD ]
Line_347 $$ Thread t = new Thread(this)-->Line_349 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_349 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_349 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_349 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_349 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_349 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_349 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_349 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_349 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_349 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_349 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_349 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_349 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_349 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_349 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_349 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_349 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_353 $$ //40
public class func [ CD ]
Line_353 $$ //40
public class func -->Line_354 $$ public void start(boolean daemon) [ CD ]
Line_354 $$ public void start(boolean daemon) -->Line_355 $$ Thread serverThread = new Thread(this, "WOLips Server")[ CD ]
Line_354 $$ public void start(boolean daemon) -->Line_356 $$ serverThread.setDaemon(daemon)[ CD ]
Line_355 $$ Thread serverThread = new Thread(this, "WOLips Server")-->Line_356 $$ serverThread.setDaemon(daemon)[ FD ]
Line_354 $$ public void start(boolean daemon) -->Line_357 $$ serverThread.start()[ CD ]
Line_355 $$ Thread serverThread = new Thread(this, "WOLips Server")-->Line_357 $$ serverThread.start()[ FD ]
Line_0 $$ Entry-->Line_361 $$ //41
public class func [ CD ]
Line_361 $$ //41
public class func -->Line_362 $$ public void AsyncInMemoryIndexingService() [ CD ]
Line_362 $$ public void AsyncInMemoryIndexingService() -->Line_363 $$ Thread audit = new Thread(new AuditThread())[ CD ]
Line_362 $$ public void AsyncInMemoryIndexingService() -->Line_364 $$ audit.setDaemon(true)[ CD ]
Line_363 $$ Thread audit = new Thread(new AuditThread())-->Line_364 $$ audit.setDaemon(true)[ FD ]
Line_362 $$ public void AsyncInMemoryIndexingService() -->Line_365 $$ audit.start()[ CD ]
Line_363 $$ Thread audit = new Thread(new AuditThread())-->Line_365 $$ audit.start()[ FD ]
Line_0 $$ Entry-->Line_369 $$ //42
public class func [ CD ]
Line_369 $$ //42
public class func -->Line_370 $$ public void startFailureEmulator() [ CD ]
Line_370 $$ public void startFailureEmulator() -->Line_371 $$ FailureEmulator failureEmulator = new FailureEmulator()[ CD ]
Line_370 $$ public void startFailureEmulator() -->Line_372 $$ Thread failureEmulatorThread = new Thread(failureEmulator)[ CD ]
Line_370 $$ public void startFailureEmulator() -->Line_373 $$ failureEmulatorThread.setDaemon(true)[ CD ]
Line_372 $$ Thread failureEmulatorThread = new Thread(failureEmulator)-->Line_373 $$ failureEmulatorThread.setDaemon(true)[ FD ]
Line_370 $$ public void startFailureEmulator() -->Line_374 $$ failureEmulatorThread.setName("Failure Emulator")[ CD ]
Line_372 $$ Thread failureEmulatorThread = new Thread(failureEmulator)-->Line_374 $$ failureEmulatorThread.setName("Failure Emulator")[ FD ]
Line_370 $$ public void startFailureEmulator() -->Line_375 $$ failureEmulatorThread.start()[ CD ]
Line_372 $$ Thread failureEmulatorThread = new Thread(failureEmulator)-->Line_375 $$ failureEmulatorThread.start()[ FD ]
Line_0 $$ Entry-->Line_379 $$ //43
public class func [ CD ]
Line_379 $$ //43
public class func -->Line_380 $$ public void startLJTHealthMonitor() [ CD ]
Line_380 $$ public void startLJTHealthMonitor() -->Line_382 $$ Thread ljtHealthMonitorThread = new Thread(ljtHealthMonitor)[ CD ]
Line_380 $$ public void startLJTHealthMonitor() -->Line_383 $$ ljtHealthMonitorThread.setDaemon(true)[ CD ]
Line_382 $$ Thread ljtHealthMonitorThread = new Thread(ljtHealthMonitor)-->Line_383 $$ ljtHealthMonitorThread.setDaemon(true)[ FD ]
Line_380 $$ public void startLJTHealthMonitor() -->Line_384 $$ ljtHealthMonitorThread.setName("Local JobTracker Health Monitor")[ CD ]
Line_382 $$ Thread ljtHealthMonitorThread = new Thread(ljtHealthMonitor)-->Line_384 $$ ljtHealthMonitorThread.setName("Local JobTracker Health Monitor")[ FD ]
Line_380 $$ public void startLJTHealthMonitor() -->Line_385 $$ ljtHealthMonitorThread.start()[ CD ]
Line_382 $$ Thread ljtHealthMonitorThread = new Thread(ljtHealthMonitor)-->Line_385 $$ ljtHealthMonitorThread.start()[ FD ]
Line_0 $$ Entry-->Line_389 $$ //44
public class func [ CD ]
Line_389 $$ //44
public class func -->Line_390 $$ public void start() [ CD ]
Line_390 $$ public void start() -->Line_391 $$ Thread statusUpdateThread = new Thread(this)[ CD ]
Line_390 $$ public void start() -->Line_392 $$ statusUpdateThread.setDaemon(true)[ CD ]
Line_391 $$ Thread statusUpdateThread = new Thread(this)-->Line_392 $$ statusUpdateThread.setDaemon(true)[ FD ]
Line_390 $$ public void start() -->Line_393 $$ statusUpdateThread.setName("Instrumentation Status Updates")[ CD ]
Line_391 $$ Thread statusUpdateThread = new Thread(this)-->Line_393 $$ statusUpdateThread.setName("Instrumentation Status Updates")[ FD ]
Line_390 $$ public void start() -->Line_394 $$ statusUpdateThread.start()[ CD ]
Line_391 $$ Thread statusUpdateThread = new Thread(this)-->Line_394 $$ statusUpdateThread.start()[ FD ]
Line_0 $$ Entry-->Line_398 $$ //45
public class func [ CD ]
Line_398 $$ //45
public class func -->Line_399 $$ public void start() [ CD ]
Line_399 $$ public void start() -->Line_400 $$ Thread t = new Thread(this)[ CD ]
Line_399 $$ public void start() -->Line_401 $$ t.setDaemon(true)[ CD ]
Line_400 $$ Thread t = new Thread(this)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_401 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_401 $$ t.setDaemon(true)[ FD ]
Line_399 $$ public void start() -->Line_402 $$ t.setName("Network Data Receiver")[ CD ]
Line_400 $$ Thread t = new Thread(this)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_402 $$ t.setName("Network Data Receiver")[ FD ]
Line_399 $$ public void start() -->Line_403 $$ t.start()[ CD ]
Line_400 $$ Thread t = new Thread(this)-->Line_403 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_403 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_403 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_403 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_403 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_403 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_403 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_403 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_403 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_403 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_403 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_403 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_403 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_403 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_403 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_403 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_403 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_403 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_407 $$ //46
public class func [ CD ]
Line_407 $$ //46
public class func -->Line_408 $$ public void ControlListener(final int p) [ CD ]
Line_408 $$ public void ControlListener(final int p) -->Line_409 $$ final Thread listener = new Thread(this)[ CD ]
Line_408 $$ public void ControlListener(final int p) -->Line_410 $$ listener.setDaemon(true)[ CD ]
Line_409 $$ final Thread listener = new Thread(this)-->Line_410 $$ listener.setDaemon(true)[ FD ]
Line_408 $$ public void ControlListener(final int p) -->Line_411 $$ listener.setName("Launchapd startup listener")[ CD ]
Line_409 $$ final Thread listener = new Thread(this)-->Line_411 $$ listener.setName("Launchapd startup listener")[ FD ]
Line_408 $$ public void ControlListener(final int p) -->Line_412 $$ listener.start()[ CD ]
Line_409 $$ final Thread listener = new Thread(this)-->Line_412 $$ listener.start()[ FD ]
Line_0 $$ Entry-->Line_416 $$ //47
public class func [ CD ]
Line_416 $$ //47
public class func -->Line_417 $$ public void installNatCheckMatcher() [ CD ]
Line_417 $$ public void installNatCheckMatcher() -->Line_418 $$ Thread t = new Thread(new NatCheckRunnable())[ CD ]
Line_417 $$ public void installNatCheckMatcher() -->Line_419 $$ t.setDaemon(true)[ CD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_419 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_419 $$ t.setDaemon(true)[ FD ]
Line_417 $$ public void installNatCheckMatcher() -->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ CD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_420 $$ t.setName("OSF2F protocol matcher loader")[ FD ]
Line_417 $$ public void installNatCheckMatcher() -->Line_421 $$ t.start()[ CD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_421 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_421 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_421 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_421 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_421 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_421 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_421 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_421 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_421 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_421 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_421 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_421 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_421 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_421 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_421 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_421 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_421 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_421 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_421 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_425 $$ //48
public class func [ CD ]
Line_425 $$ //48
public class func -->Line_426 $$ public void init(TreeLogger initialLogger) [ CD ]
Line_426 $$ public void init(TreeLogger initialLogger) -->Line_427 $$ Thread thread = new Thread(this)[ CD ]
Line_426 $$ public void init(TreeLogger initialLogger) -->Line_428 $$ thread.setDaemon(true)[ CD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_428 $$ thread.setDaemon(true)[ FD ]
Line_426 $$ public void init(TreeLogger initialLogger) -->Line_429 $$ thread.setName("Code server (initializing)")[ CD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_429 $$ thread.setName("Code server (initializing)")[ FD ]
Line_426 $$ public void init(TreeLogger initialLogger) -->Line_430 $$ thread.start()[ CD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_430 $$ thread.start()[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_430 $$ thread.start()[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_430 $$ thread.start()[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_430 $$ thread.start()[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_430 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_430 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_430 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_430 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_434 $$ //49
public class func [ CD ]
Line_434 $$ //49
public class func -->Line_435 $$ public void start() [ CD ]
Line_435 $$ public void start() -->Line_436 $$ Thread t = new Thread(this)[ CD ]
Line_435 $$ public void start() -->Line_437 $$ t.setDaemon(true)[ CD ]
Line_436 $$ Thread t = new Thread(this)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_437 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_437 $$ t.setDaemon(true)[ FD ]
Line_435 $$ public void start() -->Line_438 $$ t.setName("attribute-event-bus")[ CD ]
Line_436 $$ Thread t = new Thread(this)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_438 $$ t.setName("attribute-event-bus")[ FD ]
Line_435 $$ public void start() -->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ CD ]
Line_436 $$ Thread t = new Thread(this)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_439 $$ if (this.thread.compareAndSet(null, t)) [ FD ]
Line_439 $$ if (this.thread.compareAndSet(null, t)) -->Line_439 $$ this.thread.compareAndSet(null, t)[ CD ]
Line_436 $$ Thread t = new Thread(this)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_439 $$ this.thread.compareAndSet(null, t)[ FD ]
Line_439 $$ if (this.thread.compareAndSet(null, t)) -->Line_440 $$ t.start()[ CD ]
Line_436 $$ Thread t = new Thread(this)-->Line_440 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_440 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_440 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_440 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_440 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_440 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_440 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_440 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_440 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_440 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_440 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_440 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_440 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_440 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_440 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_440 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_440 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_440 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_440 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_440 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_445 $$ //50
public class func [ CD ]
Line_445 $$ //50
public class func -->Line_446 $$ public void start(int clientNum) [ CD ]
Line_446 $$ public void start(int clientNum) -->Line_447 $$ Thread clientThread = new Thread(this)[ CD ]
Line_446 $$ public void start(int clientNum) -->Line_448 $$ clientThread.setDaemon(true)[ CD ]
Line_447 $$ Thread clientThread = new Thread(this)-->Line_448 $$ clientThread.setDaemon(true)[ FD ]
Line_331 $$ Thread clientThread = new Thread(new BinaryLightClient())-->Line_448 $$ clientThread.setDaemon(true)[ FD ]
Line_446 $$ public void start(int clientNum) -->Line_449 $$ clientThread.setName("AgentServer-Client" + clientNum)[ CD ]
Line_447 $$ Thread clientThread = new Thread(this)-->Line_449 $$ clientThread.setName("AgentServer-Client" + clientNum)[ FD ]
Line_331 $$ Thread clientThread = new Thread(new BinaryLightClient())-->Line_449 $$ clientThread.setName("AgentServer-Client" + clientNum)[ FD ]
Line_446 $$ public void start(int clientNum) -->Line_450 $$ clientThread.start()[ CD ]
Line_447 $$ Thread clientThread = new Thread(this)-->Line_450 $$ clientThread.start()[ FD ]
Line_331 $$ Thread clientThread = new Thread(new BinaryLightClient())-->Line_450 $$ clientThread.start()[ FD ]
Line_0 $$ Entry-->Line_454 $$ //51
public class func [ CD ]
Line_454 $$ //51
public class func -->Line_455 $$ public void start() [ CD ]
Line_455 $$ public void start() -->Line_456 $$ Thread callbackConnectionThread = new Thread(this)[ CD ]
Line_455 $$ public void start() -->Line_457 $$ callbackConnectionThread.setDaemon(true)[ CD ]
Line_456 $$ Thread callbackConnectionThread = new Thread(this)-->Line_457 $$ callbackConnectionThread.setDaemon(true)[ FD ]
Line_455 $$ public void start() -->Line_458 $$ callbackConnectionThread.setName("InTrace-Launch-CallbackHandler")[ CD ]
Line_456 $$ Thread callbackConnectionThread = new Thread(this)-->Line_458 $$ callbackConnectionThread.setName("InTrace-Launch-CallbackHandler")[ FD ]
Line_455 $$ public void start() -->Line_459 $$ callbackConnectionThread.start()[ CD ]
Line_456 $$ Thread callbackConnectionThread = new Thread(this)-->Line_459 $$ callbackConnectionThread.start()[ FD ]
Line_0 $$ Entry-->Line_463 $$ //52
public class func [ CD ]
Line_463 $$ //52
public class func -->Line_464 $$ public void exec(Runnable code) [ CD ]
Line_464 $$ public void exec(Runnable code) -->Line_465 $$ Thread t = new Thread(code)[ CD ]
Line_464 $$ public void exec(Runnable code) -->Line_466 $$ t.setDaemon(true)[ CD ]
Line_465 $$ Thread t = new Thread(code)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_466 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_466 $$ t.setDaemon(true)[ FD ]
Line_464 $$ public void exec(Runnable code) -->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ CD ]
Line_465 $$ Thread t = new Thread(code)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_467 $$ t.setName("NanoHttpd Request Processor (#" + requestCount + ")")[ FD ]
Line_464 $$ public void exec(Runnable code) -->Line_468 $$ t.start()[ CD ]
Line_465 $$ Thread t = new Thread(code)-->Line_468 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_468 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_468 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_468 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_468 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_468 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_468 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_468 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_468 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_468 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_468 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_468 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_468 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_468 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_468 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_468 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_468 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_468 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_468 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_468 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_468 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_472 $$ //53
public class func [ CD ]
Line_472 $$ //53
public class func -->Line_473 $$ public void DelayedSearchQueue(long delay) [ CD ]
Line_473 $$ public void DelayedSearchQueue(long delay) -->Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())[ CD ]
Line_473 $$ public void DelayedSearchQueue(long delay) -->Line_475 $$ t.setDaemon(true)[ CD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_475 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_475 $$ t.setDaemon(true)[ FD ]
Line_473 $$ public void DelayedSearchQueue(long delay) -->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ CD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_476 $$ t.setName(SEARCH_QUEUE_THREAD_NAME)[ FD ]
Line_473 $$ public void DelayedSearchQueue(long delay) -->Line_477 $$ t.start()[ CD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_477 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_477 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_477 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_477 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_477 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_477 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_477 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_477 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_477 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_477 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_477 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_477 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_477 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_477 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_477 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_477 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_477 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_477 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_477 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_477 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_477 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_477 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_481 $$ //54
public class func [ CD ]
Line_481 $$ //54
public class func -->Line_482 $$ public void DownloadBufferManager(InputStream source, DiskManagerFileInfo fileInfo) [ CD ]
Line_482 $$ public void DownloadBufferManager(InputStream source, DiskManagerFileInfo fileInfo) -->Line_483 $$ Thread t = new Thread(this)[ CD ]
Line_482 $$ public void DownloadBufferManager(InputStream source, DiskManagerFileInfo fileInfo) -->Line_484 $$ t.setName("DownloadBuffer")[ CD ]
Line_483 $$ Thread t = new Thread(this)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_484 $$ t.setName("DownloadBuffer")[ FD ]
Line_482 $$ public void DownloadBufferManager(InputStream source, DiskManagerFileInfo fileInfo) -->Line_485 $$ t.setDaemon(true)[ CD ]
Line_483 $$ Thread t = new Thread(this)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_485 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_485 $$ t.setDaemon(true)[ FD ]
Line_482 $$ public void DownloadBufferManager(InputStream source, DiskManagerFileInfo fileInfo) -->Line_486 $$ t.start()[ CD ]
Line_483 $$ Thread t = new Thread(this)-->Line_486 $$ t.start()[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_486 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_486 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_486 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_486 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_486 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_486 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_486 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_486 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_486 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_486 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_486 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_486 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_486 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_486 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_486 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_486 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_486 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_486 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_486 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_486 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_486 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_486 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_490 $$ //55
public class func [ CD ]
Line_490 $$ //55
public class func -->Line_491 $$ public void start() [ CD ]
Line_491 $$ public void start() -->Line_492 $$ Thread traceServer = new Thread(this)[ CD ]
Line_491 $$ public void start() -->Line_493 $$ traceServer.setName("TraceServer")[ CD ]
Line_492 $$ Thread traceServer = new Thread(this)-->Line_493 $$ traceServer.setName("TraceServer")[ FD ]
Line_491 $$ public void start() -->Line_494 $$ traceServer.setDaemon(true)[ CD ]
Line_492 $$ Thread traceServer = new Thread(this)-->Line_494 $$ traceServer.setDaemon(true)[ FD ]
Line_491 $$ public void start() -->Line_495 $$ traceServer.start()[ CD ]
Line_492 $$ Thread traceServer = new Thread(this)-->Line_495 $$ traceServer.start()[ FD ]
Line_0 $$ Entry-->Line_499 $$ //56
public class func [ CD ]
Line_499 $$ //56
public class func -->Line_500 $$ public void run(Runnable runnable, String threadName, boolean daemon) [ CD ]
Line_500 $$ public void run(Runnable runnable, String threadName, boolean daemon) -->Line_501 $$ Thread thread = new Thread(runnable, threadName)[ CD ]
Line_500 $$ public void run(Runnable runnable, String threadName, boolean daemon) -->Line_502 $$ thread.setName(threadName)[ CD ]
Line_501 $$ Thread thread = new Thread(runnable, threadName)-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_502 $$ thread.setName(threadName)[ FD ]
Line_500 $$ public void run(Runnable runnable, String threadName, boolean daemon) -->Line_503 $$ thread.setDaemon(daemon)[ CD ]
Line_501 $$ Thread thread = new Thread(runnable, threadName)-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_503 $$ thread.setDaemon(daemon)[ FD ]
Line_500 $$ public void run(Runnable runnable, String threadName, boolean daemon) -->Line_504 $$ thread.start()[ CD ]
Line_501 $$ Thread thread = new Thread(runnable, threadName)-->Line_504 $$ thread.start()[ FD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_504 $$ thread.start()[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_504 $$ thread.start()[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_504 $$ thread.start()[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_504 $$ thread.start()[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_504 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_504 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_504 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_504 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_508 $$ //57
public class func [ CD ]
Line_508 $$ //57
public class func -->Line_509 $$ public void StreamDumper(InputStream source, int bytesToStore, boolean print) [ CD ]
Line_509 $$ public void StreamDumper(InputStream source, int bytesToStore, boolean print) -->Line_510 $$ Thread t = new Thread(this)[ CD ]
Line_509 $$ public void StreamDumper(InputStream source, int bytesToStore, boolean print) -->Line_511 $$ t.setName("BufferDumper")[ CD ]
Line_510 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_511 $$ t.setName("BufferDumper")[ FD ]
Line_509 $$ public void StreamDumper(InputStream source, int bytesToStore, boolean print) -->Line_512 $$ t.setDaemon(true)[ CD ]
Line_510 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_512 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_512 $$ t.setDaemon(true)[ FD ]
Line_509 $$ public void StreamDumper(InputStream source, int bytesToStore, boolean print) -->Line_513 $$ t.start()[ CD ]
Line_510 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_513 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_513 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_513 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_513 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_513 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_513 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_513 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_513 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_513 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_513 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_513 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_513 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_513 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_513 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_513 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_513 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_513 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_513 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_517 $$ //58
public class func [ CD ]
Line_517 $$ //58
public class func -->Line_518 $$ public void init(M queue) [ CD ]
Line_518 $$ public void init(M queue) -->Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))[ CD ]
Line_518 $$ public void init(M queue) -->Line_520 $$ daemon.setName("RetryHandler")[ CD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_520 $$ daemon.setName("RetryHandler")[ FD ]
Line_518 $$ public void init(M queue) -->Line_521 $$ daemon.setDaemon(true)[ CD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_521 $$ daemon.setDaemon(true)[ FD ]
Line_518 $$ public void init(M queue) -->Line_522 $$ daemon.start()[ CD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_522 $$ daemon.start()[ FD ]
Line_0 $$ Entry-->Line_526 $$ //59
public class func [ CD ]
Line_526 $$ //59
public class func -->Line_527 $$ public void startDeamonThread(boolean blockUntilStarted) [ CD ]
Line_527 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_528 $$ Thread t = new Thread(this)[ CD ]
Line_527 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_529 $$ t.setName("Socks server")[ CD ]
Line_528 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_529 $$ t.setName("Socks server")[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_529 $$ t.setName("Socks server")[ FD ]
Line_527 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_530 $$ t.setDaemon(true)[ CD ]
Line_528 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_530 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_530 $$ t.setDaemon(true)[ FD ]
Line_527 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_531 $$ t.start()[ CD ]
Line_528 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_531 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_531 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_531 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_531 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_531 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_531 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_531 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_531 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_531 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_531 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_531 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_531 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_531 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_531 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_531 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_531 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_531 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_531 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_535 $$ //60
public class func [ CD ]
Line_535 $$ //60
public class func -->Line_536 $$ public void startDeamonThread(boolean blockUntilStarted) [ CD ]
Line_536 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_537 $$ Thread echoServerThread = new Thread(this)[ CD ]
Line_536 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_538 $$ echoServerThread.setName("Echo server")[ CD ]
Line_537 $$ Thread echoServerThread = new Thread(this)-->Line_538 $$ echoServerThread.setName("Echo server")[ FD ]
Line_536 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_539 $$ echoServerThread.setDaemon(true)[ CD ]
Line_537 $$ Thread echoServerThread = new Thread(this)-->Line_539 $$ echoServerThread.setDaemon(true)[ FD ]
Line_536 $$ public void startDeamonThread(boolean blockUntilStarted) -->Line_540 $$ echoServerThread.start()[ CD ]
Line_537 $$ Thread echoServerThread = new Thread(this)-->Line_540 $$ echoServerThread.start()[ FD ]
Line_0 $$ Entry-->Line_544 $$ //61
public class func [ CD ]
Line_544 $$ //61
public class func -->Line_545 $$ public void startDaemonThread(boolean blockUntilStarted) [ CD ]
Line_545 $$ public void startDaemonThread(boolean blockUntilStarted) -->Line_546 $$ Thread serverThread = new Thread(this)[ CD ]
Line_545 $$ public void startDaemonThread(boolean blockUntilStarted) -->Line_547 $$ serverThread.setName("Listen server")[ CD ]
Line_546 $$ Thread serverThread = new Thread(this)-->Line_547 $$ serverThread.setName("Listen server")[ FD ]
Line_355 $$ Thread serverThread = new Thread(this, "WOLips Server")-->Line_547 $$ serverThread.setName("Listen server")[ FD ]
Line_545 $$ public void startDaemonThread(boolean blockUntilStarted) -->Line_548 $$ serverThread.setDaemon(true)[ CD ]
Line_546 $$ Thread serverThread = new Thread(this)-->Line_548 $$ serverThread.setDaemon(true)[ FD ]
Line_355 $$ Thread serverThread = new Thread(this, "WOLips Server")-->Line_548 $$ serverThread.setDaemon(true)[ FD ]
Line_545 $$ public void startDaemonThread(boolean blockUntilStarted) -->Line_549 $$ serverThread.start()[ CD ]
Line_546 $$ Thread serverThread = new Thread(this)-->Line_549 $$ serverThread.start()[ FD ]
Line_355 $$ Thread serverThread = new Thread(this, "WOLips Server")-->Line_549 $$ serverThread.start()[ FD ]
Line_0 $$ Entry-->Line_553 $$ //62
public class func [ CD ]
Line_553 $$ //62
public class func -->Line_554 $$ public void init(M delayQueue) [ CD ]
Line_554 $$ public void init(M delayQueue) -->Line_555 $$ Thread daemon = new Thread(new LateRerunConsumer(this))[ CD ]
Line_554 $$ public void init(M delayQueue) -->Line_556 $$ daemon.setName("LaterunHandler")[ CD ]
Line_555 $$ Thread daemon = new Thread(new LateRerunConsumer(this))-->Line_556 $$ daemon.setName("LaterunHandler")[ FD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_556 $$ daemon.setName("LaterunHandler")[ FD ]
Line_554 $$ public void init(M delayQueue) -->Line_557 $$ daemon.setDaemon(true)[ CD ]
Line_555 $$ Thread daemon = new Thread(new LateRerunConsumer(this))-->Line_557 $$ daemon.setDaemon(true)[ FD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_557 $$ daemon.setDaemon(true)[ FD ]
Line_554 $$ public void init(M delayQueue) -->Line_558 $$ daemon.start()[ CD ]
Line_555 $$ Thread daemon = new Thread(new LateRerunConsumer(this))-->Line_558 $$ daemon.start()[ FD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_558 $$ daemon.start()[ FD ]
Line_0 $$ Entry-->Line_562 $$ //63
public class func [ CD ]
Line_562 $$ //63
public class func -->Line_563 $$ public void run() [ CD ]
Line_563 $$ public void run() -->Line_564 $$ ThreadGroup tg = Thread.currentThread().getThreadGroup()[ CD ]
Line_564 $$ ThreadGroup tg = Thread.currentThread().getThreadGroup()-->Line_564 $$ Thread.currentThread().getThreadGroup()[ CD ]
Line_563 $$ public void run() -->Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;[ CD ]
Line_563 $$ public void run() -->Line_563 $$ public void run() [ CD ]
Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;-->Line_565 $$ ThreadGroup tg2 = tg[ CD ]
Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;-->Line_565 $$ tg2 = tg.getParent()[ CD ]
Line_565 $$ ThreadGroup tg2 = tg-->Line_565 $$ tg2 = tg.getParent()[ FD ]
Line_565 $$ tg2 = tg.getParent()-->Line_565 $$ tg2 = tg.getParent()[ FD ]
Line_565 $$ tg2 = tg.getParent()-->Line_565 $$ tg.getParent()[ CD ]
Line_564 $$ ThreadGroup tg = Thread.currentThread().getThreadGroup()-->Line_565 $$ tg.getParent()[ FD ]
Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;-->Line_566 $$ tg = tg2[ CD ]
Line_566 $$ tg = tg2-->Line_566 $$ tg = tg2[ FD ]
Line_564 $$ ThreadGroup tg = Thread.currentThread().getThreadGroup()-->Line_566 $$ tg = tg2[ FD ]
Line_565 $$ ThreadGroup tg2 = tg-->Line_566 $$ tg = tg2[ FD ]
Line_565 $$ tg2 = tg.getParent()-->Line_566 $$ tg = tg2[ FD ]
Line_563 $$ public void run() -->Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")[ CD ]
Line_563 $$ public void run() -->Line_568 $$ t.setDaemon(true)[ CD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_568 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_568 $$ t.setDaemon(true)[ FD ]
Line_563 $$ public void run() -->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ CD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_569 $$ t.setPriority(Thread.MAX_PRIORITY)[ FD ]
Line_563 $$ public void run() -->Line_570 $$ t.start()[ CD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_570 $$ t.start()[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_570 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_570 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_570 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_570 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_570 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_570 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_570 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_570 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_570 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_570 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_570 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_570 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_570 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_570 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_570 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_570 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_570 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_570 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_574 $$ //64
public class func [ CD ]
Line_574 $$ //64
public class func -->Line_575 $$ public void doExecuteNewThread(Runnable runnable, String name) [ CD ]
Line_575 $$ public void doExecuteNewThread(Runnable runnable, String name) -->Line_576 $$ String threadName = name + "-" + id.incrementAndGet()[ CD ]
Line_575 $$ public void doExecuteNewThread(Runnable runnable, String name) -->Line_577 $$ Thread thread = new Thread(runnable, threadName)[ CD ]
Line_575 $$ public void doExecuteNewThread(Runnable runnable, String name) -->Line_578 $$ thread.setDaemon(daemon)[ CD ]
Line_577 $$ Thread thread = new Thread(runnable, threadName)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_501 $$ Thread thread = new Thread(runnable, threadName)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_555 $$ Thread daemon = new Thread(new LateRerunConsumer(this))-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_519 $$ Thread daemon = new Thread(new RetryConsumer(this))-->Line_578 $$ thread.setDaemon(daemon)[ FD ]
Line_575 $$ public void doExecuteNewThread(Runnable runnable, String name) -->Line_579 $$ LOG.trace("Created and running thread[[ CD ]
Line_576 $$ String threadName = name + "-" + id.incrementAndGet()-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_577 $$ Thread thread = new Thread(runnable, threadName)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_501 $$ Thread thread = new Thread(runnable, threadName)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_579 $$ LOG.trace("Created and running thread[[ FD ]
Line_575 $$ public void doExecuteNewThread(Runnable runnable, String name) -->Line_580 $$ thread.start()[ CD ]
Line_577 $$ Thread thread = new Thread(runnable, threadName)-->Line_580 $$ thread.start()[ FD ]
Line_501 $$ Thread thread = new Thread(runnable, threadName)-->Line_580 $$ thread.start()[ FD ]
Line_427 $$ Thread thread = new Thread(this)-->Line_580 $$ thread.start()[ FD ]
Line_323 $$ Thread thread = new Thread(pump, "ConsoleStreamer/" + mode)-->Line_580 $$ thread.start()[ FD ]
Line_180 $$ final Thread thread = new Thread(target)-->Line_580 $$ thread.start()[ FD ]
Line_143 $$ final Thread thread = new Thread(this, "Apache Sling Timed Job Topology Listener Thread")-->Line_580 $$ thread.start()[ FD ]
Line_108 $$ Thread thread = new Thread(vm.threadGroupForJDI(), this, "JDI Internal Event Handler")-->Line_580 $$ thread.start()[ FD ]
Line_84 $$ final Thread thread = new Thread(this)-->Line_580 $$ thread.start()[ FD ]
Line_54 $$ final Thread thread = new Thread(this, "Apache Sling Job Topology Listener Thread")-->Line_580 $$ thread.start()[ FD ]
Line_26 $$ Thread thread = new Thread(command, name)-->Line_580 $$ thread.start()[ FD ]
Line_0 $$ Entry-->Line_584 $$ //65
public class func [ CD ]
Line_584 $$ //65
public class func -->Line_585 $$ public void run() [ CD ]
Line_585 $$ public void run() -->Line_586 $$ final Thread thr = new Thread(new Cleaner(), "XNIO cleaner thread")[ CD ]
Line_585 $$ public void run() -->Line_587 $$ thr.setDaemon(true)[ CD ]
Line_586 $$ final Thread thr = new Thread(new Cleaner(), "XNIO cleaner thread")-->Line_587 $$ thr.setDaemon(true)[ FD ]
Line_339 $$ Thread thr = new Thread(this)-->Line_587 $$ thr.setDaemon(true)[ FD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_587 $$ thr.setDaemon(true)[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_587 $$ thr.setDaemon(true)[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_587 $$ thr.setDaemon(true)[ FD ]
Line_585 $$ public void run() -->Line_588 $$ thr.setContextClassLoader(null)[ CD ]
Line_586 $$ final Thread thr = new Thread(new Cleaner(), "XNIO cleaner thread")-->Line_588 $$ thr.setContextClassLoader(null)[ FD ]
Line_339 $$ Thread thr = new Thread(this)-->Line_588 $$ thr.setContextClassLoader(null)[ FD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_588 $$ thr.setContextClassLoader(null)[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_588 $$ thr.setContextClassLoader(null)[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_588 $$ thr.setContextClassLoader(null)[ FD ]
Line_585 $$ public void run() -->Line_589 $$ thr.start()[ CD ]
Line_586 $$ final Thread thr = new Thread(new Cleaner(), "XNIO cleaner thread")-->Line_589 $$ thr.start()[ FD ]
Line_339 $$ Thread thr = new Thread(this)-->Line_589 $$ thr.start()[ FD ]
Line_289 $$ Thread thr = new Thread(handler)-->Line_589 $$ thr.start()[ FD ]
Line_197 $$ Thread thr = new Thread(thisRunnable)-->Line_589 $$ thr.start()[ FD ]
Line_100 $$ Thread thr = new Thread(this)-->Line_589 $$ thr.start()[ FD ]
Line_0 $$ Entry-->Line_593 $$ //66
public class func [ CD ]
Line_593 $$ //66
public class func -->Line_594 $$ public void run() [ CD ]
Line_594 $$ public void run() -->Line_595 $$ Thread timerThread = new Thread(threadGroup, TimerQueue.this, "TimerQueue")[ CD ]
Line_594 $$ public void run() -->Line_597 $$ timerThread.setDaemon(true)[ CD ]
Line_595 $$ Thread timerThread = new Thread(threadGroup, TimerQueue.this, "TimerQueue")-->Line_597 $$ timerThread.setDaemon(true)[ FD ]
Line_151 $$ Thread timerThread = new Thread(this)-->Line_597 $$ timerThread.setDaemon(true)[ FD ]
Line_594 $$ public void run() -->Line_598 $$ timerThread.setPriority(Thread.NORM_PRIORITY)[ CD ]
Line_595 $$ Thread timerThread = new Thread(threadGroup, TimerQueue.this, "TimerQueue")-->Line_598 $$ timerThread.setPriority(Thread.NORM_PRIORITY)[ FD ]
Line_151 $$ Thread timerThread = new Thread(this)-->Line_598 $$ timerThread.setPriority(Thread.NORM_PRIORITY)[ FD ]
Line_594 $$ public void run() -->Line_599 $$ timerThread.start()[ CD ]
Line_595 $$ Thread timerThread = new Thread(threadGroup, TimerQueue.this, "TimerQueue")-->Line_599 $$ timerThread.start()[ FD ]
Line_151 $$ Thread timerThread = new Thread(this)-->Line_599 $$ timerThread.start()[ FD ]
Line_0 $$ Entry-->Line_603 $$ //67
public class func [ CD ]
Line_603 $$ //67
public class func -->Line_604 $$ public void launch() [ CD ]
Line_604 $$ public void launch() -->Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")[ CD ]
Line_604 $$ public void launch() -->Line_607 $$ t.setDaemon(true)[ CD ]
Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_607 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_607 $$ t.setDaemon(true)[ FD ]
Line_604 $$ public void launch() -->Line_608 $$ t.setPriority(3)[ CD ]
Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")-->Line_608 $$ t.setPriority(3)[ FD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_608 $$ t.setPriority(3)[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_608 $$ t.setPriority(3)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_608 $$ t.setPriority(3)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_608 $$ t.setPriority(3)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_608 $$ t.setPriority(3)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_608 $$ t.setPriority(3)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_608 $$ t.setPriority(3)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_608 $$ t.setPriority(3)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_608 $$ t.setPriority(3)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_608 $$ t.setPriority(3)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_608 $$ t.setPriority(3)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_608 $$ t.setPriority(3)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_608 $$ t.setPriority(3)[ FD ]
Line_604 $$ public void launch() -->Line_609 $$ t.start()[ CD ]
Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")-->Line_609 $$ t.start()[ FD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_609 $$ t.start()[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_609 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_609 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_609 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_609 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_609 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_609 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_609 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_609 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_609 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_609 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_609 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_609 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_609 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_609 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_609 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_609 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_609 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_609 $$ t.start()[ FD ]
Line_0 $$ Entry-->Line_613 $$ //68
public class func [ CD ]
Line_613 $$ //68
public class func -->Line_614 $$ public void createPoller() [ CD ]
Line_614 $$ public void createPoller() -->Line_615 $$ Thread t = new Thread(poller, "Poller " + getName())[ CD ]
Line_614 $$ public void createPoller() -->Line_616 $$ t.setDaemon(true)[ CD ]
Line_615 $$ Thread t = new Thread(poller, "Poller " + getName())-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_616 $$ t.setDaemon(true)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_616 $$ t.setDaemon(true)[ FD ]
Line_614 $$ public void createPoller() -->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ CD ]
Line_615 $$ Thread t = new Thread(poller, "Poller " + getName())-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_617 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_614 $$ public void createPoller() -->Line_618 $$ t.start()[ CD ]
Line_615 $$ Thread t = new Thread(poller, "Poller " + getName())-->Line_618 $$ t.start()[ FD ]
Line_606 $$ Thread t = new Thread(myRunnable, "caret blinker daemon")-->Line_618 $$ t.start()[ FD ]
Line_567 $$ Thread t = new Thread(tg, disposerInstance, "Java2D Disposer")-->Line_618 $$ t.start()[ FD ]
Line_528 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_510 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_483 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_474 $$ Thread t = new Thread(new DelayedSearchQueueThread())-->Line_618 $$ t.start()[ FD ]
Line_465 $$ Thread t = new Thread(code)-->Line_618 $$ t.start()[ FD ]
Line_436 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_418 $$ Thread t = new Thread(new NatCheckRunnable())-->Line_618 $$ t.start()[ FD ]
Line_400 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_347 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_314 $$ Thread t = new Thread(new FetcherRunnable(), "Torrent-Fetcher - " + info.getTorrentUrl())-->Line_618 $$ t.start()[ FD ]
Line_306 $$ Thread t = new Thread(new RunMS(port))-->Line_618 $$ t.start()[ FD ]
Line_272 $$ Thread t = new Thread(new CpuStatRunnable(), "ThreadCpuStatsCollector")-->Line_618 $$ t.start()[ FD ]
Line_256 $$ Thread t = new Thread(r)-->Line_618 $$ t.start()[ FD ]
Line_230 $$ Thread t = new Thread(networkWatchdogRunnable, "NetworkWatchdogRunnable")-->Line_618 $$ t.start()[ FD ]
Line_221 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_213 $$ Thread t = new Thread(this)-->Line_618 $$ t.start()[ FD ]
Line_189 $$ Thread t = new Thread(ret, String.format("nbtool-%s", ret.name()))-->Line_618 $$ t.start()[ FD ]
Line_172 $$ Thread t = new Thread(r)-->Line_618 $$ t.start()[ FD ]
Line_159 $$ Thread t = new Thread("JavaFX Init Thread") -->Line_618 $$ t.start()[ FD ]
Line_125 $$ Thread t = new Thread(runnable)-->Line_618 $$ t.start()[ FD ]
Line_117 $$ Thread t = new Thread(l, "Listener-" + getKey(l.getListenerSpec()))-->Line_618 $$ t.start()[ FD ]
Line_76 $$ Thread t = new Thread(worker)-->Line_618 $$ t.start()[ FD ]
Line_46 $$ Thread t = new Thread(new ReaderToWriterCopier(output, outputMulticast))-->Line_618 $$ t.start()[ FD ]
Line_35 $$ Thread t = new Thread(new ReceiverRunnable(getSourceIdentifier()), "" + getSourceIdentifier() + "-Receiver")-->Line_618 $$ t.start()[ FD ]
Line_4 $$ Thread t = new Thread(this, name)-->Line_618 $$ t.start()[ FD ]
Line_565 $$ ThreadGroup tg2 = tg-->Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;[ FD ]
Line_565 $$ tg2 = tg.getParent()-->Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;[ FD ]
Line_565 $$ ThreadGroup tg2 = tg-->Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;[ FD ]
Line_565 $$ tg2 = tg.getParent()-->Line_565 $$ for (ThreadGroup tg2 = tg; tg2 != null; tg2 = tg.getParent()) tg = tg2;[ FD ]
Line_566 $$ tg = tg2-->Line_565 $$ tg.getParent()[ FD ]
Line_565 $$ ThreadGroup tg2 = tg-->Line_566 $$ tg = tg2[ FD ]
Line_565 $$ tg2 = tg.getParent()-->Line_566 $$ tg = tg2[ FD ]
