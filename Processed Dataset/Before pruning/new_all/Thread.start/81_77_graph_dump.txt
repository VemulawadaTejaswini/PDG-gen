Line_0 $$ Entry-->Line_2 $$ //80
public class func [ CD ]
Line_2 $$ //80
public class func -->Line_3 $$ public void awaitTermination() [ CD ]
Line_3 $$ public void awaitTermination() -->Line_4 $$ final TerminationAwait terminationAwait = new TerminationAwait(serviceContainer)[ CD ]
Line_3 $$ public void awaitTermination() -->Line_5 $$ final Thread thread = new Thread(terminationAwait)[ CD ]
Line_3 $$ public void awaitTermination() -->Line_6 $$ thread.start()[ CD ]
Line_5 $$ final Thread thread = new Thread(terminationAwait)-->Line_6 $$ thread.start()[ FD ]
Line_3 $$ public void awaitTermination() -->Line_7 $$ assertTrue(thread.isAlive())[ CD ]
Line_5 $$ final Thread thread = new Thread(terminationAwait)-->Line_7 $$ thread.isAlive()[ FD ]
Line_3 $$ public void awaitTermination() -->Line_8 $$ shutdownContainer()[ CD ]
