Line_0 $$ Entry-->Line_2 $$ //10
public class func [ CD ]
Line_2 $$ //10
public class func -->Line_3 $$ public void testIsPortAvailableValidatesAddress() [ CD ]
Line_3 $$ public void testIsPortAvailableValidatesAddress() -->Line_4 $$ ss.bind(new InetSocketAddress(InetAddress.getLocalHost(), 0))[ CD ]
Line_3 $$ public void testIsPortAvailableValidatesAddress() -->Line_5 $$ int boundPort = ss.getLocalPort()[ CD ]
Line_5 $$ int boundPort = ss.getLocalPort()-->Line_5 $$ ss.getLocalPort()[ CD ]
Line_3 $$ public void testIsPortAvailableValidatesAddress() -->Line_6 $$ assertTrue(ss.isBound())[ CD ]
Line_3 $$ public void testIsPortAvailableValidatesAddress() -->Line_7 $$ assertNotEquals(boundPort, 0)[ CD ]
Line_5 $$ int boundPort = ss.getLocalPort()-->Line_7 $$ assertNotEquals(boundPort, 0)[ FD ]
Line_3 $$ public void testIsPortAvailableValidatesAddress() -->Line_8 $$ assertFalse(Networking.isPortAvailable(boundPort))[ CD ]
Line_5 $$ int boundPort = ss.getLocalPort()-->Line_8 $$ Networking.isPortAvailable(boundPort)[ FD ]
Line_3 $$ public void testIsPortAvailableValidatesAddress() -->Line_9 $$ ss.close()[ CD ]
