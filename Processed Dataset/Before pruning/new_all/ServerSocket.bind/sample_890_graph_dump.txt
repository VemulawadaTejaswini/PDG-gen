Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void isTcpPortAvailable(InetSocketAddress localAddress) [ CD ]
Line_3 $$ public void isTcpPortAvailable(InetSocketAddress localAddress) -->Line_5 $$ ss.setReuseAddress(false)[ CD ]
Line_3 $$ public void isTcpPortAvailable(InetSocketAddress localAddress) -->Line_6 $$ ss.bind(localAddress)[ CD ]
Line_3 $$ public void isTcpPortAvailable(InetSocketAddress localAddress) -->Line_7 $$ ss.close()[ CD ]
Line_0 $$ Entry-->Line_11 $$ //1
public class func [ CD ]
Line_11 $$ //1
public class func -->Line_12 $$ public void testSetReuseAddress() [ CD ]
Line_12 $$ public void testSetReuseAddress() -->Line_13 $$ ServerSocket serverSock2 = new ServerSocket()[ CD ]
Line_12 $$ public void testSetReuseAddress() -->Line_14 $$ serverSock2.setReuseAddress(true)[ CD ]
Line_13 $$ ServerSocket serverSock2 = new ServerSocket()-->Line_14 $$ serverSock2.setReuseAddress(true)[ FD ]
Line_12 $$ public void testSetReuseAddress() -->Line_15 $$ serverSock2.bind(addr)[ CD ]
Line_13 $$ ServerSocket serverSock2 = new ServerSocket()-->Line_15 $$ serverSock2.bind(addr)[ FD ]
Line_12 $$ public void testSetReuseAddress() -->Line_16 $$ serverSock2.close()[ CD ]
Line_13 $$ ServerSocket serverSock2 = new ServerSocket()-->Line_16 $$ serverSock2.close()[ FD ]
Line_0 $$ Entry-->Line_20 $$ //2
public class func [ CD ]
Line_20 $$ //2
public class func -->Line_21 $$ public void test_setReuseAddressZ() [ CD ]
Line_21 $$ public void test_setReuseAddressZ() -->Line_23 $$ serverSocket.setReuseAddress(false)[ CD ]
Line_21 $$ public void test_setReuseAddressZ() -->Line_24 $$ serverSocket.bind(theAddress)[ CD ]
Line_21 $$ public void test_setReuseAddressZ() -->Line_25 $$ fail("No exception when setReuseAddress is false and we bind:" + theAddress.toString())[ CD ]
Line_0 $$ Entry-->Line_29 $$ //3
public class func [ CD ]
Line_29 $$ //3
public class func -->Line_30 $$ public void start() [ CD ]
Line_30 $$ public void start() -->Line_31 $$ if (sslcontext != null) [ CD ]
Line_31 $$ if (sslcontext != null) -->Line_32 $$ SSLServerSocketFactory sf = sslcontext.getServerSocketFactory()[ CD ]
Line_32 $$ SSLServerSocketFactory sf = sslcontext.getServerSocketFactory()-->Line_32 $$ sslcontext.getServerSocketFactory()[ CD ]
Line_31 $$ if (sslcontext != null) -->Line_33 $$ sf.createServerSocket()[ CD ]
Line_32 $$ SSLServerSocketFactory sf = sslcontext.getServerSocketFactory()-->Line_33 $$ sf.createServerSocket()[ FD ]
Line_30 $$ public void start() -->Line_37 $$ ssock.setReuseAddress(true)[ CD ]
Line_30 $$ public void start() -->Line_38 $$ ssock.bind(TEST_SERVER_ADDR)[ CD ]
Line_0 $$ Entry-->Line_42 $$ //4
public class func [ CD ]
Line_42 $$ //4
public class func -->Line_43 $$ public void test_setReuseAddressZ() [ CD ]
Line_43 $$ public void test_setReuseAddressZ() -->Line_45 $$ theSocket.connect(theAddress)[ CD ]
Line_43 $$ public void test_setReuseAddressZ() -->Line_46 $$ serverSocket.accept()[ CD ]
Line_43 $$ public void test_setReuseAddressZ() -->Line_47 $$ serverSocket.close()[ CD ]
Line_43 $$ public void test_setReuseAddressZ() -->Line_49 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_43 $$ public void test_setReuseAddressZ() -->Line_50 $$ serverSocket.bind(theAddress)[ CD ]
Line_43 $$ public void test_setReuseAddressZ() -->Line_51 $$ fail("Unexpected exception when setReuseAddress is true and we bind:" + theAddress.toString() + ":" + ex.toString())[ CD ]
Line_0 $$ Entry-->Line_56 $$ //5
public class func [ CD ]
Line_56 $$ //5
public class func -->Line_57 $$ public void createBoundServerSocket(final InetSocketAddress bindAddress) [ CD ]
Line_57 $$ public void createBoundServerSocket(final InetSocketAddress bindAddress) -->Line_58 $$ final ServerSocket serverSocket = new ServerSocket()[ CD ]
Line_57 $$ public void createBoundServerSocket(final InetSocketAddress bindAddress) -->Line_59 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_59 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_57 $$ public void createBoundServerSocket(final InetSocketAddress bindAddress) -->Line_60 $$ serverSocket.bind(bindAddress)[ CD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_60 $$ serverSocket.bind(bindAddress)[ FD ]
Line_0 $$ Entry-->Line_64 $$ //6
public class func [ CD ]
Line_64 $$ //6
public class func -->Line_65 $$ public void testSetReuseAddress() [ CD ]
Line_65 $$ public void testSetReuseAddress() -->Line_66 $$ final ServerSocket serverSock = new ServerSocket()[ CD ]
Line_65 $$ public void testSetReuseAddress() -->Line_67 $$ serverSock.setReuseAddress(true)[ CD ]
Line_66 $$ final ServerSocket serverSock = new ServerSocket()-->Line_67 $$ serverSock.setReuseAddress(true)[ FD ]
Line_65 $$ public void testSetReuseAddress() -->Line_68 $$ serverSock.bind(addr)[ CD ]
Line_66 $$ final ServerSocket serverSock = new ServerSocket()-->Line_68 $$ serverSock.bind(addr)[ FD ]
Line_0 $$ Entry-->Line_72 $$ //7
public class func [ CD ]
Line_72 $$ //7
public class func -->Line_73 $$ public void maybeInitJmx() [ CD ]
Line_73 $$ public void maybeInitJmx() -->Line_74 $$ ServerSocket ss = new ServerSocket()[ CD ]
Line_73 $$ public void maybeInitJmx() -->Line_75 $$ ss.setReuseAddress(true)[ CD ]
Line_74 $$ ServerSocket ss = new ServerSocket()-->Line_75 $$ ss.setReuseAddress(true)[ FD ]
Line_73 $$ public void maybeInitJmx() -->Line_76 $$ ss.bind(null)[ CD ]
Line_74 $$ ServerSocket ss = new ServerSocket()-->Line_76 $$ ss.bind(null)[ FD ]
Line_73 $$ public void maybeInitJmx() -->Line_77 $$ int jmxport = ss.getLocalPort()[ CD ]
Line_77 $$ int jmxport = ss.getLocalPort()-->Line_77 $$ ss.getLocalPort()[ CD ]
Line_74 $$ ServerSocket ss = new ServerSocket()-->Line_77 $$ ss.getLocalPort()[ FD ]
Line_73 $$ public void maybeInitJmx() -->Line_78 $$ ss.close()[ CD ]
Line_74 $$ ServerSocket ss = new ServerSocket()-->Line_78 $$ ss.close()[ FD ]
Line_73 $$ public void maybeInitJmx() -->Line_79 $$ if (jmxport == -1) [ CD ]
Line_77 $$ int jmxport = ss.getLocalPort()-->Line_79 $$ if (jmxport == -1) [ FD ]
Line_79 $$ if (jmxport == -1) -->Line_80 $$ log.warn("[init.jmx] failed to get a port")[ CD ]
Line_77 $$ int jmxport = ss.getLocalPort()-->Line_85 $$ log.info("[init.jmx] port=[ FD ]
Line_0 $$ Entry-->Line_93 $$ //8
public class func [ CD ]
Line_93 $$ //8
public class func -->Line_94 $$ public void findNextPort() [ CD ]
Line_94 $$ public void findNextPort() -->Line_95 $$ ServerSocket serverSocket = new ServerSocket()[ CD ]
Line_94 $$ public void findNextPort() -->Line_96 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_96 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_96 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_94 $$ public void findNextPort() -->Line_97 $$ serverSocket.bind(inetSocketAddress)[ CD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_97 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_97 $$ serverSocket.bind(inetSocketAddress)[ FD ]
Line_94 $$ public void findNextPort() -->Line_98 $$ serverSocket.getLocalPort()[ CD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_98 $$ serverSocket.getLocalPort()[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_98 $$ serverSocket.getLocalPort()[ FD ]
Line_94 $$ public void findNextPort() -->Line_99 $$ serverSocket.close()[ CD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_99 $$ serverSocket.close()[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_99 $$ serverSocket.close()[ FD ]
Line_0 $$ Entry-->Line_103 $$ //9
public class func [ CD ]
Line_103 $$ //9
public class func -->Line_104 $$ public void test_setReuseAddressZ() [ CD ]
Line_104 $$ public void test_setReuseAddressZ() -->Line_105 $$ ServerSocket serverSocket = new ServerSocket()[ CD ]
Line_104 $$ public void test_setReuseAddressZ() -->Line_106 $$ serverSocket.setReuseAddress(false)[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_106 $$ serverSocket.setReuseAddress(false)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_106 $$ serverSocket.setReuseAddress(false)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_106 $$ serverSocket.setReuseAddress(false)[ FD ]
Line_104 $$ public void test_setReuseAddressZ() -->Line_107 $$ serverSocket.bind(anyAddress)[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_107 $$ serverSocket.bind(anyAddress)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_107 $$ serverSocket.bind(anyAddress)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_107 $$ serverSocket.bind(anyAddress)[ FD ]
Line_104 $$ public void test_setReuseAddressZ() -->Line_108 $$ SocketAddress theAddress = serverSocket.getLocalSocketAddress()[ CD ]
Line_108 $$ SocketAddress theAddress = serverSocket.getLocalSocketAddress()-->Line_108 $$ serverSocket.getLocalSocketAddress()[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_108 $$ serverSocket.getLocalSocketAddress()[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_108 $$ serverSocket.getLocalSocketAddress()[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_108 $$ serverSocket.getLocalSocketAddress()[ FD ]
Line_0 $$ Entry-->Line_112 $$ //10
public class func [ CD ]
Line_112 $$ //10
public class func -->Line_113 $$ public void test_setReuseAddressZ() [ CD ]
Line_113 $$ public void test_setReuseAddressZ() -->Line_115 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_115 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_115 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_115 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_113 $$ public void test_setReuseAddressZ() -->Line_116 $$ serverSocket.bind(anyAddress)[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_116 $$ serverSocket.bind(anyAddress)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_116 $$ serverSocket.bind(anyAddress)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_116 $$ serverSocket.bind(anyAddress)[ FD ]
Line_113 $$ public void test_setReuseAddressZ() -->Line_117 $$ serverSocket.getLocalSocketAddress()[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_117 $$ serverSocket.getLocalSocketAddress()[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_117 $$ serverSocket.getLocalSocketAddress()[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_117 $$ serverSocket.getLocalSocketAddress()[ FD ]
Line_0 $$ Entry-->Line_121 $$ //11
public class func [ CD ]
Line_121 $$ //11
public class func -->Line_122 $$ public void findPort() [ CD ]
Line_122 $$ public void findPort() -->Line_124 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_124 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_124 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_124 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_122 $$ public void findPort() -->Line_125 $$ serverSocket.bind(sa)[ CD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_125 $$ serverSocket.bind(sa)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_125 $$ serverSocket.bind(sa)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_125 $$ serverSocket.bind(sa)[ FD ]
Line_0 $$ Entry-->Line_129 $$ //12
public class func [ CD ]
Line_129 $$ //12
public class func -->Line_130 $$ public void createSocketListener(final InetSocketAddress listenerAddress) [ CD ]
Line_130 $$ public void createSocketListener(final InetSocketAddress listenerAddress) -->Line_131 $$ final ServerSocket serverSocket = new ServerSocket()[ CD ]
Line_130 $$ public void createSocketListener(final InetSocketAddress listenerAddress) -->Line_132 $$ serverSocket.setReuseAddress(true)[ CD ]
Line_131 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_132 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_132 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_132 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_132 $$ serverSocket.setReuseAddress(true)[ FD ]
Line_130 $$ public void createSocketListener(final InetSocketAddress listenerAddress) -->Line_133 $$ serverSocket.bind(listenerAddress)[ CD ]
Line_131 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_133 $$ serverSocket.bind(listenerAddress)[ FD ]
Line_105 $$ ServerSocket serverSocket = new ServerSocket()-->Line_133 $$ serverSocket.bind(listenerAddress)[ FD ]
Line_95 $$ ServerSocket serverSocket = new ServerSocket()-->Line_133 $$ serverSocket.bind(listenerAddress)[ FD ]
Line_58 $$ final ServerSocket serverSocket = new ServerSocket()-->Line_133 $$ serverSocket.bind(listenerAddress)[ FD ]
Line_130 $$ public void createSocketListener(final InetSocketAddress listenerAddress) -->Line_134 $$ return new SocketListener(serverSocket, this.handleExecutor, this.handleMessageTaskFactory);[ CD ]
