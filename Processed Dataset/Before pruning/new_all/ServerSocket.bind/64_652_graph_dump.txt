Line_0 $$ Entry-->Line_2 $$ //63
public class func [ CD ]
Line_2 $$ //63
public class func -->Line_3 $$ public void shouldSendMessage() [ CD ]
Line_3 $$ public void shouldSendMessage() -->Line_4 $$ server.bind(new InetSocketAddress((InetAddress) null, pid2.getReplicaPort()))[ CD ]
Line_3 $$ public void shouldSendMessage() -->Line_5 $$ Socket socket = server.accept()[ CD ]
Line_5 $$ Socket socket = server.accept()-->Line_5 $$ server.accept()[ CD ]
Line_3 $$ public void shouldSendMessage() -->Line_6 $$ DataInputStream inputStream = new DataInputStream(socket.getInputStream())[ CD ]
Line_5 $$ Socket socket = server.accept()-->Line_6 $$ socket.getInputStream()[ FD ]
Line_3 $$ public void shouldSendMessage() -->Line_7 $$ assertEquals(1, inputStream.readInt())[ CD ]
Line_6 $$ DataInputStream inputStream = new DataInputStream(socket.getInputStream())-->Line_7 $$ inputStream.readInt()[ FD ]
