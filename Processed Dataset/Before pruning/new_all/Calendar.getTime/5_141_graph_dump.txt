Line_0 $$ Entry-->Line_2 $$ //4
public class func [ CD ]
Line_2 $$ //4
public class func -->Line_3 $$ public void timeToRemove(final ImagingWorker worker) [ CD ]
Line_3 $$ public void timeToRemove(final ImagingWorker worker) -->Line_4 $$ Calendar cal = Calendar.getInstance()[ CD ]
Line_4 $$ Calendar cal = Calendar.getInstance()-->Line_4 $$ Calendar.getInstance()[ CD ]
Line_3 $$ public void timeToRemove(final ImagingWorker worker) -->Line_5 $$ cal.setTime(lastUpdated)[ CD ]
Line_4 $$ Calendar cal = Calendar.getInstance()-->Line_5 $$ cal.setTime(lastUpdated)[ FD ]
Line_3 $$ public void timeToRemove(final ImagingWorker worker) -->Line_6 $$ cal.add(Calendar.MINUTE, 60)[ CD ]
Line_4 $$ Calendar cal = Calendar.getInstance()-->Line_6 $$ cal.add(Calendar.MINUTE, 60)[ FD ]
Line_3 $$ public void timeToRemove(final ImagingWorker worker) -->Line_7 $$ final Date expirationTime = cal.getTime()[ CD ]
Line_7 $$ final Date expirationTime = cal.getTime()-->Line_7 $$ cal.getTime()[ CD ]
Line_4 $$ Calendar cal = Calendar.getInstance()-->Line_7 $$ cal.getTime()[ FD ]
Line_3 $$ public void timeToRemove(final ImagingWorker worker) -->Line_8 $$ return Math.abs((expirationTime.getTime() - new Date().getTime()) / MINUTE);[ CD ]
Line_8 $$ return Math.abs((expirationTime.getTime() - new Date().getTime()) / MINUTE);-->Line_8 $$ Math.abs((expirationTime.getTime() - new Date().getTime()) / MINUTE)[ CD ]
Line_7 $$ final Date expirationTime = cal.getTime()-->Line_8 $$ expirationTime.getTime()[ FD ]
