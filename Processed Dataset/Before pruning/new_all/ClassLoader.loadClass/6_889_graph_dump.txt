Line_0 $$ Entry-->Line_2 $$ //5
public class func [ CD ]
Line_2 $$ //5
public class func -->Line_3 $$ public void getValidator(String validator) [ CD ]
Line_3 $$ public void getValidator(String validator) -->Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_4 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ public void getValidator(String validator) -->Line_5 $$ if (cl == null) [ CD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_5 $$ if (cl == null) [ FD ]
Line_5 $$ if (cl == null) -->Line_6 $$ cl = ConfigureCxfSecurity.class.getClassLoader()[ CD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_6 $$ cl = ConfigureCxfSecurity.class.getClassLoader()[ FD ]
Line_6 $$ cl = ConfigureCxfSecurity.class.getClassLoader()-->Line_6 $$ cl = ConfigureCxfSecurity.class.getClassLoader()[ FD ]
Line_6 $$ cl = ConfigureCxfSecurity.class.getClassLoader()-->Line_6 $$ ConfigureCxfSecurity.class.getClassLoader()[ CD ]
Line_3 $$ public void getValidator(String validator) -->Line_8 $$ return cl.loadClass(validator).newInstance();[ CD ]
Line_8 $$ return cl.loadClass(validator).newInstance();-->Line_8 $$ cl.loadClass(validator).newInstance()[ CD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_8 $$ cl.loadClass(validator)[ FD ]
Line_6 $$ cl = ConfigureCxfSecurity.class.getClassLoader()-->Line_8 $$ cl.loadClass(validator)[ FD ]
