Line_0 $$ Entry-->Line_2 $$ //35
public class func [ CD ]
Line_2 $$ //35
public class func -->Line_3 $$ public void createProviderInstance(final String providerClass, final ClassLoader classLoader) [ CD ]
Line_3 $$ public void createProviderInstance(final String providerClass, final ClassLoader classLoader) -->Line_4 $$ if (providerClass != null && providerClass.length() > 0 && !providerClass.equals(ProviderWrapper.class.getName())) [ CD ]
Line_4 $$ !providerClass.equals(ProviderWrapper.class.getName())-->Line_4 $$ providerClass.equals(ProviderWrapper.class.getName())[ CD ]
Line_6 $$ final Class<? extends Provider> clazz = classLoader.loadClass(providerClass).asSubclass(Provider.class)-->Line_6 $$ classLoader.loadClass(providerClass).asSubclass(Provider.class)[ CD ]
Line_7 $$ return clazz.newInstance();-->Line_7 $$ clazz.newInstance()[ CD ]
Line_6 $$ final Class<? extends Provider> clazz = classLoader.loadClass(providerClass).asSubclass(Provider.class)-->Line_7 $$ clazz.newInstance()[ FD ]
