Line_0 $$ Entry-->Line_2 $$ //25
public class func [ CD ]
Line_2 $$ //25
public class func -->Line_3 $$ public void arrayAtRootProducesNoJavaTypes() [ CD ]
Line_3 $$ public void arrayAtRootProducesNoJavaTypes() -->Line_4 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/arrayAsRoot.json", "com.example", config("sourceType", "json"))[ CD ]
Line_4 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/arrayAsRoot.json", "com.example", config("sourceType", "json"))-->Line_4 $$ generateAndCompile("/json/arrayAsRoot.json", "com.example", config("sourceType", "json"))[ CD ]
Line_3 $$ public void arrayAtRootProducesNoJavaTypes() -->Line_6 $$ resultsClassLoader.loadClass("com.example.ArrayAsRoot")[ CD ]
Line_4 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/arrayAsRoot.json", "com.example", config("sourceType", "json"))-->Line_6 $$ resultsClassLoader.loadClass("com.example.ArrayAsRoot")[ FD ]
