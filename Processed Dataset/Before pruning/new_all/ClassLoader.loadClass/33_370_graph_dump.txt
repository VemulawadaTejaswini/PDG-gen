Line_0 $$ Entry-->Line_2 $$ //32
public class func [ CD ]
Line_2 $$ //32
public class func -->Line_3 $$ public void simpleTypeAtRootProducesNoJavaTypes() [ CD ]
Line_3 $$ public void simpleTypeAtRootProducesNoJavaTypes() -->Line_4 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))[ CD ]
Line_4 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))-->Line_4 $$ generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))[ CD ]
Line_3 $$ public void simpleTypeAtRootProducesNoJavaTypes() -->Line_6 $$ resultsClassLoader.loadClass("com.example.SimpleTypeAsRoot")[ CD ]
Line_4 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))-->Line_6 $$ resultsClassLoader.loadClass("com.example.SimpleTypeAsRoot")[ FD ]
