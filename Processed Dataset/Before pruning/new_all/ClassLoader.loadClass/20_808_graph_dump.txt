Line_0 $$ Entry-->Line_2 $$ //19
public class func [ CD ]
Line_2 $$ //19
public class func -->Line_3 $$ public void createVerticle(String verticleName, ClassLoader classLoader) [ CD ]
Line_3 $$ public void createVerticle(String verticleName, ClassLoader classLoader) -->Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)[ CD ]
Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)-->Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)[ FD ]
Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)-->Line_4 $$ VerticleFactory.removePrefix(verticleName)[ CD ]
Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)-->Line_4 $$ VerticleFactory.removePrefix(verticleName)[ FD ]
Line_3 $$ public void createVerticle(String verticleName, ClassLoader classLoader) -->Line_5 $$ if (verticleName.endsWith(".java")) [ CD ]
Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)-->Line_5 $$ if (verticleName.endsWith(".java")) [ FD ]
Line_5 $$ if (verticleName.endsWith(".java")) -->Line_5 $$ verticleName.endsWith(".java")[ CD ]
Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)-->Line_5 $$ verticleName.endsWith(".java")[ FD ]
Line_5 $$ if (verticleName.endsWith(".java")) -->Line_6 $$ CompilingClassLoader compilingLoader = new CompilingClassLoader(classLoader, verticleName)[ CD ]
Line_5 $$ if (verticleName.endsWith(".java")) -->Line_7 $$ String className = compilingLoader.resolveMainClassName()[ CD ]
Line_7 $$ String className = compilingLoader.resolveMainClassName()-->Line_7 $$ compilingLoader.resolveMainClassName()[ CD ]
Line_6 $$ CompilingClassLoader compilingLoader = new CompilingClassLoader(classLoader, verticleName)-->Line_7 $$ compilingLoader.resolveMainClassName()[ FD ]
Line_5 $$ if (verticleName.endsWith(".java")) -->Line_8 $$ compilingLoader.loadClass(className)[ CD ]
Line_6 $$ CompilingClassLoader compilingLoader = new CompilingClassLoader(classLoader, verticleName)-->Line_8 $$ compilingLoader.loadClass(className)[ FD ]
Line_7 $$ String className = compilingLoader.resolveMainClassName()-->Line_8 $$ compilingLoader.loadClass(className)[ FD ]
Line_5 $$ if (verticleName.endsWith(".java")) -->Line_10 $$ classLoader.loadClass(verticleName)[ CD ]
Line_4 $$ verticleName = VerticleFactory.removePrefix(verticleName)-->Line_10 $$ classLoader.loadClass(verticleName)[ FD ]
Line_3 $$ public void createVerticle(String verticleName, ClassLoader classLoader) -->Line_12 $$ return (Verticle) clazz.newInstance();[ CD ]
