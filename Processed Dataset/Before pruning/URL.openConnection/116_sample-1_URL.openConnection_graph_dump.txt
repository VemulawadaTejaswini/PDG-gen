Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getBitmapFromUrl(String url) [ CD ]
Line_2 $$ public void getBitmapFromUrl(String url) -->Line_3 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_3 $$ URLConnection conn = new URL(url).openConnection()-->Line_3 $$ new URL(url).openConnection()[ CD ]
Line_2 $$ public void getBitmapFromUrl(String url) -->Line_4 $$ conn.setConnectTimeout(CONNECT_TIMEOUT)[ CD ]
Line_3 $$ URLConnection conn = new URL(url).openConnection()-->Line_4 $$ conn.setConnectTimeout(CONNECT_TIMEOUT)[ FD ]
Line_2 $$ public void getBitmapFromUrl(String url) -->Line_5 $$ conn.setReadTimeout(READ_TIMEOUT)[ CD ]
Line_3 $$ URLConnection conn = new URL(url).openConnection()-->Line_5 $$ conn.setReadTimeout(READ_TIMEOUT)[ FD ]
Line_2 $$ public void getBitmapFromUrl(String url) -->Line_6 $$ BitmapFactory.decodeStream((InputStream) conn.getContent())[ CD ]
Line_3 $$ URLConnection conn = new URL(url).openConnection()-->Line_6 $$ conn.getContent()[ FD ]
Line_2 $$ public void getBitmapFromUrl(String url) -->Line_7 $$ if (autoRotate && bitmap.getWidth() > bitmap.getHeight()) [ CD ]
Line_7 $$ if (autoRotate && bitmap.getWidth() > bitmap.getHeight()) -->Line_8 $$ Matrix matrix = new Matrix()[ CD ]
Line_7 $$ if (autoRotate && bitmap.getWidth() > bitmap.getHeight()) -->Line_9 $$ matrix.postRotate(90)[ CD ]
Line_8 $$ Matrix matrix = new Matrix()-->Line_9 $$ matrix.postRotate(90)[ FD ]
Line_7 $$ if (autoRotate && bitmap.getWidth() > bitmap.getHeight()) -->Line_10 $$ Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true)[ CD ]
Line_8 $$ Matrix matrix = new Matrix()-->Line_10 $$ Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true)[ FD ]
