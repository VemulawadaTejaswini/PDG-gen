Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testGetResponseCodeNoResponseBody() [ CD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_3 $$ server.enqueue(new MockResponse().addHeader("abc: def"))[ CD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_5 $$ server.play()[ CD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_6 $$ URL url = server.getUrl("/")[ CD ]
Line_6 $$ URL url = server.getUrl("/")-->Line_6 $$ server.getUrl("/")[ CD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_6 $$ URL url = server.getUrl("/")-->Line_7 $$ url.openConnection()[ FD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_8 $$ conn.setDoInput(false)[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.setDoInput(false)[ FD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_9 $$ assertEquals("def", conn.getHeaderField("abc"))[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getHeaderField("abc")[ FD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_10 $$ assertEquals(200, conn.getResponseCode())[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getResponseCode()[ FD ]
Line_2 $$ public void testGetResponseCodeNoResponseBody() -->Line_11 $$ conn.getInputStream()[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getInputStream()[ FD ]
