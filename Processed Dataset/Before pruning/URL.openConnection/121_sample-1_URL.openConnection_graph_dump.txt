Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testGetBook123() [ CD ]
Line_2 $$ public void testGetBook123() -->Line_3 $$ URL url = new URL(endpointAddress)[ CD ]
Line_2 $$ public void testGetBook123() -->Line_4 $$ URLConnection connect = url.openConnection()[ CD ]
Line_4 $$ URLConnection connect = url.openConnection()-->Line_4 $$ url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(endpointAddress)-->Line_4 $$ url.openConnection()[ FD ]
Line_2 $$ public void testGetBook123() -->Line_5 $$ connect.addRequestProperty("Accept", "application/xml")[ CD ]
Line_4 $$ URLConnection connect = url.openConnection()-->Line_5 $$ connect.addRequestProperty("Accept", "application/xml")[ FD ]
Line_2 $$ public void testGetBook123() -->Line_6 $$ InputStream in = connect.getInputStream()[ CD ]
Line_6 $$ InputStream in = connect.getInputStream()-->Line_6 $$ connect.getInputStream()[ CD ]
Line_4 $$ URLConnection connect = url.openConnection()-->Line_6 $$ connect.getInputStream()[ FD ]
Line_2 $$ public void testGetBook123() -->Line_7 $$ assertNotNull(in)[ CD ]
Line_6 $$ InputStream in = connect.getInputStream()-->Line_7 $$ assertNotNull(in)[ FD ]
Line_2 $$ public void testGetBook123() -->Line_8 $$ InputStream expected = getClass().getResourceAsStream("resources/expected_get_book123.txt")[ CD ]
Line_8 $$ InputStream expected = getClass().getResourceAsStream("resources/expected_get_book123.txt")-->Line_8 $$ getClass().getResourceAsStream("resources/expected_get_book123.txt")[ CD ]
