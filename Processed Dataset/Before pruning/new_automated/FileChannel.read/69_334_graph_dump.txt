Line_0 $$ Entry-->Line_2 $$ //69
public class func [ CD ]
Line_2 $$ //69
public class func -->Line_3 $$ public void timeReadCD(String filename, Stat stat) [ CD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_5 $$ file.seek(pos)[ CD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_6 $$ int nelems = file.readInt()[ CD ]
Line_6 $$ int nelems = file.readInt()-->Line_6 $$ file.readInt()[ CD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_7 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)[ CD ]
Line_7 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_7 $$ ByteBuffer.allocateDirect(nelems * 4)[ CD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_8 $$ IntBuffer ibuff = bbuff.asIntBuffer()[ CD ]
Line_8 $$ IntBuffer ibuff = bbuff.asIntBuffer()-->Line_8 $$ bbuff.asIntBuffer()[ CD ]
Line_7 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_8 $$ bbuff.asIntBuffer()[ FD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_9 $$ channel.read(bbuff)[ CD ]
Line_7 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_9 $$ channel.read(bbuff)[ FD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_10 $$ int[] data = new int[nelems][ CD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_11 $$ ibuff.get(data)[ CD ]
Line_8 $$ IntBuffer ibuff = bbuff.asIntBuffer()-->Line_11 $$ ibuff.get(data)[ FD ]
Line_10 $$ int[] data = new int[nelems]-->Line_11 $$ ibuff.get(data)[ FD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_12 $$ for (int j = 0; j < nelems; j++) [ CD ]
Line_4 $$ while (pos < fileSizeBytes) -->Line_4 $$ while (pos < fileSizeBytes) [ CD ]
Line_6 $$ int nelems = file.readInt()-->Line_12 $$ for (int j = 0; j < nelems; j++) [ FD ]
Line_12 $$ for (int j = 0; j < nelems; j++) -->Line_12 $$ int j = 0[ CD ]
Line_12 $$ for (int j = 0; j < nelems; j++) -->Line_12 $$ j++[ CD ]
Line_12 $$ int j = 0-->Line_12 $$ j++[ FD ]
Line_12 $$ for (int j = 0; j < nelems; j++) -->Line_13 $$ if (data[j] != j) [ CD ]
Line_12 $$ int j = 0-->Line_13 $$ if (data[j] != j) [ FD ]
Line_13 $$ if (data[j] != j) -->Line_14 $$ System.out.println(" bad at pos " + pos + " file= " + filename)[ CD ]
Line_3 $$ public void timeReadCD(String filename, Stat stat) -->Line_21 $$ channel.close()[ CD ]
Line_7 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_8 $$ bbuff.asIntBuffer()[ FD ]
Line_7 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_9 $$ channel.read(bbuff)[ FD ]
Line_8 $$ IntBuffer ibuff = bbuff.asIntBuffer()-->Line_11 $$ ibuff.get(data)[ FD ]
Line_10 $$ int[] data = new int[nelems]-->Line_11 $$ ibuff.get(data)[ FD ]
Line_12 $$ int j = 0-->Line_12 $$ for (int j = 0; j < nelems; j++) [ FD ]
Line_12 $$ int j = 0-->Line_12 $$ for (int j = 0; j < nelems; j++) [ FD ]
Line_12 $$ int j = 0-->Line_12 $$ j++[ FD ]
Line_12 $$ int j = 0-->Line_13 $$ if (data[j] != j) [ FD ]
