Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void transferTo(FileChannel fc, long pos, long len) [ CD ]
Line_3 $$ public void transferTo(FileChannel fc, long pos, long len) -->Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(bufferSize)[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(bufferSize)-->Line_4 $$ ByteBuffer.allocate(bufferSize)[ CD ]
Line_3 $$ public void transferTo(FileChannel fc, long pos, long len) -->Line_5 $$ while ((i = fc.read(buf, pos)) != -1) [ CD ]
Line_3 $$ public void transferTo(FileChannel fc, long pos, long len) -->Line_3 $$ public void transferTo(FileChannel fc, long pos, long len) [ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(bufferSize)-->Line_5 $$ fc.read(buf, pos)[ FD ]
Line_5 $$ while ((i = fc.read(buf, pos)) != -1) -->Line_6 $$ if (i > 0) [ CD ]
Line_6 $$ if (i > 0) -->Line_8 $$ pos += i[ CD ]
Line_8 $$ pos += i-->Line_8 $$ pos += i[ FD ]
Line_6 $$ if (i > 0) -->Line_9 $$ buf.flip()[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(bufferSize)-->Line_9 $$ buf.flip()[ FD ]
Line_6 $$ if (i > 0) -->Line_10 $$ write(buf)[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(bufferSize)-->Line_10 $$ write(buf)[ FD ]
Line_6 $$ if (i > 0) -->Line_11 $$ buf = ByteBuffer.allocate(bufferSize)[ CD ]
Line_11 $$ buf = ByteBuffer.allocate(bufferSize)-->Line_11 $$ buf = ByteBuffer.allocate(bufferSize)[ FD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(bufferSize)-->Line_11 $$ buf = ByteBuffer.allocate(bufferSize)[ FD ]
Line_11 $$ buf = ByteBuffer.allocate(bufferSize)-->Line_11 $$ ByteBuffer.allocate(bufferSize)[ CD ]
Line_5 $$ while ((i = fc.read(buf, pos)) != -1) -->Line_13 $$ if (ret >= len)
    break;[ CD ]
Line_3 $$ public void transferTo(FileChannel fc, long pos, long len) -->Line_16 $$ fc.close()[ CD ]
Line_11 $$ buf = ByteBuffer.allocate(bufferSize)-->Line_5 $$ fc.read(buf, pos)[ FD ]
Line_8 $$ pos += i-->Line_5 $$ fc.read(buf, pos)[ FD ]
Line_11 $$ buf = ByteBuffer.allocate(bufferSize)-->Line_9 $$ buf.flip()[ FD ]
Line_11 $$ buf = ByteBuffer.allocate(bufferSize)-->Line_10 $$ write(buf)[ FD ]
