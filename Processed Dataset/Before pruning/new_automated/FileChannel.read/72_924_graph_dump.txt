Line_0 $$ Entry-->Line_2 $$ //72
public class func [ CD ]
Line_2 $$ //72
public class func -->Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) [ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_4 $$ headerBuffer.clear()[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_5 $$ fc.read(headerBuffer)[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_6 $$ headerBuffer.rewind()[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_7 $$ boxHeader.update(headerBuffer)[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_8 $$ if (moovNode != null & mdatNode != null) [ CD ]
Line_8 $$ if (moovNode != null & mdatNode != null) -->Line_9 $$ NullPadding np = new NullPadding(fc.position() - Mp4BoxHeader.HEADER_LENGTH, fc.size())[ CD ]
Line_8 $$ if (moovNode != null & mdatNode != null) -->Line_10 $$ DefaultMutableTreeNode trailingPaddingNode = new DefaultMutableTreeNode(np)[ CD ]
Line_8 $$ if (moovNode != null & mdatNode != null) -->Line_11 $$ rootNode.add(trailingPaddingNode)[ CD ]
Line_10 $$ DefaultMutableTreeNode trailingPaddingNode = new DefaultMutableTreeNode(np)-->Line_11 $$ rootNode.add(trailingPaddingNode)[ FD ]
