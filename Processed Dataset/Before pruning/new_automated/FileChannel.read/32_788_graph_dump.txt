Line_0 $$ Entry-->Line_2 $$ //32
public class func [ CD ]
Line_2 $$ //32
public class func -->Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) [ CD ]
Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) -->Line_4 $$ buffer.clear()[ CD ]
Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) -->Line_5 $$ channel.read(buffer)[ CD ]
Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) -->Line_6 $$ buffer.position()[ CD ]
Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) -->Line_7 $$ while (position < memorySize) [ CD ]
Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) -->Line_3 $$ public void copyFromChannel(FileChannel channel, TableStats stats) [ CD ]
Line_7 $$ while (position < memorySize) -->Line_8 $$ long recordPtr = address + position[ CD ]
Line_7 $$ while (position < memorySize) -->Line_10 $$ if (remain() < SizeOf.SIZE_OF_INT) [ CD ]
Line_10 $$ if (remain() < SizeOf.SIZE_OF_INT) -->Line_11 $$ channel.position(channel.position() - remain())[ CD ]
Line_10 $$ if (remain() < SizeOf.SIZE_OF_INT) -->Line_13 $$ return true;[ CD ]
Line_7 $$ while (position < memorySize) -->Line_16 $$ int recordSize = UNSAFE.getInt(recordPtr)[ CD ]
Line_16 $$ int recordSize = UNSAFE.getInt(recordPtr)-->Line_16 $$ UNSAFE.getInt(recordPtr)[ CD ]
Line_8 $$ long recordPtr = address + position-->Line_16 $$ UNSAFE.getInt(recordPtr)[ FD ]
Line_7 $$ while (position < memorySize) -->Line_18 $$ if (remain() < recordSize) [ CD ]
Line_16 $$ int recordSize = UNSAFE.getInt(recordPtr)-->Line_18 $$ if (remain() < recordSize) [ FD ]
Line_18 $$ if (remain() < recordSize) -->Line_19 $$ channel.position(channel.position() - remain())[ CD ]
Line_18 $$ if (remain() < recordSize) -->Line_21 $$ return true;[ CD ]
Line_8 $$ long recordPtr = address + position-->Line_16 $$ UNSAFE.getInt(recordPtr)[ FD ]
Line_16 $$ int recordSize = UNSAFE.getInt(recordPtr)-->Line_18 $$ if (remain() < recordSize) [ FD ]
