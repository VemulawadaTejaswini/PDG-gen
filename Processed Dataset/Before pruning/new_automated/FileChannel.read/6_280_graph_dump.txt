Line_0 $$ Entry-->Line_2 $$ //6
public class func [ CD ]
Line_2 $$ //6
public class func -->Line_3 $$ public void isNextFrameValid(File seekFile, long filePointerCount, ByteBuffer bb, FileChannel fc) [ CD ]
Line_3 $$ public void isNextFrameValid(File seekFile, long filePointerCount, ByteBuffer bb, FileChannel fc) -->Line_4 $$ if (mp3FrameHeader.getFrameLength() > (FILE_BUFFER_SIZE - MIN_BUFFER_REMAINING_REQUIRED)) [ CD ]
Line_4 $$ if (mp3FrameHeader.getFrameLength() > (FILE_BUFFER_SIZE - MIN_BUFFER_REMAINING_REQUIRED)) -->Line_6 $$ //            MP3AudioHeader.//logger.finer("Frame size is too large to be a frame:" + mp3FrameHeader.getFrameLength());
return false;[ CD ]
Line_3 $$ public void isNextFrameValid(File seekFile, long filePointerCount, ByteBuffer bb, FileChannel fc) -->Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) [ CD ]
Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_10 $$ bb.clear()[ CD ]
Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_11 $$ fc.position(filePointerCount)[ CD ]
Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_12 $$ fc.read(bb, fc.position())[ CD ]
Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_13 $$ bb.flip()[ CD ]
Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_17 $$ //Not enough left
if (bb.limit() <= MIN_BUFFER_REMAINING_REQUIRED) [ CD ]
Line_17 $$ //Not enough left
if (bb.limit() <= MIN_BUFFER_REMAINING_REQUIRED) -->Line_17 $$ bb.limit()[ CD ]
Line_17 $$ //Not enough left
if (bb.limit() <= MIN_BUFFER_REMAINING_REQUIRED) -->Line_20 $$ //                MP3AudioHeader.//logger.finer("Nearly at end of file, no header found:");
return false;[ CD ]
Line_8 $$ if (bb.remaining() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_24 $$ //Still Not enough left for next alleged frame size so giving up
if (bb.limit() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) [ CD ]
Line_24 $$ //Still Not enough left for next alleged frame size so giving up
if (bb.limit() <= MIN_BUFFER_REMAINING_REQUIRED + mp3FrameHeader.getFrameLength()) -->Line_27 $$ //                MP3AudioHeader.//logger.finer("Nearly at end of file, no room for next frame, no header found:");
return false;[ CD ]
Line_3 $$ public void isNextFrameValid(File seekFile, long filePointerCount, ByteBuffer bb, FileChannel fc) -->Line_30 $$ bb.position(bb.position() + mp3FrameHeader.getFrameLength())[ CD ]
Line_3 $$ public void isNextFrameValid(File seekFile, long filePointerCount, ByteBuffer bb, FileChannel fc) -->Line_31 $$ if (MPEGFrameHeader.isMPEGFrame(bb)) [ CD ]
Line_31 $$ if (MPEGFrameHeader.isMPEGFrame(bb)) -->Line_31 $$ MPEGFrameHeader.isMPEGFrame(bb)[ CD ]
Line_3 $$ public void isNextFrameValid(File seekFile, long filePointerCount, ByteBuffer bb, FileChannel fc) -->Line_43 $$ bb.position(currentPosition)[ CD ]
