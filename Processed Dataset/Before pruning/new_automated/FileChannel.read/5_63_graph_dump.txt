Line_0 $$ Entry-->Line_2 $$ //5
public class func [ CD ]
Line_2 $$ //5
public class func -->Line_3 $$ public void readFromFile(String filename) [ CD ]
Line_3 $$ public void readFromFile(String filename) -->Line_4 $$ File f = new File(filename)[ CD ]
Line_3 $$ public void readFromFile(String filename) -->Line_5 $$ if (!f.exists()) [ CD ]
Line_5 $$ if (!f.exists()) -->Line_5 $$ !f.exists()[ CD ]
Line_5 $$ !f.exists()-->Line_5 $$ f.exists()[ CD ]
Line_4 $$ File f = new File(filename)-->Line_5 $$ f.exists()[ FD ]
Line_3 $$ public void readFromFile(String filename) -->Line_9 $$ fis.getChannel()[ CD ]
Line_3 $$ public void readFromFile(String filename) -->Line_10 $$ ByteBuffer byteBuffer = ByteBuffer.allocate((int) channel.size())[ CD ]
Line_10 $$ ByteBuffer byteBuffer = ByteBuffer.allocate((int) channel.size())-->Line_10 $$ ByteBuffer.allocate((int) channel.size())[ CD ]
Line_3 $$ public void readFromFile(String filename) -->Line_11 $$ channel.read(byteBuffer)[ CD ]
Line_10 $$ ByteBuffer byteBuffer = ByteBuffer.allocate((int) channel.size())-->Line_11 $$ channel.read(byteBuffer)[ FD ]
Line_3 $$ public void readFromFile(String filename) -->Line_12 $$ return byteBuffer.array();[ CD ]
Line_12 $$ return byteBuffer.array();-->Line_12 $$ byteBuffer.array()[ CD ]
Line_10 $$ ByteBuffer byteBuffer = ByteBuffer.allocate((int) channel.size())-->Line_12 $$ byteBuffer.array()[ FD ]
