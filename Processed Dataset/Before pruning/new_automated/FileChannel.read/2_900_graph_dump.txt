Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void testXiphLacing() [ CD ]
Line_3 $$ public void testXiphLacing() -->Line_4 $$ FileInputStream fileInputStream = new FileInputStream(file)[ CD ]
Line_3 $$ public void testXiphLacing() -->Line_5 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())[ CD ]
Line_5 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())-->Line_5 $$ ByteBuffer.allocate(fileInputStream.available())[ CD ]
Line_4 $$ FileInputStream fileInputStream = new FileInputStream(file)-->Line_5 $$ fileInputStream.available()[ FD ]
Line_3 $$ public void testXiphLacing() -->Line_6 $$ FileChannel channel = fileInputStream.getChannel()[ CD ]
Line_6 $$ FileChannel channel = fileInputStream.getChannel()-->Line_6 $$ fileInputStream.getChannel()[ CD ]
Line_4 $$ FileInputStream fileInputStream = new FileInputStream(file)-->Line_6 $$ fileInputStream.getChannel()[ FD ]
Line_3 $$ public void testXiphLacing() -->Line_7 $$ channel.position(be.dataOffset)[ CD ]
Line_6 $$ FileChannel channel = fileInputStream.getChannel()-->Line_7 $$ channel.position(be.dataOffset)[ FD ]
Line_3 $$ public void testXiphLacing() -->Line_8 $$ channel.read(source)[ CD ]
Line_6 $$ FileChannel channel = fileInputStream.getChannel()-->Line_8 $$ channel.read(source)[ FD ]
Line_5 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())-->Line_8 $$ channel.read(source)[ FD ]
Line_3 $$ public void testXiphLacing() -->Line_9 $$ source.flip()[ CD ]
Line_5 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())-->Line_9 $$ source.flip()[ FD ]
