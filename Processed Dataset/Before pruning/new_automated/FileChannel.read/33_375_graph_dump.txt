Line_0 $$ Entry-->Line_2 $$ //33
public class func [ CD ]
Line_2 $$ //33
public class func -->Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) [ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_4 $$ ByteBuffer.allocate(boxHeader.getDataLength())[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_5 $$ int bytesRead = fc.read(moovBuffer)[ CD ]
Line_5 $$ int bytesRead = fc.read(moovBuffer)-->Line_5 $$ fc.read(moovBuffer)[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_6 $$ if (bytesRead < boxHeader.getDataLength()) [ CD ]
Line_5 $$ int bytesRead = fc.read(moovBuffer)-->Line_6 $$ if (bytesRead < boxHeader.getDataLength()) [ FD ]
Line_6 $$ if (bytesRead < boxHeader.getDataLength()) -->Line_8 $$ String msg = ErrorMessage.ATOM_LENGTH_LARGER_THAN_DATA.getMsg(boxHeader.getId(), boxHeader.getDataLength(), bytesRead)[ CD ]
Line_8 $$ String msg = ErrorMessage.ATOM_LENGTH_LARGER_THAN_DATA.getMsg(boxHeader.getId(), boxHeader.getDataLength(), bytesRead)-->Line_8 $$ ErrorMessage.ATOM_LENGTH_LARGER_THAN_DATA.getMsg(boxHeader.getId(), boxHeader.getDataLength(), bytesRead)[ CD ]
Line_5 $$ int bytesRead = fc.read(moovBuffer)-->Line_8 $$ ErrorMessage.ATOM_LENGTH_LARGER_THAN_DATA.getMsg(boxHeader.getId(), boxHeader.getDataLength(), bytesRead)[ FD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_11 $$ moovBuffer.rewind()[ CD ]
Line_3 $$ public void buildTree(RandomAccessFile raf, boolean closeExit) -->Line_12 $$ buildChildrenOfNode(moovBuffer, newAtom)[ CD ]
