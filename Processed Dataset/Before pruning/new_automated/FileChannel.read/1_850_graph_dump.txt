Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void writeLastUpdated(File touchfile, String key, String error) [ CD ]
Line_3 $$ public void writeLastUpdated(File touchfile, String key, String error) -->Line_4 $$ ByteBuffer buffer = ByteBuffer.allocate((int) channel.size())[ CD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocate((int) channel.size())-->Line_4 $$ ByteBuffer.allocate((int) channel.size())[ CD ]
Line_3 $$ public void writeLastUpdated(File touchfile, String key, String error) -->Line_5 $$ channel.read(buffer)[ CD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocate((int) channel.size())-->Line_5 $$ channel.read(buffer)[ FD ]
Line_3 $$ public void writeLastUpdated(File touchfile, String key, String error) -->Line_6 $$ buffer.flip()[ CD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocate((int) channel.size())-->Line_6 $$ buffer.flip()[ FD ]
Line_3 $$ public void writeLastUpdated(File touchfile, String key, String error) -->Line_7 $$ ByteArrayInputStream stream = new ByteArrayInputStream(buffer.array())[ CD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocate((int) channel.size())-->Line_7 $$ buffer.array()[ FD ]
Line_3 $$ public void writeLastUpdated(File touchfile, String key, String error) -->Line_8 $$ props.load(stream)[ CD ]
Line_7 $$ ByteArrayInputStream stream = new ByteArrayInputStream(buffer.array())-->Line_8 $$ props.load(stream)[ FD ]
