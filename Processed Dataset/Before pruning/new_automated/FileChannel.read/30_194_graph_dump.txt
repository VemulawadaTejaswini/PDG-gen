Line_0 $$ Entry-->Line_2 $$ //30
public class func [ CD ]
Line_2 $$ //30
public class func -->Line_3 $$ public void readFromFile(FileChannel fileChannel, int bytesToRead) [ CD ]
Line_3 $$ public void readFromFile(FileChannel fileChannel, int bytesToRead) -->Line_4 $$ ByteBuffer nioBuffer = ByteBuffer.wrap(rawBuffer)[ CD ]
Line_4 $$ ByteBuffer nioBuffer = ByteBuffer.wrap(rawBuffer)-->Line_4 $$ ByteBuffer.wrap(rawBuffer)[ CD ]
Line_3 $$ public void readFromFile(FileChannel fileChannel, int bytesToRead) -->Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) [ CD ]
Line_3 $$ public void readFromFile(FileChannel fileChannel, int bytesToRead) -->Line_3 $$ public void readFromFile(FileChannel fileChannel, int bytesToRead) [ CD ]
Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) -->Line_5 $$ int bytesRead = 0[ CD ]
Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) -->Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)[ CD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_6 $$ fileChannel.read(nioBuffer)[ CD ]
Line_4 $$ ByteBuffer nioBuffer = ByteBuffer.wrap(rawBuffer)-->Line_6 $$ fileChannel.read(nioBuffer)[ FD ]
Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) -->Line_9 $$ // We always expect to read data.
if (lastBytesRead < 0) [ CD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_9 $$ // We always expect to read data.
if (lastBytesRead < 0) [ FD ]
Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) -->Line_12 $$ if (lastBytesRead == 0) [ CD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_12 $$ if (lastBytesRead == 0) [ FD ]
Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) -->Line_16 $$ bytesRead += lastBytesRead[ CD ]
Line_5 $$ int bytesRead = 0-->Line_16 $$ bytesRead += lastBytesRead[ FD ]
Line_16 $$ bytesRead += lastBytesRead-->Line_16 $$ bytesRead += lastBytesRead[ FD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_16 $$ bytesRead += lastBytesRead[ FD ]
Line_3 $$ public void readFromFile(FileChannel fileChannel, int bytesToRead) -->Line_18 $$ return ChannelBuffers.wrappedBuffer(rawBuffer);[ CD ]
Line_18 $$ return ChannelBuffers.wrappedBuffer(rawBuffer);-->Line_18 $$ ChannelBuffers.wrappedBuffer(rawBuffer)[ CD ]
Line_5 $$ int bytesRead = 0-->Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) [ FD ]
Line_16 $$ bytesRead += lastBytesRead-->Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) [ FD ]
Line_5 $$ int bytesRead = 0-->Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) [ FD ]
Line_16 $$ bytesRead += lastBytesRead-->Line_5 $$ for (int bytesRead = 0; bytesRead < bytesToRead; ) [ FD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_9 $$ // We always expect to read data.
if (lastBytesRead < 0) [ FD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_12 $$ if (lastBytesRead == 0) [ FD ]
Line_6 $$ int lastBytesRead = fileChannel.read(nioBuffer)-->Line_16 $$ bytesRead += lastBytesRead[ FD ]
