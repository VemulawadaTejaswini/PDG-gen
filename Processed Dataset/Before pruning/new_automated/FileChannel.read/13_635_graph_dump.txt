Line_0 $$ Entry-->Line_2 $$ //13
public class func [ CD ]
Line_2 $$ //13
public class func -->Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) [ CD ]
Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_4 $$ ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)[ CD ]
Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_5 $$ fc.read(header)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_5 $$ fc.read(header)[ FD ]
Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_6 $$ header.flip()[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_6 $$ header.flip()[ FD ]
Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_7 $$ int type = getUnsignedShort(header)[ CD ]
Line_7 $$ int type = getUnsignedShort(header)-->Line_7 $$ getUnsignedShort(header)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_7 $$ getUnsignedShort(header)[ FD ]
Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_8 $$ long count = getUnsignedInt(header)[ CD ]
Line_8 $$ long count = getUnsignedInt(header)-->Line_8 $$ getUnsignedInt(header)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_8 $$ getUnsignedInt(header)[ FD ]
Line_3 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_9 $$ if (type == Tiff.Type.SHORT && count == 1) [ CD ]
Line_9 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_12 $$ int upper = getUnsignedShort(header)[ CD ]
Line_12 $$ int upper = getUnsignedShort(header)-->Line_12 $$ getUnsignedShort(header)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_12 $$ getUnsignedShort(header)[ FD ]
Line_9 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_13 $$ int lower = getUnsignedShort(header)[ CD ]
Line_13 $$ int lower = getUnsignedShort(header)-->Line_13 $$ getUnsignedShort(header)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_13 $$ getUnsignedShort(header)[ FD ]
Line_9 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_14 $$ long value = (MASK_USHORT & upper) << 16 | (MASK_USHORT & lower)[ CD ]
Line_9 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_16 $$ return new TiffIFDEntry(tag, type, value);[ CD ]
Line_9 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_18 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) [ CD ]
Line_18 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_20 $$ header.getInt()[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_20 $$ header.getInt()[ FD ]
Line_18 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_21 $$ return new TiffIFDEntry(tag, type, value);[ CD ]
Line_18 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_25 $$ long offset = getUnsignedInt(header)[ CD ]
Line_25 $$ long offset = getUnsignedInt(header)-->Line_25 $$ getUnsignedInt(header)[ CD ]
Line_4 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_25 $$ getUnsignedInt(header)[ FD ]
Line_18 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_26 $$ int size = MASK_USHORT & (int) calcSize(type, count)[ CD ]
Line_7 $$ int type = getUnsignedShort(header)-->Line_26 $$ calcSize(type, count)[ FD ]
Line_8 $$ long count = getUnsignedInt(header)-->Line_26 $$ calcSize(type, count)[ FD ]
Line_18 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_28 $$ if (size > 0L) [ CD ]
Line_26 $$ int size = MASK_USHORT & (int) calcSize(type, count)-->Line_28 $$ if (size > 0L) [ FD ]
Line_28 $$ if (size > 0L) -->Line_30 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)[ CD ]
Line_30 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)-->Line_30 $$ ByteBuffer.allocateDirect(size).order(tiffFileOrder)[ CD ]
Line_26 $$ int size = MASK_USHORT & (int) calcSize(type, count)-->Line_30 $$ ByteBuffer.allocateDirect(size)[ FD ]
Line_28 $$ if (size > 0L) -->Line_31 $$ fc.position()[ CD ]
Line_28 $$ if (size > 0L) -->Line_32 $$ fc.position(offset)[ CD ]
Line_25 $$ long offset = getUnsignedInt(header)-->Line_32 $$ fc.position(offset)[ FD ]
Line_28 $$ if (size > 0L) -->Line_33 $$ fc.read(data)[ CD ]
Line_30 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)-->Line_33 $$ fc.read(data)[ FD ]
Line_28 $$ if (size > 0L) -->Line_34 $$ data.flip()[ CD ]
Line_30 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)-->Line_34 $$ data.flip()[ FD ]
Line_28 $$ if (size > 0L) -->Line_36 $$ fc.position(savedPosition)[ CD ]
Line_28 $$ if (size > 0L) -->Line_39 $$ return new TiffIFDEntry(tag, type, count, offset, data);[ CD ]
Line_28 $$ if (size > 0L) -->Line_42 $$ return new TiffIFDEntry(tag, type, count, offset);[ CD ]
