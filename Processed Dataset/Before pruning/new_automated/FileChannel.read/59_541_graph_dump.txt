Line_0 $$ Entry-->Line_2 $$ //59
public class func [ CD ]
Line_2 $$ //59
public class func -->Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) [ CD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_4 $$ final Pooled<ByteBuffer> pooled = exchange.getConnection().getBufferPool().allocate()[ CD ]
Line_4 $$ final Pooled<ByteBuffer> pooled = exchange.getConnection().getBufferPool().allocate()-->Line_4 $$ exchange.getConnection().getBufferPool().allocate()[ CD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_5 $$ ByteBuffer buffer = pooled.getResource()[ CD ]
Line_5 $$ ByteBuffer buffer = pooled.getResource()-->Line_5 $$ pooled.getResource()[ CD ]
Line_4 $$ final Pooled<ByteBuffer> pooled = exchange.getConnection().getBufferPool().allocate()-->Line_5 $$ pooled.getResource()[ FD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_6 $$ int res = src.read(buffer)[ CD ]
Line_6 $$ int res = src.read(buffer)-->Line_6 $$ src.read(buffer)[ CD ]
Line_5 $$ ByteBuffer buffer = pooled.getResource()-->Line_6 $$ src.read(buffer)[ FD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_7 $$ if (res <= 0) [ CD ]
Line_6 $$ int res = src.read(buffer)-->Line_7 $$ if (res <= 0) [ FD ]
Line_7 $$ if (res <= 0) -->Line_8 $$ return res;[ CD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_10 $$ buffer.flip()[ CD ]
Line_5 $$ ByteBuffer buffer = pooled.getResource()-->Line_10 $$ buffer.flip()[ FD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_11 $$ return write(buffer);[ CD ]
Line_11 $$ return write(buffer);-->Line_11 $$ write(buffer)[ CD ]
Line_5 $$ ByteBuffer buffer = pooled.getResource()-->Line_11 $$ write(buffer)[ FD ]
Line_3 $$ public void transferFrom(final FileChannel src, final long position, final long count) -->Line_12 $$ pooled.free()[ CD ]
Line_4 $$ final Pooled<ByteBuffer> pooled = exchange.getConnection().getBufferPool().allocate()-->Line_12 $$ pooled.free()[ FD ]
