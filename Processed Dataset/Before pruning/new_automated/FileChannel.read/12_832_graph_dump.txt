Line_0 $$ Entry-->Line_2 $$ //12
public class func [ CD ]
Line_2 $$ //12
public class func -->Line_3 $$ public void sendFile(String filename, SocketChannel sock) [ CD ]
Line_3 $$ public void sendFile(String filename, SocketChannel sock) -->Line_4 $$ ByteBuffer sendBuf = ByteBuffer.allocateDirect(fileSendingChunk)[ CD ]
Line_4 $$ ByteBuffer sendBuf = ByteBuffer.allocateDirect(fileSendingChunk)-->Line_4 $$ ByteBuffer.allocateDirect(fileSendingChunk)[ CD ]
Line_3 $$ public void sendFile(String filename, SocketChannel sock) -->Line_5 $$ while (source.read(sendBuf) > 0) [ CD ]
Line_3 $$ public void sendFile(String filename, SocketChannel sock) -->Line_3 $$ public void sendFile(String filename, SocketChannel sock) [ CD ]
Line_4 $$ ByteBuffer sendBuf = ByteBuffer.allocateDirect(fileSendingChunk)-->Line_5 $$ source.read(sendBuf)[ FD ]
Line_5 $$ while (source.read(sendBuf) > 0) -->Line_6 $$ sendBuf.flip()[ CD ]
Line_4 $$ ByteBuffer sendBuf = ByteBuffer.allocateDirect(fileSendingChunk)-->Line_6 $$ sendBuf.flip()[ FD ]
Line_5 $$ while (source.read(sendBuf) > 0) -->Line_7 $$ if (log.isDebugEnabled()) [ CD ]
Line_7 $$ if (log.isDebugEnabled()) -->Line_7 $$ log.isDebugEnabled()[ CD ]
Line_7 $$ if (log.isDebugEnabled()) -->Line_8 $$ log.debug("Sending " + sendBuf)[ CD ]
Line_5 $$ while (source.read(sendBuf) > 0) -->Line_10 $$ sock.write(sendBuf)[ CD ]
Line_4 $$ ByteBuffer sendBuf = ByteBuffer.allocateDirect(fileSendingChunk)-->Line_10 $$ sock.write(sendBuf)[ FD ]
Line_5 $$ while (source.read(sendBuf) > 0) -->Line_11 $$ sendBuf.rewind()[ CD ]
Line_4 $$ ByteBuffer sendBuf = ByteBuffer.allocateDirect(fileSendingChunk)-->Line_11 $$ sendBuf.rewind()[ FD ]
Line_3 $$ public void sendFile(String filename, SocketChannel sock) -->Line_13 $$ source.close()[ CD ]
