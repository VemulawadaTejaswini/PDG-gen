Line_0 $$ Entry-->Line_2 $$ //9
public class func [ CD ]
Line_2 $$ //9
public class func -->Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) [ CD ]
Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) -->Line_4 $$ BBContainer bufC = DBBPool.allocateDirect(8192)[ CD ]
Line_4 $$ BBContainer bufC = DBBPool.allocateDirect(8192)-->Line_4 $$ DBBPool.allocateDirect(8192)[ CD ]
Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) -->Line_5 $$ ByteBuffer buf = bufC.b()[ CD ]
Line_5 $$ ByteBuffer buf = bufC.b()-->Line_5 $$ bufC.b()[ CD ]
Line_4 $$ BBContainer bufC = DBBPool.allocateDirect(8192)-->Line_5 $$ bufC.b()[ FD ]
Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) -->Line_6 $$ while (inputChannel.read(buf) != -1) [ CD ]
Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) -->Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) [ CD ]
Line_5 $$ ByteBuffer buf = bufC.b()-->Line_6 $$ inputChannel.read(buf)[ FD ]
Line_6 $$ while (inputChannel.read(buf) != -1) -->Line_7 $$ buf.flip()[ CD ]
Line_5 $$ ByteBuffer buf = bufC.b()-->Line_7 $$ buf.flip()[ FD ]
Line_6 $$ while (inputChannel.read(buf) != -1) -->Line_8 $$ outputChannel.write(buf)[ CD ]
Line_5 $$ ByteBuffer buf = bufC.b()-->Line_8 $$ outputChannel.write(buf)[ FD ]
Line_6 $$ while (inputChannel.read(buf) != -1) -->Line_9 $$ buf.clear()[ CD ]
Line_5 $$ ByteBuffer buf = bufC.b()-->Line_9 $$ buf.clear()[ FD ]
Line_3 $$ public void moveSubRootContents(File fromSubRoot, File toSubRoot) -->Line_11 $$ inputChannel.close()[ CD ]
