Line_0 $$ Entry-->Line_2 $$ //15
public class func [ CD ]
Line_2 $$ //15
public class func -->Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) [ CD ]
Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) -->Line_5 $$ FileChannel fc = fis.getChannel()[ CD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_5 $$ fis.getChannel()[ CD ]
Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) -->Line_6 $$ if (fc.size() >= buffer.capacity() + rearOffset) [ CD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_6 $$ fc.size()[ FD ]
Line_6 $$ if (fc.size() >= buffer.capacity() + rearOffset) -->Line_7 $$ fc.position(fc.size() - buffer.capacity() - rearOffset)[ CD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_7 $$ fc.position(fc.size() - buffer.capacity() - rearOffset)[ FD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_7 $$ fc.size()[ FD ]
Line_6 $$ if (fc.size() >= buffer.capacity() + rearOffset) -->Line_9 $$ fc.position(0)[ CD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_9 $$ fc.position(0)[ FD ]
Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) -->Line_11 $$ while (totalRead < buffer.capacity() && totalRead < fc.size()) [ CD ]
Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) -->Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) [ CD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_11 $$ fc.size()[ FD ]
Line_11 $$ while (totalRead < buffer.capacity() && totalRead < fc.size()) -->Line_12 $$ fc.read(buffer)[ CD ]
Line_5 $$ FileChannel fc = fis.getChannel()-->Line_12 $$ fc.read(buffer)[ FD ]
Line_11 $$ while (totalRead < buffer.capacity() && totalRead < fc.size()) -->Line_14 $$ if (read == 0 || read == -1)
    break;[ CD ]
Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) -->Line_17 $$ buffer.limit(totalRead)[ CD ]
Line_3 $$ public void fillBuffer(ByteBuffer buffer, File file, int rearOffset) -->Line_18 $$ IOUtils.close(fis)[ CD ]
