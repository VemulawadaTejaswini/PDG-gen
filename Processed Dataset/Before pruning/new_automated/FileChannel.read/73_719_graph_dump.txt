Line_0 $$ Entry-->Line_2 $$ //73
public class func [ CD ]
Line_2 $$ //73
public class func -->Line_3 $$ public void getIPBans() [ CD ]
Line_3 $$ public void getIPBans() -->Line_4 $$ if (!data.exists()) [ CD ]
Line_4 $$ if (!data.exists()) -->Line_4 $$ !data.exists()[ CD ]
Line_4 $$ !data.exists()-->Line_4 $$ data.exists()[ CD ]
Line_4 $$ if (!data.exists()) -->Line_5 $$ return d;[ CD ]
Line_3 $$ public void getIPBans() -->Line_8 $$ fin.getChannel()[ CD ]
Line_3 $$ public void getIPBans() -->Line_9 $$ long size = chan.size()[ CD ]
Line_9 $$ long size = chan.size()-->Line_9 $$ chan.size()[ CD ]
Line_3 $$ public void getIPBans() -->Line_10 $$ ByteBuffer.allocateDirect((int) size)[ CD ]
Line_3 $$ public void getIPBans() -->Line_11 $$ chan.read(buf)[ CD ]
