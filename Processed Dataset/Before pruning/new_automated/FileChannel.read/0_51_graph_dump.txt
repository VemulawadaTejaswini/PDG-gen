Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void testReadFrames() [ CD ]
Line_3 $$ public void testReadFrames() -->Line_4 $$ List<MkvBlock> bs = MKVMuxerTest.getBlocksByTrackNumber(me[0], 1)[ CD ]
Line_4 $$ List<MkvBlock> bs = MKVMuxerTest.getBlocksByTrackNumber(me[0], 1)-->Line_4 $$ MKVMuxerTest.getBlocksByTrackNumber(me[0], 1)[ CD ]
Line_3 $$ public void testReadFrames() -->Line_5 $$ Assert.assertNotNull(bs)[ CD ]
Line_4 $$ List<MkvBlock> bs = MKVMuxerTest.getBlocksByTrackNumber(me[0], 1)-->Line_5 $$ Assert.assertNotNull(bs)[ FD ]
Line_3 $$ public void testReadFrames() -->Line_6 $$ Assert.assertEquals(1, bs.size())[ CD ]
Line_4 $$ List<MkvBlock> bs = MKVMuxerTest.getBlocksByTrackNumber(me[0], 1)-->Line_6 $$ bs.size()[ FD ]
Line_3 $$ public void testReadFrames() -->Line_7 $$ MkvBlock videoBlock = bs.get(0)[ CD ]
Line_7 $$ MkvBlock videoBlock = bs.get(0)-->Line_7 $$ bs.get(0)[ CD ]
Line_4 $$ List<MkvBlock> bs = MKVMuxerTest.getBlocksByTrackNumber(me[0], 1)-->Line_7 $$ bs.get(0)[ FD ]
Line_3 $$ public void testReadFrames() -->Line_8 $$ ByteBuffer source = ByteBuffer.allocate((int) videoBlock.size())[ CD ]
Line_8 $$ ByteBuffer source = ByteBuffer.allocate((int) videoBlock.size())-->Line_8 $$ ByteBuffer.allocate((int) videoBlock.size())[ CD ]
Line_7 $$ MkvBlock videoBlock = bs.get(0)-->Line_8 $$ videoBlock.size()[ FD ]
Line_3 $$ public void testReadFrames() -->Line_9 $$ channel.position(videoBlock.dataOffset)[ CD ]
Line_3 $$ public void testReadFrames() -->Line_10 $$ channel.read(source)[ CD ]
Line_8 $$ ByteBuffer source = ByteBuffer.allocate((int) videoBlock.size())-->Line_10 $$ channel.read(source)[ FD ]
Line_3 $$ public void testReadFrames() -->Line_11 $$ source.flip()[ CD ]
Line_8 $$ ByteBuffer source = ByteBuffer.allocate((int) videoBlock.size())-->Line_11 $$ source.flip()[ FD ]
Line_3 $$ public void testReadFrames() -->Line_12 $$ ByteBuffer[] frames = videoBlock.getFrames(source)[ CD ]
Line_12 $$ ByteBuffer[] frames = videoBlock.getFrames(source)-->Line_12 $$ videoBlock.getFrames(source)[ CD ]
Line_7 $$ MkvBlock videoBlock = bs.get(0)-->Line_12 $$ videoBlock.getFrames(source)[ FD ]
Line_8 $$ ByteBuffer source = ByteBuffer.allocate((int) videoBlock.size())-->Line_12 $$ videoBlock.getFrames(source)[ FD ]
Line_3 $$ public void testReadFrames() -->Line_13 $$ byte[] frameBytes = MKVMuxerTest.bufferToArray(byteBuffer)[ CD ]
Line_13 $$ byte[] frameBytes = MKVMuxerTest.bufferToArray(byteBuffer)-->Line_13 $$ MKVMuxerTest.bufferToArray(byteBuffer)[ CD ]
Line_3 $$ public void testReadFrames() -->Line_14 $$ Assert.assertNotNull(frames)[ CD ]
Line_12 $$ ByteBuffer[] frames = videoBlock.getFrames(source)-->Line_14 $$ Assert.assertNotNull(frames)[ FD ]
Line_3 $$ public void testReadFrames() -->Line_15 $$ Assert.assertEquals(1, frames.length)[ CD ]
Line_3 $$ public void testReadFrames() -->Line_16 $$ Assert.assertArrayEquals(rawFrame, frameBytes)[ CD ]
Line_13 $$ byte[] frameBytes = MKVMuxerTest.bufferToArray(byteBuffer)-->Line_16 $$ Assert.assertArrayEquals(rawFrame, frameBytes)[ FD ]
