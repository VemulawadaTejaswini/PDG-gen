Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) [ CD ]
Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) -->Line_4 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(ByteUtils.SIZE_OF_INT)[ CD ]
Line_4 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(ByteUtils.SIZE_OF_INT)-->Line_4 $$ ByteBuffer.allocate(ByteUtils.SIZE_OF_INT)[ CD ]
Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) -->Line_5 $$ dataFile.read(sizeBuffer, valueLocation)[ CD ]
Line_4 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(ByteUtils.SIZE_OF_INT)-->Line_5 $$ dataFile.read(sizeBuffer, valueLocation)[ FD ]
Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) -->Line_6 $$ int valueSize = sizeBuffer.getInt(0)[ CD ]
Line_6 $$ int valueSize = sizeBuffer.getInt(0)-->Line_6 $$ sizeBuffer.getInt(0)[ CD ]
Line_4 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(ByteUtils.SIZE_OF_INT)-->Line_6 $$ sizeBuffer.getInt(0)[ FD ]
Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) -->Line_7 $$ ByteBuffer valueBuffer = ByteBuffer.allocate(valueSize)[ CD ]
Line_7 $$ ByteBuffer valueBuffer = ByteBuffer.allocate(valueSize)-->Line_7 $$ ByteBuffer.allocate(valueSize)[ CD ]
Line_6 $$ int valueSize = sizeBuffer.getInt(0)-->Line_7 $$ ByteBuffer.allocate(valueSize)[ FD ]
Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) -->Line_8 $$ dataFile.read(valueBuffer, valueLocation + ByteUtils.SIZE_OF_INT)[ CD ]
Line_7 $$ ByteBuffer valueBuffer = ByteBuffer.allocate(valueSize)-->Line_8 $$ dataFile.read(valueBuffer, valueLocation + ByteUtils.SIZE_OF_INT)[ FD ]
Line_3 $$ public void readValue(byte[] key, int chunk, int valueLocation) -->Line_9 $$ return valueBuffer.array();[ CD ]
Line_9 $$ return valueBuffer.array();-->Line_9 $$ valueBuffer.array()[ CD ]
Line_7 $$ ByteBuffer valueBuffer = ByteBuffer.allocate(valueSize)-->Line_9 $$ valueBuffer.array()[ FD ]
