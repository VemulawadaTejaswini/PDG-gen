Line_0 $$ Entry-->Line_2 $$ //38
public class func [ CD ]
Line_2 $$ //38
public class func -->Line_3 $$ public void initialWritePosition() [ CD ]
Line_3 $$ public void initialWritePosition() -->Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_4 $$ ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)[ CD ]
Line_3 $$ public void initialWritePosition() -->Line_5 $$ channel.read(buf)[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_5 $$ channel.read(buf)[ FD ]
Line_3 $$ public void initialWritePosition() -->Line_6 $$ buf.rewind()[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_6 $$ buf.rewind()[ FD ]
Line_3 $$ public void initialWritePosition() -->Line_7 $$ long result = buf.getLong()[ CD ]
Line_7 $$ long result = buf.getLong()-->Line_7 $$ buf.getLong()[ CD ]
Line_4 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_7 $$ buf.getLong()[ FD ]
