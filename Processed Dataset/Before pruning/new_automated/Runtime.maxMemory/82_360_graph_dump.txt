Line_0 $$ Entry-->Line_2 $$ //82
public class func [ CD ]
Line_2 $$ //82
public class func -->Line_3 $$ public void getMemoryStatus() [ CD ]
Line_3 $$ public void getMemoryStatus() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void getMemoryStatus() -->Line_5 $$ long total = runtime.totalMemory()[ CD ]
Line_5 $$ long total = runtime.totalMemory()-->Line_5 $$ runtime.totalMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.totalMemory()[ FD ]
Line_3 $$ public void getMemoryStatus() -->Line_6 $$ long used = total - runtime.freeMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void getMemoryStatus() -->Line_7 $$ long max = runtime.maxMemory()[ CD ]
Line_7 $$ long max = runtime.maxMemory()-->Line_7 $$ runtime.maxMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_7 $$ runtime.maxMemory()[ FD ]
Line_3 $$ public void getMemoryStatus() -->Line_8 $$ return formatMemory(used) + "/" + formatMemory(total) + " (Max: " + formatMemory(max) + ")";[ CD ]
Line_6 $$ long used = total - runtime.freeMemory()-->Line_8 $$ formatMemory(used)[ FD ]
Line_5 $$ long total = runtime.totalMemory()-->Line_8 $$ formatMemory(total)[ FD ]
Line_7 $$ long max = runtime.maxMemory()-->Line_8 $$ formatMemory(max)[ FD ]
