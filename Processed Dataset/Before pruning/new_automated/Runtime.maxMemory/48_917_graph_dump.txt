Line_0 $$ Entry-->Line_2 $$ //48
public class func [ CD ]
Line_2 $$ //48
public class func -->Line_3 $$ public void clearCacheIfLowOnMem() [ CD ]
Line_3 $$ public void clearCacheIfLowOnMem() -->Line_4 $$ Runtime r = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime r = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void clearCacheIfLowOnMem() -->Line_5 $$ long max = r.maxMemory()[ CD ]
Line_5 $$ long max = r.maxMemory()-->Line_5 $$ r.maxMemory()[ CD ]
Line_4 $$ Runtime r = Runtime.getRuntime()-->Line_5 $$ r.maxMemory()[ FD ]
Line_3 $$ public void clearCacheIfLowOnMem() -->Line_6 $$ if (max == Long.MAX_VALUE)
    return;[ CD ]
Line_5 $$ long max = r.maxMemory()-->Line_6 $$ if (max == Long.MAX_VALUE)
    return;[ FD ]
Line_6 $$ if (max == Long.MAX_VALUE)
    return;-->Line_7 $$ return;[ CD ]
Line_3 $$ public void clearCacheIfLowOnMem() -->Line_8 $$ double free = r.freeMemory()[ CD ]
Line_8 $$ double free = r.freeMemory()-->Line_8 $$ r.freeMemory()[ CD ]
Line_4 $$ Runtime r = Runtime.getRuntime()-->Line_8 $$ r.freeMemory()[ FD ]
Line_3 $$ public void clearCacheIfLowOnMem() -->Line_9 $$ double total = r.totalMemory()[ CD ]
Line_9 $$ double total = r.totalMemory()-->Line_9 $$ r.totalMemory()[ CD ]
Line_4 $$ Runtime r = Runtime.getRuntime()-->Line_9 $$ r.totalMemory()[ FD ]
