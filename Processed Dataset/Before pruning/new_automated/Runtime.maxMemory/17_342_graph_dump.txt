Line_0 $$ Entry-->Line_2 $$ //17
public class func [ CD ]
Line_2 $$ //17
public class func -->Line_3 $$ public void run() [ CD ]
Line_3 $$ public void run() -->Line_4 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void run() -->Line_5 $$ long freeMemory = rt.freeMemory()[ CD ]
Line_5 $$ long freeMemory = rt.freeMemory()-->Line_5 $$ rt.freeMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.freeMemory()[ FD ]
Line_3 $$ public void run() -->Line_6 $$ long totalMemory = rt.totalMemory()[ CD ]
Line_6 $$ long totalMemory = rt.totalMemory()-->Line_6 $$ rt.totalMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_6 $$ rt.totalMemory()[ FD ]
Line_3 $$ public void run() -->Line_7 $$ long maxMemory = rt.maxMemory()[ CD ]
Line_7 $$ long maxMemory = rt.maxMemory()-->Line_7 $$ rt.maxMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_7 $$ rt.maxMemory()[ FD ]
Line_3 $$ public void run() -->Line_8 $$ if (FORCE_GC_MEMORY_EVENTS || freeMemory / (totalMemory * 1.0) < GC_MEMORY_THRESHOLD) [ CD ]
Line_8 $$ if (FORCE_GC_MEMORY_EVENTS || freeMemory / (totalMemory * 1.0) < GC_MEMORY_THRESHOLD) -->Line_12 $$ if (forceBatchExpiration) [ CD ]
Line_12 $$ if (forceBatchExpiration) -->Line_13 $$ if (logger.isDebugEnabled()) [ CD ]
Line_13 $$ if (logger.isDebugEnabled()) -->Line_13 $$ logger.isDebugEnabled()[ CD ]
Line_13 $$ if (logger.isDebugEnabled()) -->Line_14 $$ logger.debug("forcing batch expiration due to low memory conditions")[ CD ]
