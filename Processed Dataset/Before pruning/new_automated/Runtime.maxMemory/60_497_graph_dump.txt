Line_0 $$ Entry-->Line_2 $$ //60
public class func [ CD ]
Line_2 $$ //60
public class func -->Line_3 $$ public void redraw(GL2 gl) [ CD ]
Line_3 $$ public void redraw(GL2 gl) -->Line_4 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void redraw(GL2 gl) -->Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory()[ CD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory()-->Line_5 $$ rt.freeMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.freeMemory()[ FD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory()-->Line_5 $$ rt.totalMemory()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.totalMemory()[ FD ]
Line_3 $$ public void redraw(GL2 gl) -->Line_6 $$ FastText.aprintf(g, new Coord(10, y -= 15), 0, 1, "Mem: %,011d/%,011d/%,011d/%,011d", free, total - free, total, rt.maxMemory())[ CD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory()-->Line_6 $$ FastText.aprintf(g, new Coord(10, y -= 15), 0, 1, "Mem: %,011d/%,011d/%,011d/%,011d", free, total - free, total, rt.maxMemory())[ FD ]
Line_5 $$ long free = rt.freeMemory(), total = rt.totalMemory()-->Line_6 $$ FastText.aprintf(g, new Coord(10, y -= 15), 0, 1, "Mem: %,011d/%,011d/%,011d/%,011d", free, total - free, total, rt.maxMemory())[ FD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_6 $$ rt.maxMemory()[ FD ]
