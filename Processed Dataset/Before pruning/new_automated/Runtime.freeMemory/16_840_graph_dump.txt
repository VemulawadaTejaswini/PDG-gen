Line_0 $$ Entry-->Line_2 $$ //16
public class func [ CD ]
Line_2 $$ //16
public class func -->Line_3 $$ public void updatePeakMem() [ CD ]
Line_3 $$ public void updatePeakMem() -->Line_4 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void updatePeakMem() -->Line_5 $$ long currentUsedMem = (rt.totalMemory() - rt.freeMemory()) / (1024 * 1024)[ CD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.totalMemory()[ FD ]
Line_4 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.freeMemory()[ FD ]
Line_3 $$ public void updatePeakMem() -->Line_6 $$ if (currentUsedMem > peakMem) [ CD ]
Line_5 $$ long currentUsedMem = (rt.totalMemory() - rt.freeMemory()) / (1024 * 1024)-->Line_6 $$ if (currentUsedMem > peakMem) [ FD ]
