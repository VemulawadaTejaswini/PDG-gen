Line_0 $$ Entry-->Line_2 $$ //13
public class func [ CD ]
Line_2 $$ //13
public class func -->Line_3 $$ public void jvm() [ CD ]
Line_3 $$ public void jvm() -->Line_4 $$ return SystemJVMResponse.create(bytesToValueMap(runtime.freeMemory()), bytesToValueMap(runtime.maxMemory()), bytesToValueMap(runtime.totalMemory()), bytesToValueMap(runtime.totalMemory() - runtime.freeMemory()), serverStatus.getNodeId().toString(), Tools.getPID(), Tools.getSystemInformation());[ CD ]
Line_4 $$ return SystemJVMResponse.create(bytesToValueMap(runtime.freeMemory()), bytesToValueMap(runtime.maxMemory()), bytesToValueMap(runtime.totalMemory()), bytesToValueMap(runtime.totalMemory() - runtime.freeMemory()), serverStatus.getNodeId().toString(), Tools.getPID(), Tools.getSystemInformation());-->Line_4 $$ SystemJVMResponse.create(bytesToValueMap(runtime.freeMemory()), bytesToValueMap(runtime.maxMemory()), bytesToValueMap(runtime.totalMemory()), bytesToValueMap(runtime.totalMemory() - runtime.freeMemory()), serverStatus.getNodeId().toString(), Tools.getPID(), Tools.getSystemInformation())[ CD ]
