Line_0 $$ Entry-->Line_2 $$ //7
public class func [ CD ]
Line_2 $$ //7
public class func -->Line_3 $$ public void logMemoryUsage() [ CD ]
Line_3 $$ public void logMemoryUsage() -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ Runtime.getRuntime()[ CD ]
Line_3 $$ public void logMemoryUsage() -->Line_5 $$ long maxMemoryBytes = runtime.maxMemory()[ CD ]
Line_5 $$ long maxMemoryBytes = runtime.maxMemory()-->Line_5 $$ runtime.maxMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.maxMemory()[ FD ]
Line_3 $$ public void logMemoryUsage() -->Line_6 $$ long freeMemoryBytes = runtime.freeMemory()[ CD ]
Line_6 $$ long freeMemoryBytes = runtime.freeMemory()-->Line_6 $$ runtime.freeMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.freeMemory()[ FD ]
Line_3 $$ public void logMemoryUsage() -->Line_7 $$ long totalMemoryBytes = runtime.totalMemory()[ CD ]
Line_7 $$ long totalMemoryBytes = runtime.totalMemory()-->Line_7 $$ runtime.totalMemory()[ CD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_7 $$ runtime.totalMemory()[ FD ]
Line_3 $$ public void logMemoryUsage() -->Line_8 $$ long maxMemoryMB = toMB(maxMemoryBytes)[ CD ]
Line_8 $$ long maxMemoryMB = toMB(maxMemoryBytes)-->Line_8 $$ toMB(maxMemoryBytes)[ CD ]
Line_5 $$ long maxMemoryBytes = runtime.maxMemory()-->Line_8 $$ toMB(maxMemoryBytes)[ FD ]
Line_3 $$ public void logMemoryUsage() -->Line_9 $$ logger.info("Memory Usage: Using %d MB of %d MB (%.2f%%) [%d MB free]", usedMemoryMB, maxMemoryMB, percentageUsed, availableMemoryMB)[ CD ]
Line_8 $$ long maxMemoryMB = toMB(maxMemoryBytes)-->Line_9 $$ logger.info("Memory Usage: Using %d MB of %d MB (%.2f%%) [%d MB free]", usedMemoryMB, maxMemoryMB, percentageUsed, availableMemoryMB)[ FD ]
