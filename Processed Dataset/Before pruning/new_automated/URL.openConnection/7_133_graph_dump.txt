Line_0 $$ Entry-->Line_2 $$ //7
public class func [ CD ]
Line_2 $$ //7
public class func -->Line_3 $$ public void readModel(URL url) [ CD ]
Line_3 $$ public void readModel(URL url) -->Line_4 $$ final URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ final URLConnection conn = url.openConnection()-->Line_4 $$ url.openConnection()[ CD ]
Line_3 $$ public void readModel(URL url) -->Line_5 $$ final InputStream in = conn instanceof HttpURLConnection ? HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn, HttpUrlConnectionHelper.GZIP) : conn.getInputStream()[ CD ]
Line_4 $$ final URLConnection conn = url.openConnection()-->Line_7 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void readModel(URL url) -->Line_8 $$ final DataReader reader = factory.getDataReader(in)[ CD ]
Line_8 $$ final DataReader reader = factory.getDataReader(in)-->Line_8 $$ factory.getDataReader(in)[ CD ]
Line_5 $$ final InputStream in = conn instanceof HttpURLConnection ? HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn, HttpUrlConnectionHelper.GZIP) : conn.getInputStream()-->Line_8 $$ factory.getDataReader(in)[ FD ]
Line_3 $$ public void readModel(URL url) -->Line_9 $$ final GCModel model = reader.read()[ CD ]
Line_9 $$ final GCModel model = reader.read()-->Line_9 $$ reader.read()[ CD ]
Line_8 $$ final DataReader reader = factory.getDataReader(in)-->Line_9 $$ reader.read()[ FD ]
