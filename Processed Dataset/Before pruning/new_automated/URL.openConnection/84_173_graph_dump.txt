Line_0 $$ Entry-->Line_2 $$ //84
public class func [ CD ]
Line_2 $$ //84
public class func -->Line_3 $$ public void sendFileNotification(String serverBase, String fileName) [ CD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_4 $$ URL url = new URL(serverBase + NOTIFICATION_PATH + fileName)[ CD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(serverBase + NOTIFICATION_PATH + fileName)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_6 $$ conn.setRequestMethod("GET")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.setRequestMethod("GET")[ FD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_7 $$ conn.setDoOutput(true)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.setDoOutput(true)[ FD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_8 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_10 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_3 $$ public void sendFileNotification(String serverBase, String fileName) [ CD ]
Line_8 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_10 $$ reader.readLine()[ FD ]
Line_10 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ log.info(line)[ CD ]
Line_3 $$ public void sendFileNotification(String serverBase, String fileName) -->Line_13 $$ reader.close()[ CD ]
Line_8 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_13 $$ reader.close()[ FD ]
