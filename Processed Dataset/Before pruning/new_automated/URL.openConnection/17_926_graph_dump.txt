Line_0 $$ Entry-->Line_2 $$ //17
public class func [ CD ]
Line_2 $$ //17
public class func -->Line_3 $$ public void openConnection(URL url) [ CD ]
Line_3 $$ public void openConnection(URL url) -->Line_4 $$ URLConnection con = url.openConnection()[ CD ]
Line_4 $$ URLConnection con = url.openConnection()-->Line_4 $$ url.openConnection()[ CD ]
Line_3 $$ public void openConnection(URL url) -->Line_5 $$ if ("HTTPS".equalsIgnoreCase(url.getProtocol())) [ CD ]
Line_5 $$ if ("HTTPS".equalsIgnoreCase(url.getProtocol())) -->Line_5 $$ "HTTPS".equalsIgnoreCase(url.getProtocol())[ CD ]
Line_5 $$ if ("HTTPS".equalsIgnoreCase(url.getProtocol())) -->Line_6 $$ HttpsURLConnection scon = (HttpsURLConnection) con[ CD ]
Line_6 $$ HttpsURLConnection scon = (HttpsURLConnection) con-->Line_8 $$ scon.setSSLSocketFactory(SSLUtil.getSSLSocketFactory(ks, password, alias))[ FD ]
Line_6 $$ HttpsURLConnection scon = (HttpsURLConnection) con-->Line_9 $$ scon.setHostnameVerifier(SSLUtil.getHostnameVerifier(SSLUtil.HOSTCERT_MIN_CHECK))[ FD ]
