Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void readClassFile(Class<?> templateClass) [ CD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_4 $$ String templateName = templateClass.getName()[ CD ]
Line_4 $$ String templateName = templateClass.getName()-->Line_4 $$ templateClass.getName()[ CD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_5 $$ int lastDot = templateName.lastIndexOf('.')[ CD ]
Line_5 $$ int lastDot = templateName.lastIndexOf('.')-->Line_5 $$ templateName.lastIndexOf('.')[ CD ]
Line_4 $$ String templateName = templateClass.getName()-->Line_5 $$ templateName.lastIndexOf('.')[ FD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_6 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")[ CD ]
Line_6 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")-->Line_6 $$ templateClass.getResource(templateName.substring(lastDot + 1) + ".class")[ CD ]
Line_4 $$ String templateName = templateClass.getName()-->Line_6 $$ templateName.substring(lastDot + 1)[ FD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_7 $$ java.net.URLConnection connection = url.openConnection()[ CD ]
Line_7 $$ java.net.URLConnection connection = url.openConnection()-->Line_7 $$ url.openConnection()[ CD ]
Line_6 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")-->Line_7 $$ url.openConnection()[ FD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_8 $$ int contentLength = connection.getContentLength()[ CD ]
Line_8 $$ int contentLength = connection.getContentLength()-->Line_8 $$ connection.getContentLength()[ CD ]
Line_7 $$ java.net.URLConnection connection = url.openConnection()-->Line_8 $$ connection.getContentLength()[ FD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_9 $$ if (contentLength < 0)
    throw new IOException("invalid content length " + contentLength);[ CD ]
Line_8 $$ int contentLength = connection.getContentLength()-->Line_9 $$ if (contentLength < 0)
    throw new IOException("invalid content length " + contentLength);[ FD ]
Line_3 $$ public void readClassFile(Class<?> templateClass) -->Line_11 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true);[ CD ]
Line_11 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true);-->Line_11 $$ IOUtils.readFully(connection.getInputStream(), contentLength, true)[ CD ]
Line_8 $$ int contentLength = connection.getContentLength()-->Line_11 $$ IOUtils.readFully(connection.getInputStream(), contentLength, true)[ FD ]
Line_7 $$ java.net.URLConnection connection = url.openConnection()-->Line_11 $$ connection.getInputStream()[ FD ]
