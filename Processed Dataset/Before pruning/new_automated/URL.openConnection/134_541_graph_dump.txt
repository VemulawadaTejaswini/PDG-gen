Line_0 $$ Entry-->Line_2 $$ //134
public class func [ CD ]
Line_2 $$ //134
public class func -->Line_3 $$ public void testAnonymousAllowed() [ CD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_4 $$ setAuthenticationHandlerConfig(getAuthenticationHandlerConfiguration(true))[ CD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_5 $$ start()[ CD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_6 $$ URL url = new URL(getBaseURL())[ CD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_6 $$ URL url = new URL(getBaseURL())-->Line_7 $$ url.openConnection()[ FD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_8 $$ conn.connect()[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.connect()[ FD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_9 $$ assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void testAnonymousAllowed() -->Line_10 $$ stop()[ CD ]
