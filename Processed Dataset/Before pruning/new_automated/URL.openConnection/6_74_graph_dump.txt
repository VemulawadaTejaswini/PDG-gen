Line_0 $$ Entry-->Line_2 $$ //6
public class func [ CD ]
Line_2 $$ //6
public class func -->Line_3 $$ public void copyResourcesRecursively(final URL originUrl, final File destination, FilenameFilter filter) [ CD ]
Line_3 $$ public void copyResourcesRecursively(final URL originUrl, final File destination, FilenameFilter filter) -->Line_4 $$ final URLConnection urlConnection = originUrl.openConnection()[ CD ]
Line_4 $$ final URLConnection urlConnection = originUrl.openConnection()-->Line_4 $$ originUrl.openConnection()[ CD ]
Line_3 $$ public void copyResourcesRecursively(final URL originUrl, final File destination, FilenameFilter filter) -->Line_5 $$ if (urlConnection instanceof JarURLConnection) [ CD ]
Line_4 $$ final URLConnection urlConnection = originUrl.openConnection()-->Line_5 $$ if (urlConnection instanceof JarURLConnection) [ FD ]
Line_5 $$ if (urlConnection instanceof JarURLConnection) -->Line_6 $$ return copyJarResourcesRecursively(destination, (JarURLConnection) urlConnection, filter);[ CD ]
Line_6 $$ return copyJarResourcesRecursively(destination, (JarURLConnection) urlConnection, filter);-->Line_6 $$ copyJarResourcesRecursively(destination, (JarURLConnection) urlConnection, filter)[ CD ]
Line_5 $$ if (urlConnection instanceof JarURLConnection) -->Line_8 $$ return copyFilesRecusively(new File(originUrl.getPath()), destination, filter);[ CD ]
Line_8 $$ return copyFilesRecusively(new File(originUrl.getPath()), destination, filter);-->Line_8 $$ copyFilesRecusively(new File(originUrl.getPath()), destination, filter)[ CD ]
