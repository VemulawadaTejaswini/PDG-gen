Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void testUrlFactory() [ CD ]
Line_3 $$ public void testUrlFactory() -->Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_4 $$ UrlFactory.getUrl("https://www.google.com", null)[ CD ]
Line_3 $$ public void testUrlFactory() -->Line_5 $$ Assert.assertEquals(HttpsUrlHandler.HTTPS, url.getProtocol())[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_5 $$ url.getProtocol()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_6 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_6 $$ url.openConnection()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_7 $$ UrlFactory.getUrl("HTTP://www.opennms.org", null)[ CD ]
Line_3 $$ public void testUrlFactory() -->Line_8 $$ Assert.assertEquals(HttpUrlHandler.HTTP, url.getProtocol())[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_8 $$ url.getProtocol()[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_8 $$ url.getProtocol()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_9 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_9 $$ url.openConnection()[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_9 $$ url.openConnection()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_10 $$ UrlFactory.getUrl("sftp://www.opennms.org", null)[ CD ]
Line_3 $$ public void testUrlFactory() -->Line_11 $$ Assert.assertEquals(SftpUrlHandler.PROTOCOL, url.getProtocol())[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_11 $$ url.getProtocol()[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_11 $$ url.getProtocol()[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_11 $$ url.getProtocol()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_12 $$ Assert.assertTrue(url.openConnection() instanceof SftpUrlConnection)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_12 $$ url.openConnection()[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_12 $$ url.openConnection()[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_12 $$ url.openConnection()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_13 $$ UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ CD ]
Line_3 $$ public void testUrlFactory() -->Line_14 $$ Assert.assertEquals(Sftp3gppUrlHandler.PROTOCOL, url.getProtocol())[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_14 $$ url.getProtocol()[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_14 $$ url.getProtocol()[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_14 $$ url.getProtocol()[ FD ]
Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_14 $$ url.getProtocol()[ FD ]
Line_3 $$ public void testUrlFactory() -->Line_15 $$ Assert.assertTrue(url.openConnection() instanceof Sftp3gppUrlConnection)[ CD ]
Line_4 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_15 $$ url.openConnection()[ FD ]
Line_7 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_15 $$ url.openConnection()[ FD ]
Line_10 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_15 $$ url.openConnection()[ FD ]
Line_13 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_15 $$ url.openConnection()[ FD ]
