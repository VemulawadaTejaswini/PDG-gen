Line_0 $$ Entry-->Line_2 $$ //355
public class func [ CD ]
Line_2 $$ //355
public class func -->Line_3 $$ public void checkValidMavenJarUrl(String url, String resource) [ CD ]
Line_3 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_4 $$ URL realUrl = followRedirects(new URL(url))[ CD ]
Line_4 $$ URL realUrl = followRedirects(new URL(url))-->Line_4 $$ followRedirects(new URL(url))[ CD ]
Line_3 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_5 $$ URLClassLoader classLoader = new URLClassLoader(new URL[] [ CD ]
Line_3 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_6 $$ URL innerU = classLoader.findResource(resource)[ CD ]
Line_6 $$ URL innerU = classLoader.findResource(resource)-->Line_6 $$ classLoader.findResource(resource)[ CD ]
Line_5 $$ URLClassLoader classLoader = new URLClassLoader(new URL[] -->Line_6 $$ classLoader.findResource(resource)[ FD ]
Line_3 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_7 $$ InputStream innerUin = innerU.openConnection().getInputStream()[ CD ]
Line_7 $$ InputStream innerUin = innerU.openConnection().getInputStream()-->Line_7 $$ innerU.openConnection().getInputStream()[ CD ]
Line_6 $$ URL innerU = classLoader.findResource(resource)-->Line_7 $$ innerU.openConnection()[ FD ]
Line_3 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_8 $$ innerUin.close()[ CD ]
Line_7 $$ InputStream innerUin = innerU.openConnection().getInputStream()-->Line_8 $$ innerUin.close()[ FD ]
