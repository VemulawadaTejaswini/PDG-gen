Line_0 $$ Entry-->Line_2 $$ //125
public class func [ CD ]
Line_2 $$ //125
public class func -->Line_3 $$ public void testNotAuthenticated() [ CD ]
Line_3 $$ public void testNotAuthenticated() -->Line_4 $$ auth.start()[ CD ]
Line_3 $$ public void testNotAuthenticated() -->Line_5 $$ URL url = new URL(auth.getBaseURL())[ CD ]
Line_3 $$ public void testNotAuthenticated() -->Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(auth.getBaseURL())-->Line_6 $$ url.openConnection()[ FD ]
Line_3 $$ public void testNotAuthenticated() -->Line_7 $$ conn.connect()[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.connect()[ FD ]
Line_3 $$ public void testNotAuthenticated() -->Line_8 $$ Assert.assertEquals(HttpURLConnection.HTTP_UNAUTHORIZED, conn.getResponseCode())[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void testNotAuthenticated() -->Line_9 $$ Assert.assertTrue(conn.getHeaderField(KerberosAuthenticator.WWW_AUTHENTICATE) != null)[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getHeaderField(KerberosAuthenticator.WWW_AUTHENTICATE)[ FD ]
Line_3 $$ public void testNotAuthenticated() -->Line_10 $$ auth.stop()[ CD ]
