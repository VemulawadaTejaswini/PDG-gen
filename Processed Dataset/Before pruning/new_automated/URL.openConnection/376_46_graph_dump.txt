Line_0 $$ Entry-->Line_2 $$ //376
public class func [ CD ]
Line_2 $$ //376
public class func -->Line_3 $$ public void checkWsdl(URL wsdlURL, String host) [ CD ]
Line_3 $$ public void checkWsdl(URL wsdlURL, String host) -->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()[ CD ]
Line_3 $$ public void checkWsdl(URL wsdlURL, String host) -->Line_5 $$ connection.connect()[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_5 $$ connection.connect()[ FD ]
Line_3 $$ public void checkWsdl(URL wsdlURL, String host) -->Line_6 $$ Assert.assertEquals(200, connection.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_6 $$ connection.getResponseCode()[ FD ]
Line_3 $$ public void checkWsdl(URL wsdlURL, String host) -->Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) wsdlURL.openConnection()-->Line_7 $$ connection.getInputStream()[ FD ]
Line_3 $$ public void checkWsdl(URL wsdlURL, String host) -->Line_8 $$ while ((line = in.readLine()) != null) [ CD ]
Line_3 $$ public void checkWsdl(URL wsdlURL, String host) -->Line_3 $$ public void checkWsdl(URL wsdlURL, String host) [ CD ]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_8 $$ in.readLine()[ FD ]
Line_8 $$ while ((line = in.readLine()) != null) -->Line_9 $$ if (line.contains("address location")) [ CD ]
Line_9 $$ if (line.contains("address location")) -->Line_9 $$ line.contains("address location")[ CD ]
Line_9 $$ if (line.contains("address location")) -->Line_10 $$ Assert.assertTrue(line.contains(host))[ CD ]
Line_9 $$ if (line.contains("address location")) -->Line_11 $$ return;[ CD ]
