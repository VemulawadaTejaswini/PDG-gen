Line_0 $$ Entry-->Line_2 $$ //364
public class func [ CD ]
Line_2 $$ //364
public class func -->Line_3 $$ public void call() [ CD ]
Line_3 $$ public void call() -->Line_4 $$ final String id = bundleJobBean.getId()[ CD ]
Line_4 $$ final String id = bundleJobBean.getId()-->Line_4 $$ bundleJobBean.getId()[ CD ]
Line_3 $$ public void call() -->Line_5 $$ URL url = createURL(id, params)[ CD ]
Line_5 $$ URL url = createURL(id, params)-->Line_5 $$ createURL(id, params)[ CD ]
Line_4 $$ final String id = bundleJobBean.getId()-->Line_5 $$ createURL(id, params)[ FD ]
Line_3 $$ public void call() -->Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_5 $$ URL url = createURL(id, params)-->Line_6 $$ url.openConnection()[ FD ]
Line_3 $$ public void call() -->Line_7 $$ conn.setRequestMethod("GET")[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.setRequestMethod("GET")[ FD ]
Line_3 $$ public void call() -->Line_8 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void call() -->Line_9 $$ assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE))[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getHeaderField("content-type")[ FD ]
Line_3 $$ public void call() -->Line_10 $$ JSONObject obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void call() -->Line_11 $$ assertEquals(id, obj.get("bundleJobId"))[ CD ]
Line_4 $$ final String id = bundleJobBean.getId()-->Line_11 $$ assertEquals(id, obj.get("bundleJobId"))[ FD ]
Line_10 $$ JSONObject obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))-->Line_11 $$ obj.get("bundleJobId")[ FD ]
