Line_0 $$ Entry-->Line_2 $$ //75
public class func [ CD ]
Line_2 $$ //75
public class func -->Line_3 $$ public void getFromHTTP(String url) [ CD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_4 $$ URL u = new URL(url)[ CD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_5 $$ LOG.info("Accessing URL " + url + " as URL: " + u)[ CD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()[ CD ]
Line_4 $$ URL u = new URL(url)-->Line_6 $$ u.openConnection()[ FD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_7 $$ connection.setConnectTimeout(100000)[ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_7 $$ connection.setConnectTimeout(100000)[ FD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_8 $$ connection.connect()[ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_8 $$ connection.connect()[ FD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_9 $$ if (connection.getResponseCode() >= 400) [ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_9 $$ connection.getResponseCode()[ FD ]
Line_9 $$ if (connection.getResponseCode() >= 400) -->Line_11 $$ LOG.warn("HTTP Response code when connecting to [ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_11 $$ connection.getResponseCode()[ FD ]
Line_9 $$ if (connection.getResponseCode() >= 400) -->Line_12 $$ connection.getErrorStream()[ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_12 $$ connection.getErrorStream()[ FD ]
Line_9 $$ if (connection.getResponseCode() >= 400) -->Line_14 $$ connection.getInputStream()[ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_14 $$ connection.getInputStream()[ FD ]
Line_3 $$ public void getFromHTTP(String url) -->Line_16 $$ return IOUtils.toString(is, connection.getContentEncoding() != null ? connection.getContentEncoding() : "UTF-8");[ CD ]
Line_16 $$ return IOUtils.toString(is, connection.getContentEncoding() != null ? connection.getContentEncoding() : "UTF-8");-->Line_16 $$ IOUtils.toString(is, connection.getContentEncoding() != null ? connection.getContentEncoding() : "UTF-8")[ CD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_16 $$ connection.getContentEncoding()[ FD ]
Line_6 $$ HttpURLConnection connection = (HttpURLConnection) u.openConnection()-->Line_16 $$ connection.getContentEncoding()[ FD ]
