Line_0 $$ Entry-->Line_2 $$ //366
public class func [ CD ]
Line_2 $$ //366
public class func -->Line_3 $$ public void call() [ CD ]
Line_3 $$ public void call() -->Line_4 $$ Map<String, String> map = new HashMap<String, String>()[ CD ]
Line_3 $$ public void call() -->Line_5 $$ map.put(RestConstants.SHARE_LIB_REQUEST_KEY, "pig")[ CD ]
Line_4 $$ Map<String, String> map = new HashMap<String, String>()-->Line_5 $$ map.put(RestConstants.SHARE_LIB_REQUEST_KEY, "pig")[ FD ]
Line_3 $$ public void call() -->Line_6 $$ URL url = createURL(RestConstants.ADMIN_LIST_SHARELIB, map)[ CD ]
Line_6 $$ URL url = createURL(RestConstants.ADMIN_LIST_SHARELIB, map)-->Line_6 $$ createURL(RestConstants.ADMIN_LIST_SHARELIB, map)[ CD ]
Line_4 $$ Map<String, String> map = new HashMap<String, String>()-->Line_6 $$ createURL(RestConstants.ADMIN_LIST_SHARELIB, map)[ FD ]
Line_3 $$ public void call() -->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_6 $$ URL url = createURL(RestConstants.ADMIN_LIST_SHARELIB, map)-->Line_7 $$ url.openConnection()[ FD ]
Line_3 $$ public void call() -->Line_8 $$ conn.setRequestMethod("GET")[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.setRequestMethod("GET")[ FD ]
Line_3 $$ public void call() -->Line_9 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void call() -->Line_10 $$ assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE))[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getHeaderField("content-type")[ FD ]
Line_3 $$ public void call() -->Line_11 $$ JSONObject json = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void call() -->Line_12 $$ assertEquals(null, json.get(JsonTags.SHARELIB_LIB))[ CD ]
Line_11 $$ JSONObject json = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))-->Line_12 $$ json.get(JsonTags.SHARELIB_LIB)[ FD ]
