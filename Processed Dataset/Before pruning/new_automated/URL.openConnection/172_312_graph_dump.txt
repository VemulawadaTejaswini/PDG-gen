Line_0 $$ Entry-->Line_2 $$ //172
public class func [ CD ]
Line_2 $$ //172
public class func -->Line_3 $$ public void testPingUsingHttpURLConnection() [ CD ]
Line_3 $$ public void testPingUsingHttpURLConnection() -->Line_4 $$ final URL url = new URL("http://" + SERVER_HOST + ":" + webServerPort + "/ping")[ CD ]
Line_3 $$ public void testPingUsingHttpURLConnection() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ final URL url = new URL("http://" + SERVER_HOST + ":" + webServerPort + "/ping")-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testPingUsingHttpURLConnection() -->Line_6 $$ Assert.assertEquals(HttpURLConnection.HTTP_UNAUTHORIZED, conn.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void testPingUsingHttpURLConnection() -->Line_7 $$ String errorMessage = IOUtils.toString(conn.getErrorStream())[ CD ]
Line_7 $$ String errorMessage = IOUtils.toString(conn.getErrorStream())-->Line_7 $$ IOUtils.toString(conn.getErrorStream())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.getErrorStream()[ FD ]
Line_3 $$ public void testPingUsingHttpURLConnection() -->Line_8 $$ Assert.assertTrue(errorMessage.contains("Authentication required"))[ CD ]
Line_7 $$ String errorMessage = IOUtils.toString(conn.getErrorStream())-->Line_8 $$ errorMessage.contains("Authentication required")[ FD ]
