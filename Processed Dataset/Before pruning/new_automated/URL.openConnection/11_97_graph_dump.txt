Line_0 $$ Entry-->Line_2 $$ //11
public class func [ CD ]
Line_2 $$ //11
public class func -->Line_3 $$ public void loadJarContent(URL url) [ CD ]
Line_3 $$ public void loadJarContent(URL url) -->Line_4 $$ final JarURLConnection uc = (JarURLConnection) url.openConnection()[ CD ]
Line_3 $$ public void loadJarContent(URL url) -->Line_5 $$ final JarEntry jarEntry = uc.getJarEntry()[ CD ]
Line_5 $$ final JarEntry jarEntry = uc.getJarEntry()-->Line_5 $$ uc.getJarEntry()[ CD ]
Line_4 $$ final JarURLConnection uc = (JarURLConnection) url.openConnection()-->Line_5 $$ uc.getJarEntry()[ FD ]
Line_3 $$ public void loadJarContent(URL url) -->Line_6 $$ if (jarEntry != null) [ CD ]
Line_5 $$ final JarEntry jarEntry = uc.getJarEntry()-->Line_6 $$ if (jarEntry != null) [ FD ]
Line_6 $$ if (jarEntry != null) -->Line_8 $$ if (logger.isLoggable(Level.FINEST))
    logger.finest(dump(jarEntry));[ CD ]
Line_8 $$ if (logger.isLoggable(Level.FINEST))
    logger.finest(dump(jarEntry));-->Line_8 $$ logger.isLoggable(Level.FINEST)[ CD ]
Line_8 $$ if (logger.isLoggable(Level.FINEST))
    logger.finest(dump(jarEntry));-->Line_9 $$ logger.finest(dump(jarEntry))[ CD ]
Line_5 $$ final JarEntry jarEntry = uc.getJarEntry()-->Line_9 $$ dump(jarEntry)[ FD ]
Line_6 $$ if (jarEntry != null) -->Line_11 $$ return NetworkUtil.download(uc.getInputStream(), jarEntry.getSize(), null);[ CD ]
Line_11 $$ return NetworkUtil.download(uc.getInputStream(), jarEntry.getSize(), null);-->Line_11 $$ NetworkUtil.download(uc.getInputStream(), jarEntry.getSize(), null)[ CD ]
Line_4 $$ final JarURLConnection uc = (JarURLConnection) url.openConnection()-->Line_11 $$ uc.getInputStream()[ FD ]
Line_5 $$ final JarEntry jarEntry = uc.getJarEntry()-->Line_11 $$ jarEntry.getSize()[ FD ]
