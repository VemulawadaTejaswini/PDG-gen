Line_0 $$ Entry-->Line_2 $$ //543
public class func [ CD ]
Line_2 $$ //543
public class func -->Line_3 $$ public void slurp(final URL url) [ CD ]
Line_3 $$ public void slurp(final URL url) -->Line_4 $$ final HttpURLConnection urlConnection = HttpURLConnection.class.cast(url.openConnection())[ CD ]
Line_4 $$ final HttpURLConnection urlConnection = HttpURLConnection.class.cast(url.openConnection())-->Line_4 $$ HttpURLConnection.class.cast(url.openConnection())[ CD ]
Line_3 $$ public void slurp(final URL url) -->Line_5 $$ urlConnection.setRequestProperty("Accept", "text/plain")[ CD ]
Line_4 $$ final HttpURLConnection urlConnection = HttpURLConnection.class.cast(url.openConnection())-->Line_5 $$ urlConnection.setRequestProperty("Accept", "text/plain")[ FD ]
Line_3 $$ public void slurp(final URL url) -->Line_6 $$ return IO.slurp(urlConnection.getInputStream());[ CD ]
Line_6 $$ return IO.slurp(urlConnection.getInputStream());-->Line_6 $$ IO.slurp(urlConnection.getInputStream())[ CD ]
Line_4 $$ final HttpURLConnection urlConnection = HttpURLConnection.class.cast(url.openConnection())-->Line_6 $$ urlConnection.getInputStream()[ FD ]
Line_3 $$ public void slurp(final URL url) -->Line_7 $$ urlConnection.disconnect()[ CD ]
Line_4 $$ final HttpURLConnection urlConnection = HttpURLConnection.class.cast(url.openConnection())-->Line_7 $$ urlConnection.disconnect()[ FD ]
