Line_0 $$ Entry-->Line_2 $$ //74
public class func [ CD ]
Line_2 $$ //74
public class func -->Line_3 $$ public void returns_all_threads_in_child_thread_groups() [ CD ]
Line_3 $$ public void returns_all_threads_in_child_thread_groups() -->Line_4 $$ Thread threadInChild = new Thread(child, new LongRunningTask())[ CD ]
Line_3 $$ public void returns_all_threads_in_child_thread_groups() -->Line_5 $$ threadInChild.start()[ CD ]
Line_4 $$ Thread threadInChild = new Thread(child, new LongRunningTask())-->Line_5 $$ threadInChild.start()[ FD ]
Line_3 $$ public void returns_all_threads_in_child_thread_groups() -->Line_6 $$ assertThat(Threads.getActiveThreads(parent), containsInAnyOrder(threadInChild))[ CD ]
Line_4 $$ Thread threadInChild = new Thread(child, new LongRunningTask())-->Line_6 $$ containsInAnyOrder(threadInChild)[ FD ]
Line_3 $$ public void returns_all_threads_in_child_thread_groups() -->Line_7 $$ threadInChild.interrupt()[ CD ]
Line_4 $$ Thread threadInChild = new Thread(child, new LongRunningTask())-->Line_7 $$ threadInChild.interrupt()[ FD ]
