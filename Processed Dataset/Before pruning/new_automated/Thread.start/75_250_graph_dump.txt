Line_0 $$ Entry-->Line_2 $$ //75
public class func [ CD ]
Line_2 $$ //75
public class func -->Line_3 $$ public void returns_all_threads_in_a_thread_group() [ CD ]
Line_3 $$ public void returns_all_threads_in_a_thread_group() -->Line_4 $$ Thread thread = new Thread(group, new LongRunningTask())[ CD ]
Line_3 $$ public void returns_all_threads_in_a_thread_group() -->Line_5 $$ thread.start()[ CD ]
Line_4 $$ Thread thread = new Thread(group, new LongRunningTask())-->Line_5 $$ thread.start()[ FD ]
Line_3 $$ public void returns_all_threads_in_a_thread_group() -->Line_6 $$ assertThat(Threads.getActiveThreads(group), containsInAnyOrder(thread))[ CD ]
Line_4 $$ Thread thread = new Thread(group, new LongRunningTask())-->Line_6 $$ containsInAnyOrder(thread)[ FD ]
Line_3 $$ public void returns_all_threads_in_a_thread_group() -->Line_7 $$ thread.interrupt()[ CD ]
Line_4 $$ Thread thread = new Thread(group, new LongRunningTask())-->Line_7 $$ thread.interrupt()[ FD ]
