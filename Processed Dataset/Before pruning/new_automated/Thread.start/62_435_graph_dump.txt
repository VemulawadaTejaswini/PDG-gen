Line_0 $$ Entry-->Line_2 $$ //62
public class func [ CD ]
Line_2 $$ //62
public class func -->Line_3 $$ public void processDatanodesForShutdown(Collection<Thread> threads) [ CD ]
Line_3 $$ public void processDatanodesForShutdown(Collection<Thread> threads) -->Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) [ CD ]
Line_3 $$ public void processDatanodesForShutdown(Collection<Thread> threads) -->Line_3 $$ public void processDatanodesForShutdown(Collection<Thread> threads) [ CD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_4 $$ dataNodes.size()[ CD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_4 $$ int i = 0[ CD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_4 $$ i++[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_5 $$ LOG.info("Shutting down data node " + i)[ CD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_6 $$ Thread st = new Thread(new ShutDownUtil(dataNodes.get(i)))[ CD ]
Line_4 $$ int i = 0-->Line_6 $$ dataNodes.get(i)[ FD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_7 $$ st.start()[ CD ]
Line_6 $$ Thread st = new Thread(new ShutDownUtil(dataNodes.get(i)))-->Line_7 $$ st.start()[ FD ]
Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) -->Line_8 $$ threads.add(st)[ CD ]
Line_6 $$ Thread st = new Thread(new ShutDownUtil(dataNodes.get(i)))-->Line_8 $$ threads.add(st)[ FD ]
Line_4 $$ int i = 0-->Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) [ FD ]
Line_4 $$ int i = 0-->Line_4 $$ for (int i = 0; i < dataNodes.size(); i++) [ FD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
Line_4 $$ int i = 0-->Line_6 $$ dataNodes.get(i)[ FD ]
Line_6 $$ Thread st = new Thread(new ShutDownUtil(dataNodes.get(i)))-->Line_7 $$ st.start()[ FD ]
Line_6 $$ Thread st = new Thread(new ShutDownUtil(dataNodes.get(i)))-->Line_8 $$ threads.add(st)[ FD ]
