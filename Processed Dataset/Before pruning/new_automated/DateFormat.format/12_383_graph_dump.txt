Line_0 $$ Entry-->Line_2 $$ //12
public class func [ CD ]
Line_2 $$ //12
public class func -->Line_3 $$ public void dateConverterShouldAcceptStringAndNumeric() [ CD ]
Line_3 $$ public void dateConverterShouldAcceptStringAndNumeric() -->Line_4 $$ String strDate = df.format(new Date(now))[ CD ]
Line_4 $$ String strDate = df.format(new Date(now))-->Line_4 $$ df.format(new Date(now))[ CD ]
Line_3 $$ public void dateConverterShouldAcceptStringAndNumeric() -->Line_5 $$ Date date2 = genson.deserialize(String.format("\"%s\"", strDate), Date.class)[ CD ]
Line_5 $$ Date date2 = genson.deserialize(String.format("\"%s\"", strDate), Date.class)-->Line_5 $$ genson.deserialize(String.format("\"%s\"", strDate), Date.class)[ CD ]
Line_4 $$ String strDate = df.format(new Date(now))-->Line_5 $$ String.format("\"%s\"", strDate)[ FD ]
Line_3 $$ public void dateConverterShouldAcceptStringAndNumeric() -->Line_6 $$ assertEquals(strDate, df.format(date2))[ CD ]
Line_4 $$ String strDate = df.format(new Date(now))-->Line_6 $$ assertEquals(strDate, df.format(date2))[ FD ]
Line_5 $$ Date date2 = genson.deserialize(String.format("\"%s\"", strDate), Date.class)-->Line_6 $$ df.format(date2)[ FD ]
