Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void createWrappedInstance() [ CD ]
Line_3 $$ public void createWrappedInstance() -->Line_4 $$ ClassLoader cl = Main.createShadowClassLoader()[ CD ]
Line_4 $$ ClassLoader cl = Main.createShadowClassLoader()-->Line_4 $$ Main.createShadowClassLoader()[ CD ]
Line_3 $$ public void createWrappedInstance() -->Line_5 $$ Class<?> mc = cl.loadClass("lombok.core.AnnotationProcessor")[ CD ]
Line_5 $$ Class<?> mc = cl.loadClass("lombok.core.AnnotationProcessor")-->Line_5 $$ cl.loadClass("lombok.core.AnnotationProcessor")[ CD ]
Line_4 $$ ClassLoader cl = Main.createShadowClassLoader()-->Line_5 $$ cl.loadClass("lombok.core.AnnotationProcessor")[ FD ]
Line_3 $$ public void createWrappedInstance() -->Line_6 $$ return (AbstractProcessor) mc.newInstance();[ CD ]
Line_5 $$ Class<?> mc = cl.loadClass("lombok.core.AnnotationProcessor")-->Line_6 $$ mc.newInstance()[ FD ]
