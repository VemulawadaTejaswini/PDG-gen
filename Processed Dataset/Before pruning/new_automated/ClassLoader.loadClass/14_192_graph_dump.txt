Line_0 $$ Entry-->Line_2 $$ //14
public class func [ CD ]
Line_2 $$ //14
public class func -->Line_3 $$ public void loadWithCustomClassLoader(String className) [ CD ]
Line_3 $$ public void loadWithCustomClassLoader(String className) -->Line_4 $$ URL thisClass = this.getClass().getResource(this.getClass().getSimpleName() + ".class")[ CD ]
Line_4 $$ URL thisClass = this.getClass().getResource(this.getClass().getSimpleName() + ".class")-->Line_4 $$ this.getClass().getResource(this.getClass().getSimpleName() + ".class")[ CD ]
Line_3 $$ public void loadWithCustomClassLoader(String className) -->Line_5 $$ ClassLoader customClassLoader = new URLClassLoader(new URL[] [ CD ]
Line_3 $$ public void loadWithCustomClassLoader(String className) -->Line_6 $$ Class<?> customInstanceFromDifferentClassLoader = customClassLoader.loadClass(className)[ CD ]
Line_6 $$ Class<?> customInstanceFromDifferentClassLoader = customClassLoader.loadClass(className)-->Line_6 $$ customClassLoader.loadClass(className)[ CD ]
Line_5 $$ ClassLoader customClassLoader = new URLClassLoader(new URL[] -->Line_6 $$ customClassLoader.loadClass(className)[ FD ]
Line_3 $$ public void loadWithCustomClassLoader(String className) -->Line_7 $$ return customInstanceFromDifferentClassLoader.newInstance();[ CD ]
Line_7 $$ return customInstanceFromDifferentClassLoader.newInstance();-->Line_7 $$ customInstanceFromDifferentClassLoader.newInstance()[ CD ]
Line_6 $$ Class<?> customInstanceFromDifferentClassLoader = customClassLoader.loadClass(className)-->Line_7 $$ customInstanceFromDifferentClassLoader.newInstance()[ FD ]
