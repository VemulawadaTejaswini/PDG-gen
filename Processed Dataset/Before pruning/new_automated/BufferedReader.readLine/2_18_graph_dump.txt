Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void readObject(InputStream stream) [ CD ]
Line_3 $$ public void readObject(InputStream stream) -->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream, "UTF-8"))[ CD ]
Line_3 $$ public void readObject(InputStream stream) -->Line_5 $$ String prolog = reader.readLine()[ CD ]
Line_5 $$ String prolog = reader.readLine()-->Line_5 $$ reader.readLine()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream, "UTF-8"))-->Line_5 $$ reader.readLine()[ FD ]
Line_3 $$ public void readObject(InputStream stream) -->Line_6 $$ if ("Yes, this is MySerializationStrategy!".equals(prolog)) [ CD ]
Line_5 $$ String prolog = reader.readLine()-->Line_6 $$ if ("Yes, this is MySerializationStrategy!".equals(prolog)) [ FD ]
Line_6 $$ if ("Yes, this is MySerializationStrategy!".equals(prolog)) -->Line_6 $$ "Yes, this is MySerializationStrategy!".equals(prolog)[ CD ]
Line_5 $$ String prolog = reader.readLine()-->Line_6 $$ "Yes, this is MySerializationStrategy!".equals(prolog)[ FD ]
Line_6 $$ if ("Yes, this is MySerializationStrategy!".equals(prolog)) -->Line_7 $$ String contents = reader.readLine()[ CD ]
Line_7 $$ String contents = reader.readLine()-->Line_7 $$ reader.readLine()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream, "UTF-8"))-->Line_7 $$ reader.readLine()[ FD ]
Line_6 $$ if ("Yes, this is MySerializationStrategy!".equals(prolog)) -->Line_8 $$ return new StringBuffer(contents);[ CD ]
