Line_0 $$ Entry-->Line_2 $$ //4
public class func [ CD ]
Line_2 $$ //4
public class func -->Line_3 $$ public void readBase(final BufferedReader reader) [ CD ]
Line_3 $$ public void readBase(final BufferedReader reader) -->Line_4 $$ final String line = reader.readLine()[ CD ]
Line_4 $$ final String line = reader.readLine()-->Line_4 $$ reader.readLine()[ CD ]
Line_3 $$ public void readBase(final BufferedReader reader) -->Line_5 $$ if (line == null) [ CD ]
Line_4 $$ final String line = reader.readLine()-->Line_5 $$ if (line == null) [ FD ]
Line_5 $$ if (line == null) -->Line_6 $$ return null;[ CD ]
Line_3 $$ public void readBase(final BufferedReader reader) -->Line_8 $$ final Matcher matcher = basePattern.matcher(line)[ CD ]
Line_8 $$ final Matcher matcher = basePattern.matcher(line)-->Line_8 $$ basePattern.matcher(line)[ CD ]
Line_4 $$ final String line = reader.readLine()-->Line_8 $$ basePattern.matcher(line)[ FD ]
Line_3 $$ public void readBase(final BufferedReader reader) -->Line_9 $$ if (!matcher.matches()) [ CD ]
Line_9 $$ if (!matcher.matches()) -->Line_9 $$ !matcher.matches()[ CD ]
Line_9 $$ !matcher.matches()-->Line_9 $$ matcher.matches()[ CD ]
Line_8 $$ final Matcher matcher = basePattern.matcher(line)-->Line_9 $$ matcher.matches()[ FD ]
Line_3 $$ public void readBase(final BufferedReader reader) -->Line_12 $$ return matcher.group(1);[ CD ]
Line_12 $$ return matcher.group(1);-->Line_12 $$ matcher.group(1)[ CD ]
Line_8 $$ final Matcher matcher = basePattern.matcher(line)-->Line_12 $$ matcher.group(1)[ FD ]
