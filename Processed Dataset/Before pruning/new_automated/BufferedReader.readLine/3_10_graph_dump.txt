Line_0 $$ Entry-->Line_2 $$ //3
public class func [ CD ]
Line_2 $$ //3
public class func -->Line_3 $$ public void getFeatureUnit(BufferedReader featureReader) [ CD ]
Line_3 $$ public void getFeatureUnit(BufferedReader featureReader) -->Line_4 $$ String line = featureReader.readLine()[ CD ]
Line_4 $$ String line = featureReader.readLine()-->Line_4 $$ featureReader.readLine()[ CD ]
Line_3 $$ public void getFeatureUnit(BufferedReader featureReader) -->Line_5 $$ if (line == null)
    return null;[ CD ]
Line_4 $$ String line = featureReader.readLine()-->Line_5 $$ if (line == null)
    return null;[ FD ]
Line_5 $$ if (line == null)
    return null;-->Line_6 $$ return null;[ CD ]
Line_3 $$ public void getFeatureUnit(BufferedReader featureReader) -->Line_7 $$ if (line.trim().equals(""))
    // empty line -- signal end of section
    return "";[ CD ]
Line_7 $$ if (line.trim().equals(""))
    // empty line -- signal end of section
    return "";-->Line_7 $$ line.trim().equals("")[ CD ]
Line_4 $$ String line = featureReader.readLine()-->Line_7 $$ line.trim()[ FD ]
Line_7 $$ if (line.trim().equals(""))
    // empty line -- signal end of section
    return "";-->Line_8 $$ // empty line -- signal end of section
return "";[ CD ]
Line_3 $$ public void getFeatureUnit(BufferedReader featureReader) -->Line_9 $$ StringTokenizer st = new StringTokenizer(line.trim())[ CD ]
Line_4 $$ String line = featureReader.readLine()-->Line_9 $$ line.trim()[ FD ]
Line_3 $$ public void getFeatureUnit(BufferedReader featureReader) -->Line_10 $$ return st.nextToken();[ CD ]
Line_10 $$ return st.nextToken();-->Line_10 $$ st.nextToken()[ CD ]
Line_9 $$ StringTokenizer st = new StringTokenizer(line.trim())-->Line_10 $$ st.nextToken()[ FD ]
