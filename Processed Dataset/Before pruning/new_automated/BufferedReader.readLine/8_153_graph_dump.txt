Line_0 $$ Entry-->Line_2 $$ //8
public class func [ CD ]
Line_2 $$ //8
public class func -->Line_3 $$ public void test_readLine_interaction_with_read() [ CD ]
Line_3 $$ public void test_readLine_interaction_with_read() -->Line_4 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))[ CD ]
Line_3 $$ public void test_readLine_interaction_with_read() -->Line_5 $$ assertEquals('1', r.read())[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_5 $$ r.read()[ FD ]
Line_3 $$ public void test_readLine_interaction_with_read() -->Line_6 $$ assertEquals('\r', r.read())[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_6 $$ r.read()[ FD ]
Line_3 $$ public void test_readLine_interaction_with_read() -->Line_7 $$ assertEquals("", r.readLine())[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_7 $$ r.readLine()[ FD ]
Line_3 $$ public void test_readLine_interaction_with_read() -->Line_8 $$ assertEquals("2", r.readLine())[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_8 $$ r.readLine()[ FD ]
Line_3 $$ public void test_readLine_interaction_with_read() -->Line_9 $$ assertNull(r.readLine())[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new StringReader("1\r\n2"))-->Line_9 $$ r.readLine()[ FD ]
