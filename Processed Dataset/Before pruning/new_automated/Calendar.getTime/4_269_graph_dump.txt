Line_0 $$ Entry-->Line_2 $$ //4
public class func [ CD ]
Line_2 $$ //4
public class func -->Line_3 $$ public void testInterlining() [ CD ]
Line_3 $$ public void testInterlining() -->Line_4 $$ calendar.setTimeZone(TimeZone.getTimeZone("America/New_York"))[ CD ]
Line_3 $$ public void testInterlining() -->Line_5 $$ long time = calendar.getTime().getTime() / 1000[ CD ]
Line_3 $$ public void testInterlining() -->Line_6 $$ Leg[] legs = plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)[ CD ]
Line_6 $$ Leg[] legs = plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)-->Line_6 $$ plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)[ CD ]
Line_5 $$ long time = calendar.getTime().getTime() / 1000-->Line_6 $$ plan(time, "stop0", "stop3", null, false, false, null, null, null, 2)[ FD ]
Line_3 $$ public void testInterlining() -->Line_7 $$ assertEquals(legs[1].routeId, "route1")[ CD ]
Line_3 $$ public void testInterlining() -->Line_8 $$ assertTrue(itinerary.transfers == 0)[ CD ]
