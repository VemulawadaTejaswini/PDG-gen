Line_0 $$ Entry-->Line_2 $$ //18
public class func [ CD ]
Line_2 $$ //18
public class func -->Line_3 $$ public void testGitDirPathNoGit() [ CD ]
Line_3 $$ public void testGitDirPathNoGit() -->Line_4 $$ createWorkspace(SimpleMetaStore.DEFAULT_WORKSPACE_NAME)[ CD ]
Line_3 $$ public void testGitDirPathNoGit() -->Line_5 $$ JSONObject project = createProjectOrLink(workspaceLocation, getMethodName().concat("Project"), null)[ CD ]
Line_5 $$ JSONObject project = createProjectOrLink(workspaceLocation, getMethodName().concat("Project"), null)-->Line_5 $$ createProjectOrLink(workspaceLocation, getMethodName().concat("Project"), null)[ CD ]
Line_3 $$ public void testGitDirPathNoGit() -->Line_6 $$ String location = project.getString(ProtocolConstants.KEY_CONTENT_LOCATION)[ CD ]
Line_6 $$ String location = project.getString(ProtocolConstants.KEY_CONTENT_LOCATION)-->Line_6 $$ project.getString(ProtocolConstants.KEY_CONTENT_LOCATION)[ CD ]
Line_5 $$ JSONObject project = createProjectOrLink(workspaceLocation, getMethodName().concat("Project"), null)-->Line_6 $$ project.getString(ProtocolConstants.KEY_CONTENT_LOCATION)[ FD ]
Line_3 $$ public void testGitDirPathNoGit() -->Line_7 $$ URI uri = URI.create(location)[ CD ]
Line_7 $$ URI uri = URI.create(location)-->Line_7 $$ URI.create(location)[ CD ]
Line_6 $$ String location = project.getString(ProtocolConstants.KEY_CONTENT_LOCATION)-->Line_7 $$ URI.create(location)[ FD ]
Line_3 $$ public void testGitDirPathNoGit() -->Line_8 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath()))[ CD ]
Line_8 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath()))-->Line_8 $$ GitUtils.getGitDir(new Path(uri.getPath()))[ CD ]
Line_7 $$ URI uri = URI.create(location)-->Line_8 $$ uri.getPath()[ FD ]
Line_3 $$ public void testGitDirPathNoGit() -->Line_9 $$ assertNull(dir == null ? "N/A" : dir.toURI().toURL().toString(), dir)[ CD ]
Line_8 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath()))-->Line_9 $$ assertNull(dir == null ? "N/A" : dir.toURI().toURL().toString(), dir)[ FD ]
Line_8 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath()))-->Line_9 $$ dir.toURI()[ FD ]
