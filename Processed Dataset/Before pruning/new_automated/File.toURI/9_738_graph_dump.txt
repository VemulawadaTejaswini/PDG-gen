Line_0 $$ Entry-->Line_2 $$ //9
public class func [ CD ]
Line_2 $$ //9
public class func -->Line_3 $$ public void getTestBundleURL(String artifactName, String baseName, String version) [ CD ]
Line_3 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_4 $$ assertNotNull("Version cannot be null!", version)[ CD ]
Line_3 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_5 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))[ CD ]
Line_3 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_6 $$ assertTrue("No such bundle: " + f, f.exists() && f.isFile())[ CD ]
Line_5 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))-->Line_6 $$ f.exists()[ FD ]
Line_5 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))-->Line_6 $$ f.isFile()[ FD ]
Line_3 $$ public void getTestBundleURL(String artifactName, String baseName, String version) -->Line_7 $$ return f.toURI().toURL();[ CD ]
Line_7 $$ return f.toURI().toURL();-->Line_7 $$ f.toURI().toURL()[ CD ]
Line_5 $$ File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version))-->Line_7 $$ f.toURI()[ FD ]
