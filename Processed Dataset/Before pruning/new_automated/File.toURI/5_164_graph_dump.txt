Line_0 $$ Entry-->Line_2 $$ //5
public class func [ CD ]
Line_2 $$ //5
public class func -->Line_3 $$ public void isPatternFoundInClasspath(List<String> elements, Pattern pattern) [ CD ]
Line_3 $$ public void isPatternFoundInClasspath(List<String> elements, Pattern pattern) -->Line_4 $$ if (elements != null) [ CD ]
Line_6 $$ Matcher m = pattern.matcher(new File(e).toURI().toString())-->Line_6 $$ pattern.matcher(new File(e).toURI().toString())[ CD ]
Line_6 $$ Matcher m = pattern.matcher(new File(e).toURI().toString())-->Line_7 $$ if (m.matches())
    return true;[ FD ]
Line_7 $$ if (m.matches())
    return true;-->Line_7 $$ m.matches()[ CD ]
Line_6 $$ Matcher m = pattern.matcher(new File(e).toURI().toString())-->Line_7 $$ m.matches()[ FD ]
Line_7 $$ if (m.matches())
    return true;-->Line_8 $$ return true;[ CD ]
