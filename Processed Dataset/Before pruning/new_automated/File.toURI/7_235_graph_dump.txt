Line_0 $$ Entry-->Line_2 $$ //7
public class func [ CD ]
Line_2 $$ //7
public class func -->Line_3 $$ public void getLocalUrl(MavenArtifact artifact) [ CD ]
Line_3 $$ public void getLocalUrl(MavenArtifact artifact) -->Line_4 $$ if (isInstalledLocally(artifact))
    return new File(getLocalPath(artifact)).toURI().toString();[ CD ]
Line_4 $$ if (isInstalledLocally(artifact))
    return new File(getLocalPath(artifact)).toURI().toString();-->Line_4 $$ isInstalledLocally(artifact)[ CD ]
Line_4 $$ if (isInstalledLocally(artifact))
    return new File(getLocalPath(artifact)).toURI().toString();-->Line_4 $$ return new File(getLocalPath(artifact)).toURI().toString();[ CD ]
Line_4 $$ return new File(getLocalPath(artifact)).toURI().toString();-->Line_4 $$ new File(getLocalPath(artifact)).toURI().toString()[ CD ]
Line_3 $$ public void getLocalUrl(MavenArtifact artifact) -->Line_5 $$ if (artifact.isSnapshot())
    return snapshotUrlGenerator.apply(artifact);
else
    return releaseUrlGenerator.apply(artifact);[ CD ]
Line_5 $$ if (artifact.isSnapshot())
    return snapshotUrlGenerator.apply(artifact);
else
    return releaseUrlGenerator.apply(artifact);-->Line_5 $$ artifact.isSnapshot()[ CD ]
Line_5 $$ if (artifact.isSnapshot())
    return snapshotUrlGenerator.apply(artifact);
else
    return releaseUrlGenerator.apply(artifact);-->Line_5 $$ return snapshotUrlGenerator.apply(artifact);[ CD ]
Line_5 $$ return snapshotUrlGenerator.apply(artifact);-->Line_5 $$ snapshotUrlGenerator.apply(artifact)[ CD ]
Line_5 $$ if (artifact.isSnapshot())
    return snapshotUrlGenerator.apply(artifact);
else
    return releaseUrlGenerator.apply(artifact);-->Line_6 $$ return releaseUrlGenerator.apply(artifact);[ CD ]
Line_6 $$ return releaseUrlGenerator.apply(artifact);-->Line_6 $$ releaseUrlGenerator.apply(artifact)[ CD ]
