Line_0 $$ Entry-->Line_2 $$ //147
public class func [ CD ]
Line_2 $$ //147
public class func -->Line_3 $$ public void testLocal() [ CD ]
Line_3 $$ public void testLocal() -->Line_4 $$ File file = new File("output/rafsink/test1.bin")[ CD ]
Line_3 $$ public void testLocal() -->Line_5 $$ URI uri = file.toURI()[ CD ]
Line_5 $$ URI uri = file.toURI()-->Line_5 $$ file.toURI()[ CD ]
Line_4 $$ File file = new File("output/rafsink/test1.bin")-->Line_5 $$ file.toURI()[ FD ]
Line_3 $$ public void testLocal() -->Line_6 $$ URIDataFileSink sink = new URIDataFileSink(uri, "test1.bin", file)[ CD ]
Line_3 $$ public void testLocal() -->Line_7 $$ doTest(sink, false)[ CD ]
Line_6 $$ URIDataFileSink sink = new URIDataFileSink(uri, "test1.bin", file)-->Line_7 $$ doTest(sink, false)[ FD ]
Line_3 $$ public void testLocal() -->Line_8 $$ URIDataFileSource src = new URIDataFileSource(uri)[ CD ]
Line_3 $$ public void testLocal() -->Line_9 $$ assertTrue("data", Arrays.equals(m_data, src.getFileBytes()))[ CD ]
Line_8 $$ URIDataFileSource src = new URIDataFileSource(uri)-->Line_9 $$ src.getFileBytes()[ FD ]
