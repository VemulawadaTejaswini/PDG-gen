Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void generateRecursive(GenerationConfig config, SchemaMapper mapper, JCodeModel codeModel, String packageName, List<File> schemaFiles) [ CD ]
Line_3 $$ public void generateRecursive(GenerationConfig config, SchemaMapper mapper, JCodeModel codeModel, String packageName, List<File> schemaFiles) -->Line_4 $$ Collections.sort(schemaFiles)[ CD ]
Line_5 $$ File child-->Line_6 $$ if (child.isFile()) [ FD ]
Line_6 $$ if (child.isFile()) -->Line_6 $$ child.isFile()[ CD ]
Line_5 $$ File child-->Line_6 $$ child.isFile()[ FD ]
Line_6 $$ if (child.isFile()) -->Line_7 $$ mapper.generate(codeModel, getNodeName(child.toURI().toURL()), defaultString(packageName), child.toURI().toURL())[ CD ]
Line_5 $$ File child-->Line_7 $$ child.toURI()[ FD ]
Line_5 $$ File child-->Line_7 $$ child.toURI()[ FD ]
Line_6 $$ if (child.isFile()) -->Line_9 $$ generateRecursive(config, mapper, codeModel, childQualifiedName(packageName, child.getName()), Arrays.asList(child.listFiles(config.getFileFilter())))[ CD ]
Line_5 $$ File child-->Line_9 $$ child.getName()[ FD ]
Line_5 $$ File child-->Line_9 $$ child.listFiles(config.getFileFilter())[ FD ]
