Line_0 $$ Entry-->Line_2 $$ //18
public class func [ CD ]
Line_2 $$ //18
public class func -->Line_3 $$ public void test_connectLjava_net_SocketAddressI() [ CD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_4 $$ Socket client = new Socket()[ CD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_5 $$ client.connect(boundAddress, 0)[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_5 $$ client.connect(boundAddress, 0)[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_6 $$ assertTrue("Wrong connected status", client.isConnected())[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_6 $$ client.isConnected()[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_7 $$ assertFalse("Wrong closed status", client.isClosed())[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_7 $$ client.isClosed()[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_8 $$ assertTrue("Wrong bound status", client.isBound())[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_8 $$ client.isBound()[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_9 $$ assertFalse("Wrong input shutdown status", client.isInputShutdown())[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_9 $$ client.isInputShutdown()[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_10 $$ assertFalse("Wrong output shutdown status", client.isOutputShutdown())[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_10 $$ client.isOutputShutdown()[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_11 $$ assertTrue("Local port was 0", client.getLocalPort() != 0)[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_11 $$ client.getLocalPort()[ FD ]
Line_3 $$ public void test_connectLjava_net_SocketAddressI() -->Line_12 $$ client.close()[ CD ]
Line_4 $$ Socket client = new Socket()-->Line_12 $$ client.close()[ FD ]
