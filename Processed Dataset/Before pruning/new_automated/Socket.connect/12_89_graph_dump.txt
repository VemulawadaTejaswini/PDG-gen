Line_0 $$ Entry-->Line_2 $$ //12
public class func [ CD ]
Line_2 $$ //12
public class func -->Line_3 $$ public void streamBlockInAscii(InetSocketAddress addr, int namespaceId, long blockId, long genStamp, long blockSize, long offsetIntoBlock, long chunkSizeToView, JspWriter out) [ CD ]
Line_3 $$ public void streamBlockInAscii(InetSocketAddress addr, int namespaceId, long blockId, long genStamp, long blockSize, long offsetIntoBlock, long chunkSizeToView, JspWriter out) -->Line_4 $$ Socket s = new Socket()[ CD ]
Line_3 $$ public void streamBlockInAscii(InetSocketAddress addr, int namespaceId, long blockId, long genStamp, long blockSize, long offsetIntoBlock, long chunkSizeToView, JspWriter out) -->Line_5 $$ s.connect(addr, HdfsConstants.READ_TIMEOUT)[ CD ]
Line_4 $$ Socket s = new Socket()-->Line_5 $$ s.connect(addr, HdfsConstants.READ_TIMEOUT)[ FD ]
Line_3 $$ public void streamBlockInAscii(InetSocketAddress addr, int namespaceId, long blockId, long genStamp, long blockSize, long offsetIntoBlock, long chunkSizeToView, JspWriter out) -->Line_6 $$ s.setSoTimeout(HdfsConstants.READ_TIMEOUT)[ CD ]
Line_4 $$ Socket s = new Socket()-->Line_6 $$ s.setSoTimeout(HdfsConstants.READ_TIMEOUT)[ FD ]
