Line_0 $$ Entry-->Line_2 $$ //66
public class func [ CD ]
Line_2 $$ //66
public class func -->Line_3 $$ public void getOrCreateSocket(boolean resend) [ CD ]
Line_3 $$ public void getOrCreateSocket(boolean resend) -->Line_4 $$ Utilities.close(socket)[ CD ]
Line_3 $$ public void getOrCreateSocket(boolean resend) -->Line_5 $$ if (socket == null || socket.isClosed()) [ CD ]
Line_7 $$ if (proxy == null) -->Line_8 $$ factory.createSocket(host, port)[ CD ]
Line_7 $$ if (proxy == null) -->Line_9 $$ logger.debug("Connected new socket [ CD ]
Line_7 $$ if (proxy == null) -->Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) [ CD ]
Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) -->Line_11 $$ TlsTunnelBuilder tunnelBuilder = new TlsTunnelBuilder()[ CD ]
Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) -->Line_12 $$ tunnelBuilder.build((SSLSocketFactory) factory, proxy, proxyUsername, proxyPassword, host, port)[ CD ]
Line_11 $$ TlsTunnelBuilder tunnelBuilder = new TlsTunnelBuilder()-->Line_12 $$ tunnelBuilder.build((SSLSocketFactory) factory, proxy, proxyUsername, proxyPassword, host, port)[ FD ]
Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) -->Line_13 $$ logger.debug("Connected new socket through http tunnel [ CD ]
Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) -->Line_15 $$ boolean success = false[ CD ]
Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) -->Line_16 $$ Socket proxySocket = null[ CD ]
Line_16 $$ Socket proxySocket = null-->Line_18 $$ proxySocket = new Socket(proxy)[ FD ]
Line_18 $$ proxySocket = new Socket(proxy)-->Line_18 $$ proxySocket = new Socket(proxy)[ FD ]
Line_16 $$ Socket proxySocket = null-->Line_19 $$ proxySocket.connect(new InetSocketAddress(host, port), connectTimeout)[ FD ]
Line_18 $$ proxySocket = new Socket(proxy)-->Line_19 $$ proxySocket.connect(new InetSocketAddress(host, port), connectTimeout)[ FD ]
Line_16 $$ Socket proxySocket = null-->Line_20 $$ ((SSLSocketFactory) factory).createSocket(proxySocket, host, port, false)[ FD ]
Line_18 $$ proxySocket = new Socket(proxy)-->Line_20 $$ ((SSLSocketFactory) factory).createSocket(proxySocket, host, port, false)[ FD ]
Line_15 $$ boolean success = false-->Line_21 $$ success = true[ FD ]
Line_21 $$ success = true-->Line_21 $$ success = true[ FD ]
Line_15 $$ boolean success = false-->Line_23 $$ if (!success) [ FD ]
Line_21 $$ success = true-->Line_23 $$ if (!success) [ FD ]
Line_23 $$ if (!success) -->Line_23 $$ !success[ CD ]
Line_15 $$ boolean success = false-->Line_23 $$ !success[ FD ]
Line_21 $$ success = true-->Line_23 $$ !success[ FD ]
Line_23 $$ if (!success) -->Line_24 $$ Utilities.close(proxySocket)[ CD ]
Line_16 $$ Socket proxySocket = null-->Line_24 $$ Utilities.close(proxySocket)[ FD ]
Line_18 $$ proxySocket = new Socket(proxy)-->Line_24 $$ Utilities.close(proxySocket)[ FD ]
Line_10 $$ if (proxy.type() == Proxy.Type.HTTP) -->Line_27 $$ logger.debug("Connected new socket through socks tunnel [ CD ]
Line_33 $$ if (errorDetection) -->Line_34 $$ monitorSocket(socket)[ CD ]
