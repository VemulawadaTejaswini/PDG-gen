Line_0 $$ Entry-->Line_2 $$ //14
public class func [ CD ]
Line_2 $$ //14
public class func -->Line_3 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) [ CD ]
Line_3 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_4 $$ sslfac.createSocket(host, port, localAddress, localPort)[ CD ]
Line_3 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_5 $$ socket.bind(localaddr)[ CD ]
Line_3 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_6 $$ socket.connect(remoteaddr, timeout)[ CD ]
Line_3 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_7 $$ setSocket(socket)[ CD ]
Line_3 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_8 $$ return wrapSocket(socket);[ CD ]
Line_8 $$ return wrapSocket(socket);-->Line_8 $$ wrapSocket(socket)[ CD ]
