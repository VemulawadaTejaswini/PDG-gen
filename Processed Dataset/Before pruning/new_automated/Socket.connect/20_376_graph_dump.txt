Line_0 $$ Entry-->Line_2 $$ //20
public class func [ CD ]
Line_2 $$ //20
public class func -->Line_3 $$ public void main(String args[]) [ CD ]
Line_3 $$ public void main(String args[]) -->Line_4 $$ int port = Integer.parseInt(portStr)[ CD ]
Line_4 $$ int port = Integer.parseInt(portStr)-->Line_4 $$ Integer.parseInt(portStr)[ CD ]
Line_3 $$ public void main(String args[]) -->Line_5 $$ socket.connect(new InetSocketAddress("127.0.0.1", port), 9 * 1000)[ CD ]
Line_3 $$ public void main(String args[]) -->Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()))[ CD ]
Line_3 $$ public void main(String args[]) -->Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream(), "utf-8"))[ CD ]
Line_3 $$ public void main(String args[]) -->Line_8 $$ for (int i = 0; i < 90; i++) [ CD ]
Line_3 $$ public void main(String args[]) -->Line_3 $$ public void main(String args[]) [ CD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_8 $$ int i = 0[ CD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_8 $$ i++[ CD ]
Line_8 $$ int i = 0-->Line_8 $$ i++[ FD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_10 $$ out.write("[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()))-->Line_10 $$ out.write("[ FD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_11 $$ out.newLine()[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()))-->Line_11 $$ out.newLine()[ FD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_12 $$ out.flush()[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()))-->Line_12 $$ out.flush()[ FD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_13 $$ String line = in.readLine()[ CD ]
Line_13 $$ String line = in.readLine()-->Line_13 $$ in.readLine()[ CD ]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream(), "utf-8"))-->Line_13 $$ in.readLine()[ FD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_14 $$ if (line.equalsIgnoreCase("getelement")) [ CD ]
Line_13 $$ String line = in.readLine()-->Line_14 $$ if (line.equalsIgnoreCase("getelement")) [ FD ]
Line_14 $$ if (line.equalsIgnoreCase("getelement")) -->Line_14 $$ line.equalsIgnoreCase("getelement")[ CD ]
Line_13 $$ String line = in.readLine()-->Line_14 $$ line.equalsIgnoreCase("getelement")[ FD ]
Line_14 $$ if (line.equalsIgnoreCase("getelement")) -->Line_16 $$ System.out.print("getelement")[ CD ]
Line_8 $$ for (int i = 0; i < 90; i++) -->Line_19 $$ Thread.sleep(100)[ CD ]
Line_8 $$ int i = 0-->Line_8 $$ for (int i = 0; i < 90; i++) [ FD ]
Line_8 $$ int i = 0-->Line_8 $$ for (int i = 0; i < 90; i++) [ FD ]
Line_8 $$ int i = 0-->Line_8 $$ i++[ FD ]
Line_13 $$ String line = in.readLine()-->Line_14 $$ if (line.equalsIgnoreCase("getelement")) [ FD ]
Line_13 $$ String line = in.readLine()-->Line_14 $$ line.equalsIgnoreCase("getelement")[ FD ]
