Line_0 $$ Entry-->Line_2 $$ //141
public class func [ CD ]
Line_2 $$ //141
public class func -->Line_3 $$ public void validateRemoteDomain(Element doc, StreamID streamID) [ CD ]
Line_3 $$ public void validateRemoteDomain(Element doc, StreamID streamID) -->Line_4 $$ for (Iterator<DNSUtil.HostAddress> it = hosts.iterator(); it.hasNext(); ) [ CD ]
Line_3 $$ public void validateRemoteDomain(Element doc, StreamID streamID) -->Line_3 $$ public void validateRemoteDomain(Element doc, StreamID streamID) [ CD ]
Line_4 $$ for (Iterator<DNSUtil.HostAddress> it = hosts.iterator(); it.hasNext(); ) -->Line_4 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()[ CD ]
Line_4 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_4 $$ hosts.iterator()[ CD ]
Line_4 $$ for (Iterator<DNSUtil.HostAddress> it = hosts.iterator(); it.hasNext(); ) -->Line_4 $$ it.hasNext()[ CD ]
Line_4 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_4 $$ it.hasNext()[ FD ]
Line_6 $$ DNSUtil.HostAddress address = it.next()-->Line_6 $$ it.next()[ CD ]
Line_4 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_6 $$ it.next()[ FD ]
Line_6 $$ DNSUtil.HostAddress address = it.next()-->Line_7 $$ address.getHost()[ FD ]
Line_6 $$ DNSUtil.HostAddress address = it.next()-->Line_8 $$ address.getPort()[ FD ]
Line_4 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_4 $$ it.hasNext()[ FD ]
Line_4 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_6 $$ it.next()[ FD ]
Line_6 $$ DNSUtil.HostAddress address = it.next()-->Line_7 $$ address.getHost()[ FD ]
Line_6 $$ DNSUtil.HostAddress address = it.next()-->Line_8 $$ address.getPort()[ FD ]
