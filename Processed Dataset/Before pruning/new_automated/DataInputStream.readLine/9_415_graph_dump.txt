Line_0 $$ Entry-->Line_2 $$ //9
public class func [ CD ]
Line_2 $$ //9
public class func -->Line_3 $$ public void getStreamLines(final InputStream is) [ CD ]
Line_3 $$ public void getStreamLines(final InputStream is) -->Line_4 $$ DataInputStream dis = new DataInputStream(is)[ CD ]
Line_3 $$ public void getStreamLines(final InputStream is) -->Line_5 $$ if (dis.available() > 0) [ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_5 $$ dis.available()[ FD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_7 $$ dis.readLine()[ FD ]
Line_5 $$ if (dis.available() > 0) -->Line_8 $$ while (dis.available() > 0) [ CD ]
Line_5 $$ if (dis.available() > 0) -->Line_5 $$ if (dis.available() > 0) [ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_8 $$ dis.available()[ FD ]
Line_8 $$ while (dis.available() > 0) -->Line_10 $$ buffer.append('\n').append(dis.readLine())[ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_10 $$ dis.readLine()[ FD ]
Line_3 $$ public void getStreamLines(final InputStream is) -->Line_13 $$ dis.close()[ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_13 $$ dis.close()[ FD ]
