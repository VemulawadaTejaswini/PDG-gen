Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void HttpInputStream(InputStream in) [ CD ]
Line_3 $$ public void HttpInputStream(InputStream in) -->Line_4 $$ do [ CD ]
Line_3 $$ public void HttpInputStream(InputStream in) -->Line_3 $$ public void HttpInputStream(InputStream in) [ CD ]
Line_4 $$ do -->Line_5 $$ dis.readLine()[ CD ]
Line_4 $$ do -->Line_7 $$ if (RMIMasterSocketFactory.proxyLog.isLoggable(Log.VERBOSE)) [ CD ]
Line_7 $$ if (RMIMasterSocketFactory.proxyLog.isLoggable(Log.VERBOSE)) -->Line_7 $$ RMIMasterSocketFactory.proxyLog.isLoggable(Log.VERBOSE)[ CD ]
Line_7 $$ if (RMIMasterSocketFactory.proxyLog.isLoggable(Log.VERBOSE)) -->Line_8 $$ RMIMasterSocketFactory.proxyLog.log(Log.VERBOSE, "received header line: \"" + line + "\"")[ CD ]
Line_4 $$ do -->Line_12 $$ if (line == null)
    throw new EOFException();[ CD ]
Line_4 $$ do -->Line_15 $$ if (line.toLowerCase().startsWith(key)) [ CD ]
Line_15 $$ if (line.toLowerCase().startsWith(key)) -->Line_15 $$ line.toLowerCase().startsWith(key)[ CD ]
Line_15 $$ if (line.toLowerCase().startsWith(key)) -->Line_16 $$ if (contentLengthFound)
    // what would we want to do in this case??
    ;[ CD ]
Line_15 $$ if (line.toLowerCase().startsWith(key)) -->Line_19 $$ Integer.parseInt(line.substring(key.length()).trim())[ CD ]
Line_3 $$ public void HttpInputStream(InputStream in) -->Line_30 $$ if (!contentLengthFound || bytesLeft < 0) [ CD ]
