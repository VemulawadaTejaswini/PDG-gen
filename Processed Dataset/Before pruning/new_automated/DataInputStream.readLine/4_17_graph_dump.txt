Line_0 $$ Entry-->Line_2 $$ //4
public class func [ CD ]
Line_2 $$ //4
public class func -->Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) [ CD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_4 $$ String cmd = in.readLine()[ CD ]
Line_4 $$ String cmd = in.readLine()-->Line_4 $$ in.readLine()[ CD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_5 $$ while (cmd.indexOf("\0$") != -1) [ CD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) [ CD ]
Line_4 $$ String cmd = in.readLine()-->Line_5 $$ cmd.indexOf("\0$")[ FD ]
Line_5 $$ while (cmd.indexOf("\0$") != -1) -->Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.substring(0, cmd.indexOf("\0$"))[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_6 $$ cmd.substring(0, cmd.indexOf("\0$"))[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.indexOf("\0$")[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_6 $$ cmd.indexOf("\0$")[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.substring(cmd.indexOf("\0$") + 2)[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_6 $$ cmd.substring(cmd.indexOf("\0$") + 2)[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.indexOf("\0$")[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_6 $$ cmd.indexOf("\0$")[ FD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_8 $$ if (cmd.length() == 0) [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_8 $$ cmd.length()[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_8 $$ cmd.length()[ FD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_11 $$ int pos = cmd.indexOf(' ')[ CD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_11 $$ cmd.indexOf(' ')[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_11 $$ cmd.indexOf(' ')[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_11 $$ cmd.indexOf(' ')[ FD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_12 $$ if (pos != -1) [ CD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_12 $$ if (pos != -1) [ FD ]
Line_12 $$ if (pos != -1) -->Line_13 $$ cmd.substring(pos + 1)[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_13 $$ cmd.substring(pos + 1)[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_13 $$ cmd.substring(pos + 1)[ FD ]
Line_12 $$ if (pos != -1) -->Line_14 $$ cmd = cmd.substring(0, pos)[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_14 $$ cmd = cmd.substring(0, pos)[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_14 $$ cmd = cmd.substring(0, pos)[ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_14 $$ cmd = cmd.substring(0, pos)[ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_14 $$ cmd.substring(0, pos)[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_14 $$ cmd.substring(0, pos)[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_14 $$ cmd.substring(0, pos)[ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_14 $$ cmd.substring(0, pos)[ FD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_14 $$ cmd.substring(0, pos)[ FD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_16 $$ cmd = cmd.toLowerCase().intern()[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_16 $$ cmd = cmd.toLowerCase().intern()[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_16 $$ cmd = cmd.toLowerCase().intern()[ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_16 $$ cmd = cmd.toLowerCase().intern()[ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_16 $$ cmd = cmd.toLowerCase().intern()[ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_16 $$ cmd.toLowerCase().intern()[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_16 $$ cmd.toLowerCase()[ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_16 $$ cmd.toLowerCase()[ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_16 $$ cmd.toLowerCase()[ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_16 $$ cmd.toLowerCase()[ FD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_17 $$ if (cmd == "cd" || cmd == "cat" || cmd == "paste") [ CD ]
Line_17 $$ if (cmd == "cd" || cmd == "cat" || cmd == "paste") -->Line_19 $$ if (!fp.isAbsolute())
    fp = new File(pwd, params);[ CD ]
Line_19 $$ if (!fp.isAbsolute())
    fp = new File(pwd, params);-->Line_19 $$ !fp.isAbsolute()[ CD ]
Line_19 $$ !fp.isAbsolute()-->Line_19 $$ fp.isAbsolute()[ CD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_22 $$ if (cmd == "info") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_22 $$ if (cmd == "info") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_22 $$ if (cmd == "info") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_22 $$ if (cmd == "info") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_22 $$ if (cmd == "info") [ FD ]
Line_22 $$ if (cmd == "info") -->Line_23 $$ if (params.length() == 0) [ CD ]
Line_23 $$ if (params.length() == 0) -->Line_24 $$ final Enumeration e = System.getProperties().propertyNames()[ CD ]
Line_24 $$ final Enumeration e = System.getProperties().propertyNames()-->Line_24 $$ System.getProperties().propertyNames()[ CD ]
Line_23 $$ if (params.length() == 0) -->Line_25 $$ while (e.hasMoreElements()) [ CD ]
Line_23 $$ if (params.length() == 0) -->Line_23 $$ if (params.length() == 0) [ CD ]
Line_25 $$ while (e.hasMoreElements()) -->Line_25 $$ e.hasMoreElements()[ CD ]
Line_24 $$ final Enumeration e = System.getProperties().propertyNames()-->Line_25 $$ e.hasMoreElements()[ FD ]
Line_25 $$ while (e.hasMoreElements()) -->Line_26 $$ final String property = (String) e.nextElement()[ CD ]
Line_24 $$ final Enumeration e = System.getProperties().propertyNames()-->Line_26 $$ e.nextElement()[ FD ]
Line_25 $$ while (e.hasMoreElements()) -->Line_27 $$ pout.println(property + "=" + System.getProperty(property))[ CD ]
Line_26 $$ final String property = (String) e.nextElement()-->Line_27 $$ System.getProperty(property)[ FD ]
Line_23 $$ if (params.length() == 0) -->Line_30 $$ pout.println(params + "=" + System.getProperty(params))[ CD ]
Line_22 $$ if (cmd == "info") -->Line_32 $$ if (cmd == "pwd") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_32 $$ if (cmd == "pwd") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_32 $$ if (cmd == "pwd") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_32 $$ if (cmd == "pwd") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_32 $$ if (cmd == "pwd") [ FD ]
Line_32 $$ if (cmd == "pwd") -->Line_33 $$ pout.println(pwd.getPath())[ CD ]
Line_32 $$ if (cmd == "pwd") -->Line_34 $$ if (cmd == "cd") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_34 $$ if (cmd == "cd") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_34 $$ if (cmd == "cd") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_34 $$ if (cmd == "cd") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_34 $$ if (cmd == "cd") [ FD ]
Line_34 $$ if (cmd == "cd") -->Line_35 $$ if (fp.exists() && fp.isDirectory()) [ CD ]
Line_35 $$ if (fp.exists() && fp.isDirectory()) -->Line_36 $$ fp.getCanonicalFile()[ CD ]
Line_35 $$ if (fp.exists() && fp.isDirectory()) -->Line_38 $$ pout.println("Path not found.")[ CD ]
Line_34 $$ if (cmd == "cd") -->Line_40 $$ pout.println(pwd.getPath())[ CD ]
Line_34 $$ if (cmd == "cd") -->Line_41 $$ if (cmd == "ls") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_41 $$ if (cmd == "ls") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_41 $$ if (cmd == "ls") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_41 $$ if (cmd == "ls") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_41 $$ if (cmd == "ls") [ FD ]
Line_41 $$ if (cmd == "ls") -->Line_42 $$ final File[] roots = File.listRoots()[ CD ]
Line_42 $$ final File[] roots = File.listRoots()-->Line_42 $$ File.listRoots()[ CD ]
Line_41 $$ if (cmd == "ls") -->Line_43 $$ for (int i = 0; i < roots.length; i++) [ CD ]
Line_41 $$ if (cmd == "ls") -->Line_41 $$ if (cmd == "ls") [ CD ]
Line_43 $$ for (int i = 0; i < roots.length; i++) -->Line_43 $$ int i = 0[ CD ]
Line_43 $$ for (int i = 0; i < roots.length; i++) -->Line_43 $$ i++[ CD ]
Line_43 $$ int i = 0-->Line_43 $$ i++[ FD ]
Line_43 $$ for (int i = 0; i < roots.length; i++) -->Line_44 $$ pout.println(roots[i].getAbsolutePath() + "\t[ROOT]")[ CD ]
Line_41 $$ if (cmd == "ls") -->Line_46 $$ pout.println()[ CD ]
Line_41 $$ if (cmd == "ls") -->Line_47 $$ final File[] dir = pwd.listFiles()[ CD ]
Line_47 $$ final File[] dir = pwd.listFiles()-->Line_47 $$ pwd.listFiles()[ CD ]
Line_41 $$ if (cmd == "ls") -->Line_48 $$ for (int i = 0; i < dir.length; i++) [ CD ]
Line_41 $$ if (cmd == "ls") -->Line_41 $$ if (cmd == "ls") [ CD ]
Line_43 $$ int i = 0-->Line_48 $$ for (int i = 0; i < dir.length; i++) [ FD ]
Line_48 $$ for (int i = 0; i < dir.length; i++) -->Line_48 $$ int i = 0[ CD ]
Line_48 $$ for (int i = 0; i < dir.length; i++) -->Line_48 $$ i++[ CD ]
Line_48 $$ int i = 0-->Line_48 $$ i++[ FD ]
Line_43 $$ int i = 0-->Line_48 $$ i++[ FD ]
Line_48 $$ for (int i = 0; i < dir.length; i++) -->Line_49 $$ pout.println(dir[i].getName() + "\t" + (dir[i].isDirectory() ? "[DIR]" : "" + dir[i].length()) + "\t" + new SimpleDateFormat("yyyy-MM-dd HH:mm").format(new Date(dir[i].lastModified())))[ CD ]
Line_41 $$ if (cmd == "ls") -->Line_51 $$ if (cmd == "exec") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_51 $$ if (cmd == "exec") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_51 $$ if (cmd == "exec") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_51 $$ if (cmd == "exec") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_51 $$ if (cmd == "exec") [ FD ]
Line_51 $$ if (cmd == "exec") -->Line_52 $$ Process proc[ CD ]
Line_51 $$ if (cmd == "exec") -->Line_53 $$ handleBackgroundJob(in, new Object[] [ CD ]
Line_52 $$ Process proc-->Line_53 $$ proc = Runtime.getRuntime().exec(params)[ FD ]
Line_53 $$ proc = Runtime.getRuntime().exec(params)-->Line_53 $$ proc = Runtime.getRuntime().exec(params)[ FD ]
Line_53 $$ proc = Runtime.getRuntime().exec(params)-->Line_53 $$ Runtime.getRuntime().exec(params)[ CD ]
Line_52 $$ Process proc-->Line_53 $$ proc.getOutputStream()[ FD ]
Line_53 $$ proc = Runtime.getRuntime().exec(params)-->Line_53 $$ proc.getOutputStream()[ FD ]
Line_52 $$ Process proc-->Line_53 $$ proc.getInputStream()[ FD ]
Line_53 $$ proc = Runtime.getRuntime().exec(params)-->Line_53 $$ proc.getInputStream()[ FD ]
Line_52 $$ Process proc-->Line_53 $$ proc.getErrorStream()[ FD ]
Line_53 $$ proc = Runtime.getRuntime().exec(params)-->Line_53 $$ proc.getErrorStream()[ FD ]
Line_51 $$ if (cmd == "exec") -->Line_54 $$ if (cmd == "cat") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_54 $$ if (cmd == "cat") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_54 $$ if (cmd == "cat") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_54 $$ if (cmd == "cat") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_54 $$ if (cmd == "cat") [ FD ]
Line_54 $$ if (cmd == "cat") -->Line_55 $$ final FileInputStream fis = new FileInputStream(fp)[ CD ]
Line_54 $$ if (cmd == "cat") -->Line_56 $$ forward(fis, pout)[ CD ]
Line_55 $$ final FileInputStream fis = new FileInputStream(fp)-->Line_56 $$ forward(fis, pout)[ FD ]
Line_54 $$ if (cmd == "cat") -->Line_57 $$ if (cmd == "wget") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_57 $$ if (cmd == "wget") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_57 $$ if (cmd == "wget") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_57 $$ if (cmd == "wget") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_57 $$ if (cmd == "wget") [ FD ]
Line_57 $$ if (cmd == "wget") -->Line_58 $$ pos = params.indexOf(' ')[ CD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_58 $$ pos = params.indexOf(' ')[ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_58 $$ pos = params.indexOf(' ')[ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_58 $$ params.indexOf(' ')[ CD ]
Line_57 $$ if (cmd == "wget") -->Line_59 $$ if (pos == -1) [ CD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_59 $$ if (pos == -1) [ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_59 $$ if (pos == -1) [ FD ]
Line_59 $$ if (pos == -1) -->Line_60 $$ pout.println("  Usage: wget <URL> <filename>")[ CD ]
Line_59 $$ if (pos == -1) -->Line_62 $$ File f = new File(params.substring(pos + 1))[ CD ]
Line_59 $$ if (pos == -1) -->Line_63 $$ if (!f.isAbsolute())
    f = new File(pwd, params.substring(pos + 1));[ CD ]
Line_63 $$ if (!f.isAbsolute())
    f = new File(pwd, params.substring(pos + 1));-->Line_63 $$ !f.isAbsolute()[ CD ]
Line_63 $$ !f.isAbsolute()-->Line_63 $$ f.isAbsolute()[ CD ]
Line_62 $$ File f = new File(params.substring(pos + 1))-->Line_63 $$ f.isAbsolute()[ FD ]
Line_63 $$ if (!f.isAbsolute())
    f = new File(pwd, params.substring(pos + 1));-->Line_64 $$ f = new File(pwd, params.substring(pos + 1))[ CD ]
Line_62 $$ File f = new File(params.substring(pos + 1))-->Line_64 $$ f = new File(pwd, params.substring(pos + 1))[ FD ]
Line_64 $$ f = new File(pwd, params.substring(pos + 1))-->Line_64 $$ f = new File(pwd, params.substring(pos + 1))[ FD ]
Line_59 $$ if (pos == -1) -->Line_65 $$ final FileOutputStream fos = new FileOutputStream(f)[ CD ]
Line_59 $$ if (pos == -1) -->Line_66 $$ forward(new URL(params.substring(0, pos)).openStream(), fos)[ CD ]
Line_65 $$ final FileOutputStream fos = new FileOutputStream(f)-->Line_66 $$ forward(new URL(params.substring(0, pos)).openStream(), fos)[ FD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_66 $$ params.substring(0, pos)[ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_66 $$ params.substring(0, pos)[ FD ]
Line_59 $$ if (pos == -1) -->Line_67 $$ fos.close()[ CD ]
Line_65 $$ final FileOutputStream fos = new FileOutputStream(f)-->Line_67 $$ fos.close()[ FD ]
Line_57 $$ if (cmd == "wget") -->Line_69 $$ if (cmd == "telnet") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_69 $$ if (cmd == "telnet") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_69 $$ if (cmd == "telnet") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_69 $$ if (cmd == "telnet") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_69 $$ if (cmd == "telnet") [ FD ]
Line_69 $$ if (cmd == "telnet") -->Line_70 $$ pos = params.indexOf(' ')[ CD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_70 $$ pos = params.indexOf(' ')[ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_70 $$ pos = params.indexOf(' ')[ FD ]
Line_70 $$ pos = params.indexOf(' ')-->Line_70 $$ pos = params.indexOf(' ')[ FD ]
Line_70 $$ pos = params.indexOf(' ')-->Line_70 $$ params.indexOf(' ')[ CD ]
Line_69 $$ if (cmd == "telnet") -->Line_71 $$ if (pos == -1) [ CD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_71 $$ if (pos == -1) [ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_71 $$ if (pos == -1) [ FD ]
Line_70 $$ pos = params.indexOf(' ')-->Line_71 $$ if (pos == -1) [ FD ]
Line_71 $$ if (pos == -1) -->Line_72 $$ pout.println("  Usage: telnet <host> <port>")[ CD ]
Line_71 $$ if (pos == -1) -->Line_74 $$ Socket s[ CD ]
Line_71 $$ if (pos == -1) -->Line_75 $$ handleBackgroundJob(in, new Object[] [ CD ]
Line_74 $$ Socket s-->Line_75 $$ s = new Socket(params.substring(0, pos), Integer.parseInt(params.substring(pos + 1)))[ FD ]
Line_75 $$ s = new Socket(params.substring(0, pos), Integer.parseInt(params.substring(pos + 1)))-->Line_75 $$ s = new Socket(params.substring(0, pos), Integer.parseInt(params.substring(pos + 1)))[ FD ]
Line_11 $$ int pos = cmd.indexOf(' ')-->Line_75 $$ params.substring(0, pos)[ FD ]
Line_58 $$ pos = params.indexOf(' ')-->Line_75 $$ params.substring(0, pos)[ FD ]
Line_70 $$ pos = params.indexOf(' ')-->Line_75 $$ params.substring(0, pos)[ FD ]
Line_74 $$ Socket s-->Line_75 $$ s.getOutputStream()[ FD ]
Line_75 $$ s = new Socket(params.substring(0, pos), Integer.parseInt(params.substring(pos + 1)))-->Line_75 $$ s.getOutputStream()[ FD ]
Line_74 $$ Socket s-->Line_75 $$ s.getInputStream()[ FD ]
Line_75 $$ s = new Socket(params.substring(0, pos), Integer.parseInt(params.substring(pos + 1)))-->Line_75 $$ s.getInputStream()[ FD ]
Line_69 $$ if (cmd == "telnet") -->Line_77 $$ if (cmd == "paste") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_77 $$ if (cmd == "paste") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_77 $$ if (cmd == "paste") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_77 $$ if (cmd == "paste") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_77 $$ if (cmd == "paste") [ FD ]
Line_77 $$ if (cmd == "paste") -->Line_79 $$ handleBackgroundJob(in, new Object[] [ CD ]
Line_65 $$ final FileOutputStream fos = new FileOutputStream(f)-->Line_79 $$ fos = new FileOutputStream(fp)[ FD ]
Line_79 $$ fos = new FileOutputStream(fp)-->Line_79 $$ fos = new FileOutputStream(fp)[ FD ]
Line_77 $$ if (cmd == "paste") -->Line_80 $$ if (cmd == "jobs") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_80 $$ if (cmd == "jobs") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_80 $$ if (cmd == "jobs") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_80 $$ if (cmd == "jobs") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_80 $$ if (cmd == "jobs") [ FD ]
Line_80 $$ if (cmd == "jobs") -->Line_81 $$ if (params.length() == 0) [ CD ]
Line_81 $$ if (params.length() == 0) -->Line_82 $$ for (int i = 0; i < jobs.size(); i++) [ CD ]
Line_81 $$ if (params.length() == 0) -->Line_81 $$ if (params.length() == 0) [ CD ]
Line_48 $$ int i = 0-->Line_82 $$ for (int i = 0; i < jobs.size(); i++) [ FD ]
Line_43 $$ int i = 0-->Line_82 $$ for (int i = 0; i < jobs.size(); i++) [ FD ]
Line_82 $$ for (int i = 0; i < jobs.size(); i++) -->Line_82 $$ int i = 0[ CD ]
Line_82 $$ for (int i = 0; i < jobs.size(); i++) -->Line_82 $$ i++[ CD ]
Line_82 $$ int i = 0-->Line_82 $$ i++[ FD ]
Line_48 $$ int i = 0-->Line_82 $$ i++[ FD ]
Line_43 $$ int i = 0-->Line_82 $$ i++[ FD ]
Line_82 $$ for (int i = 0; i < jobs.size(); i++) -->Line_83 $$ pout.println((i + 1) + "\t" + ((Object[]) jobs.get(i))[0])[ CD ]
Line_82 $$ int i = 0-->Line_83 $$ jobs.get(i)[ FD ]
Line_48 $$ int i = 0-->Line_83 $$ jobs.get(i)[ FD ]
Line_43 $$ int i = 0-->Line_83 $$ jobs.get(i)[ FD ]
Line_81 $$ if (params.length() == 0) -->Line_86 $$ handleBackgroundJob(in, (Object[]) jobs.remove(Integer.parseInt(params) - 1))[ CD ]
Line_80 $$ if (cmd == "jobs") -->Line_88 $$ if (cmd == "exit") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_88 $$ if (cmd == "exit") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_88 $$ if (cmd == "exit") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_88 $$ if (cmd == "exit") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_88 $$ if (cmd == "exit") [ FD ]
Line_88 $$ if (cmd == "exit") -->Line_90 $$ if (cmd == "help") [ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_90 $$ if (cmd == "help") [ FD ]
Line_4 $$ String cmd = in.readLine()-->Line_90 $$ if (cmd == "help") [ FD ]
Line_14 $$ cmd = cmd.substring(0, pos)-->Line_90 $$ if (cmd == "help") [ FD ]
Line_16 $$ cmd = cmd.toLowerCase().intern()-->Line_90 $$ if (cmd == "help") [ FD ]
Line_90 $$ if (cmd == "help") -->Line_91 $$ params.toLowerCase().intern()[ CD ]
Line_90 $$ if (cmd == "help") -->Line_92 $$ if (params == "info") [ CD ]
Line_92 $$ if (params == "info") -->Line_93 $$ pout.println("info: show system properties.")[ CD ]
Line_92 $$ if (params == "info") -->Line_94 $$ pout.println("  Usage: info [property]")[ CD ]
Line_92 $$ if (params == "info") -->Line_95 $$ if (params == "pwd") [ CD ]
Line_95 $$ if (params == "pwd") -->Line_96 $$ pout.println("pwd: show current directory.")[ CD ]
Line_95 $$ if (params == "pwd") -->Line_97 $$ pout.println("  Usage: pwd")[ CD ]
Line_95 $$ if (params == "pwd") -->Line_98 $$ if (params == "cd") [ CD ]
Line_98 $$ if (params == "cd") -->Line_99 $$ pout.println("cd: change directory.")[ CD ]
Line_98 $$ if (params == "cd") -->Line_100 $$ pout.println("  Usage: cd <path>")[ CD ]
Line_98 $$ if (params == "cd") -->Line_101 $$ if (params == "ls") [ CD ]
Line_101 $$ if (params == "ls") -->Line_102 $$ pout.println("ls: list directory.")[ CD ]
Line_101 $$ if (params == "ls") -->Line_103 $$ pout.println("  Usage: ls")[ CD ]
Line_101 $$ if (params == "ls") -->Line_104 $$ if (params == "exec") [ CD ]
Line_104 $$ if (params == "exec") -->Line_105 $$ pout.println("exec: execute native command.")[ CD ]
Line_104 $$ if (params == "exec") -->Line_106 $$ pout.println("  Usage: exec <command>")[ CD ]
Line_104 $$ if (params == "exec") -->Line_107 $$ if (params == "cat") [ CD ]
Line_107 $$ if (params == "cat") -->Line_108 $$ pout.println("cat: show text file.")[ CD ]
Line_107 $$ if (params == "cat") -->Line_109 $$ pout.println("  Usage: cat <filename>")[ CD ]
Line_107 $$ if (params == "cat") -->Line_110 $$ if (params == "wget") [ CD ]
Line_110 $$ if (params == "wget") -->Line_111 $$ pout.println("wget: download file.")[ CD ]
Line_110 $$ if (params == "wget") -->Line_112 $$ pout.println("  Usage: wget <URL> <filename>")[ CD ]
Line_110 $$ if (params == "wget") -->Line_113 $$ if (params == "telnet") [ CD ]
Line_113 $$ if (params == "telnet") -->Line_114 $$ pout.println("telnet: create TCP connection.")[ CD ]
Line_113 $$ if (params == "telnet") -->Line_115 $$ pout.println("  Usage: telnet <host> <port>")[ CD ]
Line_113 $$ if (params == "telnet") -->Line_116 $$ if (params == "paste") [ CD ]
Line_116 $$ if (params == "paste") -->Line_117 $$ pout.println("paste: create text file.")[ CD ]
Line_116 $$ if (params == "paste") -->Line_118 $$ pout.println("  Usage: paste <filename>")[ CD ]
Line_116 $$ if (params == "paste") -->Line_119 $$ if (params == "jobs") [ CD ]
Line_119 $$ if (params == "jobs") -->Line_120 $$ pout.println("jobs: list or continue jobs.")[ CD ]
Line_119 $$ if (params == "jobs") -->Line_121 $$ pout.println("  Usage: jobs [index]")[ CD ]
Line_119 $$ if (params == "jobs") -->Line_122 $$ if (params == "exit") [ CD ]
Line_122 $$ if (params == "exit") -->Line_123 $$ pout.println("exit: Exit JSh.")[ CD ]
Line_122 $$ if (params == "exit") -->Line_124 $$ pout.println("  Usage: exit")[ CD ]
Line_122 $$ if (params == "exit") -->Line_126 $$ pout.println("help: show information about commands.")[ CD ]
Line_122 $$ if (params == "exit") -->Line_127 $$ pout.println("  Usage: help [command]")[ CD ]
Line_122 $$ if (params == "exit") -->Line_128 $$ pout.println()[ CD ]
Line_122 $$ if (params == "exit") -->Line_129 $$ pout.println("Supported commands:")[ CD ]
Line_122 $$ if (params == "exit") -->Line_130 $$ pout.println("    help   - show this help")[ CD ]
Line_122 $$ if (params == "exit") -->Line_131 $$ pout.println("    info   - list system properties")[ CD ]
Line_122 $$ if (params == "exit") -->Line_132 $$ pout.println("    pwd    - show current directory")[ CD ]
Line_122 $$ if (params == "exit") -->Line_133 $$ pout.println("    cd     - change directory")[ CD ]
Line_122 $$ if (params == "exit") -->Line_134 $$ pout.println("    ls     - list directory")[ CD ]
Line_122 $$ if (params == "exit") -->Line_135 $$ pout.println("    exec   - execute native command")[ CD ]
Line_122 $$ if (params == "exit") -->Line_136 $$ pout.println("    cat    - show text file")[ CD ]
Line_122 $$ if (params == "exit") -->Line_137 $$ pout.println("    wget   - download file")[ CD ]
Line_122 $$ if (params == "exit") -->Line_138 $$ pout.println("    telnet - create TCP connection")[ CD ]
Line_122 $$ if (params == "exit") -->Line_139 $$ pout.println("    paste  - create text file")[ CD ]
Line_122 $$ if (params == "exit") -->Line_140 $$ pout.println("    jobs   - list or continue jobs")[ CD ]
Line_122 $$ if (params == "exit") -->Line_141 $$ pout.println("    exit   - Exit JSh")[ CD ]
Line_122 $$ if (params == "exit") -->Line_142 $$ pout.println()[ CD ]
Line_122 $$ if (params == "exit") -->Line_143 $$ pout.println("When inside an interactive command, enter ~. on a new")[ CD ]
Line_122 $$ if (params == "exit") -->Line_144 $$ pout.println("line to exit from that command. Enter ~& to background the command.")[ CD ]
Line_122 $$ if (params == "exit") -->Line_145 $$ pout.println("Enter ~~ to start a line with a ~ character")[ CD ]
Line_90 $$ if (cmd == "help") -->Line_148 $$ pout.println("Unknown command: " + cmd)[ CD ]
Line_90 $$ if (cmd == "help") -->Line_149 $$ pout.println("Type help for more info.")[ CD ]
Line_3 $$ public void start(DataInputStream originalIn, OutputStream out, String[] parameters) -->Line_151 $$ ex.printStackTrace(pout)[ CD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_5 $$ cmd.indexOf("\0$")[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.substring(0, cmd.indexOf("\0$"))[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.indexOf("\0$")[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.substring(cmd.indexOf("\0$") + 2)[ FD ]
Line_6 $$ cmd = cmd.substring(0, cmd.indexOf("\0$")) + cmd.substring(cmd.indexOf("\0$") + 2)-->Line_6 $$ cmd.indexOf("\0$")[ FD ]
Line_26 $$ final String property = (String) e.nextElement()-->Line_27 $$ System.getProperty(property)[ FD ]
Line_43 $$ int i = 0-->Line_43 $$ for (int i = 0; i < roots.length; i++) [ FD ]
Line_43 $$ int i = 0-->Line_43 $$ for (int i = 0; i < roots.length; i++) [ FD ]
Line_43 $$ int i = 0-->Line_43 $$ i++[ FD ]
Line_48 $$ int i = 0-->Line_48 $$ for (int i = 0; i < dir.length; i++) [ FD ]
Line_48 $$ int i = 0-->Line_48 $$ for (int i = 0; i < dir.length; i++) [ FD ]
Line_48 $$ int i = 0-->Line_48 $$ i++[ FD ]
Line_82 $$ int i = 0-->Line_82 $$ for (int i = 0; i < jobs.size(); i++) [ FD ]
Line_82 $$ int i = 0-->Line_82 $$ for (int i = 0; i < jobs.size(); i++) [ FD ]
Line_82 $$ int i = 0-->Line_82 $$ i++[ FD ]
Line_82 $$ int i = 0-->Line_83 $$ jobs.get(i)[ FD ]
