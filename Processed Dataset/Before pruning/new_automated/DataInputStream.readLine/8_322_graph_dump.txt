Line_0 $$ Entry-->Line_2 $$ //8
public class func [ CD ]
Line_2 $$ //8
public class func -->Line_3 $$ public void getStreamLines(final InputStream is) [ CD ]
Line_3 $$ public void getStreamLines(final InputStream is) -->Line_4 $$ final DataInputStream dis = new DataInputStream(is)[ CD ]
Line_3 $$ public void getStreamLines(final InputStream is) -->Line_5 $$ if (dis.available() > 0) [ CD ]
Line_4 $$ final DataInputStream dis = new DataInputStream(is)-->Line_5 $$ dis.available()[ FD ]
Line_4 $$ final DataInputStream dis = new DataInputStream(is)-->Line_6 $$ dis.readLine()[ FD ]
Line_5 $$ if (dis.available() > 0) -->Line_7 $$ while (dis.available() > 0) [ CD ]
Line_5 $$ if (dis.available() > 0) -->Line_5 $$ if (dis.available() > 0) [ CD ]
Line_4 $$ final DataInputStream dis = new DataInputStream(is)-->Line_7 $$ dis.available()[ FD ]
Line_7 $$ while (dis.available() > 0) -->Line_8 $$ buffer.append("\n").append(dis.readLine())[ CD ]
Line_4 $$ final DataInputStream dis = new DataInputStream(is)-->Line_8 $$ dis.readLine()[ FD ]
Line_3 $$ public void getStreamLines(final InputStream is) -->Line_11 $$ dis.close()[ CD ]
Line_4 $$ final DataInputStream dis = new DataInputStream(is)-->Line_11 $$ dis.close()[ FD ]
