Line_0 $$ Entry-->Line_2 $$ //3
public class func [ CD ]
Line_2 $$ //3
public class func -->Line_3 $$ public void getAccountData(int accountID, Connection conn) [ CD ]
Line_3 $$ public void getAccountData(int accountID, Connection conn) -->Line_4 $$ PreparedStatement stmt = getStatement(conn, getAccountSQL)[ CD ]
Line_4 $$ PreparedStatement stmt = getStatement(conn, getAccountSQL)-->Line_4 $$ getStatement(conn, getAccountSQL)[ CD ]
Line_3 $$ public void getAccountData(int accountID, Connection conn) -->Line_5 $$ stmt.setInt(1, accountID)[ CD ]
Line_4 $$ PreparedStatement stmt = getStatement(conn, getAccountSQL)-->Line_5 $$ stmt.setInt(1, accountID)[ FD ]
Line_3 $$ public void getAccountData(int accountID, Connection conn) -->Line_6 $$ ResultSet rs = stmt.executeQuery()[ CD ]
Line_6 $$ ResultSet rs = stmt.executeQuery()-->Line_6 $$ stmt.executeQuery()[ CD ]
Line_4 $$ PreparedStatement stmt = getStatement(conn, getAccountSQL)-->Line_6 $$ stmt.executeQuery()[ FD ]
Line_3 $$ public void getAccountData(int accountID, Connection conn) -->Line_7 $$ AccountDataBean accountData = getAccountDataFromResultSet(rs)[ CD ]
Line_7 $$ AccountDataBean accountData = getAccountDataFromResultSet(rs)-->Line_7 $$ getAccountDataFromResultSet(rs)[ CD ]
Line_6 $$ ResultSet rs = stmt.executeQuery()-->Line_7 $$ getAccountDataFromResultSet(rs)[ FD ]
Line_3 $$ public void getAccountData(int accountID, Connection conn) -->Line_8 $$ stmt.close()[ CD ]
Line_4 $$ PreparedStatement stmt = getStatement(conn, getAccountSQL)-->Line_8 $$ stmt.close()[ FD ]
