Line_0 $$ Entry-->Line_2 $$ //13
public class func [ CD ]
Line_2 $$ //13
public class func -->Line_3 $$ public void doRun(Connection cx) [ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_4 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)[ CD ]
Line_4 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)-->Line_4 $$ format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)[ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_7 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_7 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_7 $$ open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_4 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)-->Line_7 $$ log(sql, LOG, namespace)[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_8 $$ ps.setString(1, namespace)[ CD ]
Line_7 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_8 $$ ps.setString(1, namespace)[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_9 $$ return ps.executeQuery();[ CD ]
Line_9 $$ return ps.executeQuery();-->Line_9 $$ ps.executeQuery()[ CD ]
Line_7 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_9 $$ ps.executeQuery()[ FD ]
