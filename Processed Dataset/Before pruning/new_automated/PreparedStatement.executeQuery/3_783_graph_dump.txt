Line_0 $$ Entry-->Line_2 $$ //3
public class func [ CD ]
Line_2 $$ //3
public class func -->Line_3 $$ public void testCastWithUnaryMinusAndPlus() [ CD ]
Line_3 $$ public void testCastWithUnaryMinusAndPlus() -->Line_4 $$ PreparedStatement ps = prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")[ CD ]
Line_4 $$ PreparedStatement ps = prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")-->Line_4 $$ prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")[ CD ]
Line_3 $$ public void testCastWithUnaryMinusAndPlus() -->Line_5 $$ ps.setInt(2, 2)[ CD ]
Line_4 $$ PreparedStatement ps = prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")-->Line_5 $$ ps.setInt(2, 2)[ FD ]
Line_3 $$ public void testCastWithUnaryMinusAndPlus() -->Line_6 $$ JDBC.assertParameterTypes(ps, expectedTypes)[ CD ]
Line_4 $$ PreparedStatement ps = prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")-->Line_6 $$ JDBC.assertParameterTypes(ps, expectedTypes)[ FD ]
Line_3 $$ public void testCastWithUnaryMinusAndPlus() -->Line_7 $$ JDBC.assertFullResultSet(ps.executeQuery(), expectedRows, true)[ CD ]
Line_4 $$ PreparedStatement ps = prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")-->Line_7 $$ ps.executeQuery()[ FD ]
Line_3 $$ public void testCastWithUnaryMinusAndPlus() -->Line_8 $$ ps.close()[ CD ]
Line_4 $$ PreparedStatement ps = prepareStatement("select cast(-? as smallint), cast(+? as int) from t1")-->Line_8 $$ ps.close()[ FD ]
