Line_0 $$ Entry-->Line_2 $$ //209
public class func [ CD ]
Line_2 $$ //209
public class func -->Line_3 $$ public void testBinaryFetch() [ CD ]
Line_3 $$ public void testBinaryFetch() -->Line_4 $$ PreparedStatement stmt = con.prepareStatement("declare test_cursor binary cursor for select * from test_fetch")[ CD ]
Line_4 $$ PreparedStatement stmt = con.prepareStatement("declare test_cursor binary cursor for select * from test_fetch")-->Line_4 $$ con.prepareStatement("declare test_cursor binary cursor for select * from test_fetch")[ CD ]
Line_3 $$ public void testBinaryFetch() -->Line_5 $$ stmt.execute()[ CD ]
Line_4 $$ PreparedStatement stmt = con.prepareStatement("declare test_cursor binary cursor for select * from test_fetch")-->Line_5 $$ stmt.execute()[ FD ]
Line_3 $$ public void testBinaryFetch() -->Line_6 $$ stmt = con.prepareStatement("fetch forward from test_cursor")[ CD ]
Line_4 $$ PreparedStatement stmt = con.prepareStatement("declare test_cursor binary cursor for select * from test_fetch")-->Line_6 $$ stmt = con.prepareStatement("fetch forward from test_cursor")[ FD ]
Line_6 $$ stmt = con.prepareStatement("fetch forward from test_cursor")-->Line_6 $$ stmt = con.prepareStatement("fetch forward from test_cursor")[ FD ]
Line_6 $$ stmt = con.prepareStatement("fetch forward from test_cursor")-->Line_6 $$ con.prepareStatement("fetch forward from test_cursor")[ CD ]
Line_3 $$ public void testBinaryFetch() -->Line_7 $$ ResultSet rs = stmt.executeQuery()[ CD ]
Line_7 $$ ResultSet rs = stmt.executeQuery()-->Line_7 $$ stmt.executeQuery()[ CD ]
Line_4 $$ PreparedStatement stmt = con.prepareStatement("declare test_cursor binary cursor for select * from test_fetch")-->Line_7 $$ stmt.executeQuery()[ FD ]
Line_6 $$ stmt = con.prepareStatement("fetch forward from test_cursor")-->Line_7 $$ stmt.executeQuery()[ FD ]
Line_3 $$ public void testBinaryFetch() -->Line_8 $$ while (rs.next()) [ CD ]
Line_3 $$ public void testBinaryFetch() -->Line_3 $$ public void testBinaryFetch() [ CD ]
Line_8 $$ while (rs.next()) -->Line_8 $$ rs.next()[ CD ]
Line_7 $$ ResultSet rs = stmt.executeQuery()-->Line_8 $$ rs.next()[ FD ]
Line_8 $$ while (rs.next()) -->Line_11 $$ byte[] dataBytes = rs.getBytes(2)[ CD ]
Line_11 $$ byte[] dataBytes = rs.getBytes(2)-->Line_11 $$ rs.getBytes(2)[ CD ]
Line_7 $$ ResultSet rs = stmt.executeQuery()-->Line_11 $$ rs.getBytes(2)[ FD ]
Line_8 $$ while (rs.next()) -->Line_12 $$ assertEquals("binary data got munged", DATA_STRING, new String(dataBytes, "UTF8"))[ CD ]
