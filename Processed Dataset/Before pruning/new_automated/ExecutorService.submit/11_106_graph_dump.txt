Line_0 $$ Entry-->Line_2 $$ //11
public class func [ CD ]
Line_2 $$ //11
public class func -->Line_3 $$ public void runAsyncInternal() [ CD ]
Line_3 $$ public void runAsyncInternal() -->Line_4 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()[ CD ]
Line_4 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()-->Line_4 $$ Concurrent.getManagedSingleThreadedExecutorService()[ CD ]
Line_3 $$ public void runAsyncInternal() -->Line_5 $$ !crate.getPayload2()[ CD ]
Line_5 $$ !crate.getPayload2()-->Line_5 $$ crate.getPayload2()[ CD ]
Line_4 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()-->Line_5 $$ crate.getPayload2()[ FD ]
Line_3 $$ public void runAsyncInternal() -->Line_6 $$ ExecutorService executor = crate.getPayload1()[ CD ]
Line_6 $$ ExecutorService executor = crate.getPayload1()-->Line_6 $$ crate.getPayload1()[ CD ]
Line_4 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()-->Line_6 $$ crate.getPayload1()[ FD ]
Line_3 $$ public void runAsyncInternal() -->Line_7 $$ executor.submit(callable)[ CD ]
Line_6 $$ ExecutorService executor = crate.getPayload1()-->Line_7 $$ executor.submit(callable)[ FD ]
Line_3 $$ public void runAsyncInternal() -->Line_8 $$ executor.shutdown()[ CD ]
Line_6 $$ ExecutorService executor = crate.getPayload1()-->Line_8 $$ executor.shutdown()[ FD ]
