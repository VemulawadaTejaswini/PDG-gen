Line_0 $$ Entry-->Line_2 $$ //3
public class func [ CD ]
Line_2 $$ //3
public class func -->Line_3 $$ public void openDB() [ CD ]
Line_3 $$ public void openDB() -->Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_4 $$ context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)[ CD ]
Line_3 $$ public void openDB() -->Line_5 $$ if (mDb.getVersion() == 1) [ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_5 $$ mDb.getVersion()[ FD ]
Line_5 $$ if (mDb.getVersion() == 1) -->Line_6 $$ Log.i(K9.LOG_TAG, "Updating preferences to urlencoded username/password")[ CD ]
Line_5 $$ if (mDb.getVersion() == 1) -->Line_8 $$ String accountUuids = readValue(mDb, "accountUuids")[ CD ]
Line_8 $$ String accountUuids = readValue(mDb, "accountUuids")-->Line_8 $$ readValue(mDb, "accountUuids")[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_8 $$ readValue(mDb, "accountUuids")[ FD ]
Line_5 $$ if (mDb.getVersion() == 1) -->Line_9 $$ if (accountUuids != null && accountUuids.length() != 0) [ CD ]
Line_8 $$ String accountUuids = readValue(mDb, "accountUuids")-->Line_9 $$ accountUuids.length()[ FD ]
Line_9 $$ if (accountUuids != null && accountUuids.length() != 0) -->Line_10 $$ String[] uuids = accountUuids.split(",")[ CD ]
Line_10 $$ String[] uuids = accountUuids.split(",")-->Line_10 $$ accountUuids.split(",")[ CD ]
Line_8 $$ String accountUuids = readValue(mDb, "accountUuids")-->Line_10 $$ accountUuids.split(",")[ FD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_13 $$ Base64.decode(readValue(mDb, uuid + ".storeUri"))[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_13 $$ readValue(mDb, uuid + ".storeUri")[ FD ]
Line_14 $$ String transportUriStr = Base64.decode(readValue(mDb, uuid + ".transportUri"))-->Line_14 $$ Base64.decode(readValue(mDb, uuid + ".transportUri"))[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_14 $$ readValue(mDb, uuid + ".transportUri")[ FD ]
Line_14 $$ String transportUriStr = Base64.decode(readValue(mDb, uuid + ".transportUri"))-->Line_18 $$ if (transportUriStr != null) [ FD ]
Line_18 $$ if (transportUriStr != null) -->Line_19 $$ String[] userInfoParts = uri.getUserInfo().split(":")[ CD ]
Line_19 $$ String[] userInfoParts = uri.getUserInfo().split(":")-->Line_19 $$ uri.getUserInfo().split(":")[ CD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_19 $$ uri.getUserInfo()[ FD ]
Line_18 $$ if (transportUriStr != null) -->Line_21 $$ String usernameEnc = UrlEncodingHelper.encodeUtf8(userInfoParts[0])[ CD ]
Line_21 $$ String usernameEnc = UrlEncodingHelper.encodeUtf8(userInfoParts[0])-->Line_21 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[0])[ CD ]
Line_18 $$ if (transportUriStr != null) -->Line_22 $$ String passwordEnc = ""[ CD ]
Line_18 $$ if (transportUriStr != null) -->Line_23 $$ String authType = ""[ CD ]
Line_18 $$ if (transportUriStr != null) -->Line_24 $$ if (userInfoParts.length > 1) [ CD ]
Line_24 $$ if (userInfoParts.length > 1) -->Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ CD ]
Line_22 $$ String passwordEnc = ""-->Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_18 $$ if (transportUriStr != null) -->Line_27 $$ if (userInfoParts.length > 2) [ CD ]
Line_27 $$ if (userInfoParts.length > 2) -->Line_28 $$ authType = ":" + userInfoParts[2][ CD ]
Line_23 $$ String authType = ""-->Line_28 $$ authType = ":" + userInfoParts[2][ FD ]
Line_28 $$ authType = ":" + userInfoParts[2]-->Line_28 $$ authType = ":" + userInfoParts[2][ FD ]
Line_18 $$ if (transportUriStr != null) -->Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType[ CD ]
Line_17 $$ String newUserInfo = null-->Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType[ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType[ FD ]
Line_23 $$ String authType = ""-->Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType[ FD ]
Line_28 $$ authType = ":" + userInfoParts[2]-->Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType[ FD ]
Line_17 $$ String newUserInfo = null-->Line_34 $$ if (newUserInfo != null) [ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_34 $$ if (newUserInfo != null) [ FD ]
Line_34 $$ if (newUserInfo != null) -->Line_35 $$ URI newUri = new URI(uri.getScheme(), newUserInfo, uri.getHost(), uri.getPort(), uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_35 $$ uri.getScheme()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_35 $$ uri.getHost()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_35 $$ uri.getPort()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_35 $$ uri.getPath()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_35 $$ uri.getQuery()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_35 $$ uri.getFragment()[ FD ]
Line_34 $$ if (newUserInfo != null) -->Line_36 $$ String newTransportUriStr = Base64.encode(newUri.toString())[ CD ]
Line_36 $$ String newTransportUriStr = Base64.encode(newUri.toString())-->Line_36 $$ Base64.encode(newUri.toString())[ CD ]
Line_35 $$ URI newUri = new URI(uri.getScheme(), newUserInfo, uri.getHost(), uri.getPort(), uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_36 $$ newUri.toString()[ FD ]
Line_34 $$ if (newUserInfo != null) -->Line_37 $$ writeValue(mDb, uuid + ".transportUri", newTransportUriStr)[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_37 $$ writeValue(mDb, uuid + ".transportUri", newTransportUriStr)[ FD ]
Line_36 $$ String newTransportUriStr = Base64.encode(newUri.toString())-->Line_37 $$ writeValue(mDb, uuid + ".transportUri", newTransportUriStr)[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_40 $$ uri = new URI(storeUriStr)[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_40 $$ uri = new URI(storeUriStr)[ FD ]
Line_17 $$ String newUserInfo = null-->Line_41 $$ newUserInfo = null[ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_41 $$ newUserInfo = null[ FD ]
Line_41 $$ newUserInfo = null-->Line_41 $$ newUserInfo = null[ FD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_42 $$ if (storeUriStr.startsWith("imap")) [ FD ]
Line_42 $$ if (storeUriStr.startsWith("imap")) -->Line_42 $$ storeUriStr.startsWith("imap")[ CD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_42 $$ storeUriStr.startsWith("imap")[ FD ]
Line_42 $$ if (storeUriStr.startsWith("imap")) -->Line_43 $$ uri.getUserInfo().split(":")[ CD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_43 $$ uri.getUserInfo()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_43 $$ uri.getUserInfo()[ FD ]
Line_42 $$ if (storeUriStr.startsWith("imap")) -->Line_44 $$ if (userInfoParts.length == 2) [ CD ]
Line_44 $$ if (userInfoParts.length == 2) -->Line_45 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[0])[ CD ]
Line_44 $$ if (userInfoParts.length == 2) -->Line_46 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ CD ]
Line_44 $$ if (userInfoParts.length == 2) -->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ CD ]
Line_17 $$ String newUserInfo = null-->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ FD ]
Line_41 $$ newUserInfo = null-->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ FD ]
Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc-->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ FD ]
Line_22 $$ String passwordEnc = ""-->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc[ FD ]
Line_44 $$ if (userInfoParts.length == 2) -->Line_51 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ CD ]
Line_44 $$ if (userInfoParts.length == 2) -->Line_52 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[2])[ CD ]
Line_44 $$ if (userInfoParts.length == 2) -->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ CD ]
Line_17 $$ String newUserInfo = null-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_41 $$ newUserInfo = null-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_22 $$ String passwordEnc = ""-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc[ FD ]
Line_42 $$ if (storeUriStr.startsWith("imap")) -->Line_56 $$ if (storeUriStr.startsWith("pop3")) [ CD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_56 $$ if (storeUriStr.startsWith("pop3")) [ FD ]
Line_56 $$ if (storeUriStr.startsWith("pop3")) -->Line_56 $$ storeUriStr.startsWith("pop3")[ CD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_56 $$ storeUriStr.startsWith("pop3")[ FD ]
Line_56 $$ if (storeUriStr.startsWith("pop3")) -->Line_57 $$ uri.getUserInfo().split(":", 2)[ CD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_57 $$ uri.getUserInfo()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_57 $$ uri.getUserInfo()[ FD ]
Line_56 $$ if (storeUriStr.startsWith("pop3")) -->Line_58 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[0])[ CD ]
Line_56 $$ if (storeUriStr.startsWith("pop3")) -->Line_61 $$ if (userInfoParts.length > 1) [ CD ]
Line_61 $$ if (userInfoParts.length > 1) -->Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ CD ]
Line_22 $$ String passwordEnc = ""-->Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_56 $$ if (storeUriStr.startsWith("pop3")) -->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ CD ]
Line_17 $$ String newUserInfo = null-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_41 $$ newUserInfo = null-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_65 $$ newUserInfo = usernameEnc + passwordEnc-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_21 $$ String usernameEnc = UrlEncodingHelper.encodeUtf8(userInfoParts[0])-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_22 $$ String passwordEnc = ""-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_65 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_56 $$ if (storeUriStr.startsWith("pop3")) -->Line_66 $$ if (storeUriStr.startsWith("webdav")) [ CD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_66 $$ if (storeUriStr.startsWith("webdav")) [ FD ]
Line_66 $$ if (storeUriStr.startsWith("webdav")) -->Line_66 $$ storeUriStr.startsWith("webdav")[ CD ]
Line_13 $$ String storeUriStr = Base64.decode(readValue(mDb, uuid + ".storeUri"))-->Line_66 $$ storeUriStr.startsWith("webdav")[ FD ]
Line_66 $$ if (storeUriStr.startsWith("webdav")) -->Line_67 $$ uri.getUserInfo().split(":", 2)[ CD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_67 $$ uri.getUserInfo()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_67 $$ uri.getUserInfo()[ FD ]
Line_66 $$ if (storeUriStr.startsWith("webdav")) -->Line_68 $$ UrlEncodingHelper.encodeUtf8(userInfoParts[0])[ CD ]
Line_66 $$ if (storeUriStr.startsWith("webdav")) -->Line_71 $$ if (userInfoParts.length > 1) [ CD ]
Line_71 $$ if (userInfoParts.length > 1) -->Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ CD ]
Line_22 $$ String passwordEnc = ""-->Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])[ FD ]
Line_66 $$ if (storeUriStr.startsWith("webdav")) -->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ CD ]
Line_17 $$ String newUserInfo = null-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_41 $$ newUserInfo = null-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_65 $$ newUserInfo = usernameEnc + passwordEnc-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_75 $$ newUserInfo = usernameEnc + passwordEnc-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_21 $$ String usernameEnc = UrlEncodingHelper.encodeUtf8(userInfoParts[0])-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_22 $$ String passwordEnc = ""-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_25 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_62 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_72 $$ passwordEnc = ":" + UrlEncodingHelper.encodeUtf8(userInfoParts[1])-->Line_75 $$ newUserInfo = usernameEnc + passwordEnc[ FD ]
Line_17 $$ String newUserInfo = null-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_31 $$ newUserInfo = usernameEnc + passwordEnc + authType-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_41 $$ newUserInfo = null-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_48 $$ newUserInfo = usernameEnc + ":" + passwordEnc-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_54 $$ newUserInfo = authType + ":" + usernameEnc + ":" + passwordEnc-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_65 $$ newUserInfo = usernameEnc + passwordEnc-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_75 $$ newUserInfo = usernameEnc + passwordEnc-->Line_78 $$ if (newUserInfo != null) [ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_79 $$ uri.getScheme()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_79 $$ uri.getScheme()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_79 $$ uri.getHost()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_79 $$ uri.getHost()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_79 $$ uri.getPort()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_79 $$ uri.getPort()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_79 $$ uri.getPath()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_79 $$ uri.getPath()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_79 $$ uri.getQuery()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_79 $$ uri.getQuery()[ FD ]
Line_16 $$ URI uri = new URI(transportUriStr)-->Line_79 $$ uri.getFragment()[ FD ]
Line_40 $$ uri = new URI(storeUriStr)-->Line_79 $$ uri.getFragment()[ FD ]
Line_78 $$ if (newUserInfo != null) -->Line_80 $$ String newStoreUriStr = Base64.encode(newUri.toString())[ CD ]
Line_80 $$ String newStoreUriStr = Base64.encode(newUri.toString())-->Line_80 $$ Base64.encode(newUri.toString())[ CD ]
Line_35 $$ URI newUri = new URI(uri.getScheme(), newUserInfo, uri.getHost(), uri.getPort(), uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_80 $$ newUri.toString()[ FD ]
Line_78 $$ if (newUserInfo != null) -->Line_81 $$ writeValue(mDb, uuid + ".storeUri", newStoreUriStr)[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_81 $$ writeValue(mDb, uuid + ".storeUri", newStoreUriStr)[ FD ]
Line_80 $$ String newStoreUriStr = Base64.encode(newUri.toString())-->Line_81 $$ writeValue(mDb, uuid + ".storeUri", newStoreUriStr)[ FD ]
Line_5 $$ if (mDb.getVersion() == 1) -->Line_89 $$ mDb.setVersion(DB_VERSION)[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_89 $$ mDb.setVersion(DB_VERSION)[ FD ]
Line_3 $$ public void openDB() -->Line_91 $$ if (mDb.getVersion() != DB_VERSION) [ CD ]
Line_91 $$ if (mDb.getVersion() != DB_VERSION) -->Line_91 $$ mDb.getVersion()[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_91 $$ mDb.getVersion()[ FD ]
Line_91 $$ if (mDb.getVersion() != DB_VERSION) -->Line_92 $$ Log.i(K9.LOG_TAG, "Creating Storage database")[ CD ]
Line_91 $$ if (mDb.getVersion() != DB_VERSION) -->Line_93 $$ mDb.execSQL("DROP TABLE IF EXISTS preferences_storage")[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_93 $$ mDb.execSQL("DROP TABLE IF EXISTS preferences_storage")[ FD ]
Line_91 $$ if (mDb.getVersion() != DB_VERSION) -->Line_94 $$ mDb.execSQL("CREATE TABLE preferences_storage " + "(primkey TEXT PRIMARY KEY ON CONFLICT REPLACE, value TEXT)")[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_94 $$ mDb.execSQL("CREATE TABLE preferences_storage " + "(primkey TEXT PRIMARY KEY ON CONFLICT REPLACE, value TEXT)")[ FD ]
Line_91 $$ if (mDb.getVersion() != DB_VERSION) -->Line_96 $$ mDb.setVersion(DB_VERSION)[ CD ]
Line_4 $$ SQLiteDatabase mDb = context.openOrCreateDatabase(DB_NAME, Context.MODE_PRIVATE, null)-->Line_96 $$ mDb.setVersion(DB_VERSION)[ FD ]
