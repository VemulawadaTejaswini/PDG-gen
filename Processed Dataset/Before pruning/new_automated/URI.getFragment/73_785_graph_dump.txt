Line_0 $$ Entry-->Line_2 $$ //73
public class func [ CD ]
Line_2 $$ //73
public class func -->Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) [ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_4 $$ if (keys != null && keys.containsKey(key)) [ CD ]
Line_4 $$ if (keys != null && keys.containsKey(key)) -->Line_5 $$ keys.get(key)[ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_7 $$ values.append(name + "=[ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_8 $$ if (values.length() > 0) [ CD ]
Line_8 $$ if (values.length() > 0) -->Line_9 $$ template.fragment(values.toString())[ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_11 $$ UriComponents encoded = template.build().expand(query).encode()[ CD ]
Line_11 $$ UriComponents encoded = template.build().expand(query).encode()-->Line_11 $$ template.build().expand(query).encode()[ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_12 $$ builder.fragment(encoded.getFragment())[ CD ]
Line_11 $$ UriComponents encoded = template.build().expand(query).encode()-->Line_12 $$ encoded.getFragment()[ FD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_13 $$ template.fragment(redirectUri.getFragment())[ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_14 $$ template.build().expand(query).encode()[ CD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_15 $$ builder.query(encoded.getQuery())[ CD ]
Line_11 $$ UriComponents encoded = template.build().expand(query).encode()-->Line_15 $$ encoded.getQuery()[ FD ]
Line_3 $$ public void append(String base, Map<String, ?> query, Map<String, String> keys, boolean fragment) -->Line_16 $$ return builder.build().toUriString();[ CD ]
Line_16 $$ return builder.build().toUriString();-->Line_16 $$ builder.build().toUriString()[ CD ]
