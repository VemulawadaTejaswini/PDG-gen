Line_0 $$ Entry-->Line_2 $$ //83
public class func [ CD ]
Line_2 $$ //83
public class func -->Line_3 $$ public void fromUri(URI uri) [ CD ]
Line_3 $$ public void fromUri(URI uri) -->Line_4 $$ Preconditions.checkArgument(uri.getScheme().equalsIgnoreCase(SCHEME), "URI: %s is not a GCS URI", uri)[ CD ]
Line_3 $$ public void fromUri(URI uri) -->Line_6 $$ Preconditions.checkArgument(uri.getPort() == -1, "GCS URI may not specify port: %s (%i)", uri, uri.getPort())[ CD ]
Line_3 $$ public void fromUri(URI uri) -->Line_8 $$ Preconditions.checkArgument(Strings.isNullOrEmpty(uri.getUserInfo()), "GCS URI may not specify userInfo: %s (%s)", uri, uri.getUserInfo())[ CD ]
Line_3 $$ public void fromUri(URI uri) -->Line_11 $$ Preconditions.checkArgument(Strings.isNullOrEmpty(uri.getQuery()), "GCS URI may not specify query: %s (%s)", uri, uri.getQuery())[ CD ]
Line_3 $$ public void fromUri(URI uri) -->Line_14 $$ Preconditions.checkArgument(Strings.isNullOrEmpty(uri.getFragment()), "GCS URI may not specify fragment: %s (%s)", uri, uri.getFragment())[ CD ]
Line_3 $$ public void fromUri(URI uri) -->Line_17 $$ return fromUri(uri.toString());[ CD ]
Line_17 $$ return fromUri(uri.toString());-->Line_17 $$ fromUri(uri.toString())[ CD ]
