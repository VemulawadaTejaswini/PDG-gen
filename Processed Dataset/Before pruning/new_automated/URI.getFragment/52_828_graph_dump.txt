Line_0 $$ Entry-->Line_2 $$ //52
public class func [ CD ]
Line_2 $$ //52
public class func -->Line_3 $$ public void getResourceElement(Application app, Element resElement, GrammarInfo gInfo, Set<String> typeClassNames, String type, File srcDir) [ CD ]
Line_3 $$ public void getResourceElement(Application app, Element resElement, GrammarInfo gInfo, Set<String> typeClassNames, String type, File srcDir) -->Line_4 $$ String wadlRefPath = app.getWadlPath() != null ? getBaseWadlPath(app.getWadlPath()) + wadlRef.getPath() : wadlRef.getPath()[ CD ]
Line_3 $$ public void getResourceElement(Application app, Element resElement, GrammarInfo gInfo, Set<String> typeClassNames, String type, File srcDir) -->Line_6 $$ Application refApp = new Application(readIncludedDocument(wadlRefPath), wadlRefPath)[ CD ]
Line_4 $$ String wadlRefPath = app.getWadlPath() != null ? getBaseWadlPath(app.getWadlPath()) + wadlRef.getPath() : wadlRef.getPath()-->Line_6 $$ readIncludedDocument(wadlRefPath)[ FD ]
Line_3 $$ public void getResourceElement(Application app, Element resElement, GrammarInfo gInfo, Set<String> typeClassNames, String type, File srcDir) -->Line_8 $$ GrammarInfo gInfoBase = generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)[ CD ]
Line_8 $$ GrammarInfo gInfoBase = generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)-->Line_8 $$ generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)[ CD ]
Line_6 $$ Application refApp = new Application(readIncludedDocument(wadlRefPath), wadlRefPath)-->Line_8 $$ generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)[ FD ]
Line_3 $$ public void getResourceElement(Application app, Element resElement, GrammarInfo gInfo, Set<String> typeClassNames, String type, File srcDir) -->Line_9 $$ if (gInfoBase != null) [ CD ]
Line_8 $$ GrammarInfo gInfoBase = generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)-->Line_9 $$ if (gInfoBase != null) [ FD ]
Line_9 $$ if (gInfoBase != null) -->Line_10 $$ gInfo.getElementTypeMap().putAll(gInfoBase.getElementTypeMap())[ CD ]
Line_8 $$ GrammarInfo gInfoBase = generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)-->Line_10 $$ gInfoBase.getElementTypeMap()[ FD ]
Line_9 $$ if (gInfoBase != null) -->Line_11 $$ gInfo.getNsMap().putAll(gInfoBase.getNsMap())[ CD ]
Line_8 $$ GrammarInfo gInfoBase = generateSchemaCodeAndInfo(refApp, typeClassNames, srcDir)-->Line_11 $$ gInfoBase.getNsMap()[ FD ]
Line_3 $$ public void getResourceElement(Application app, Element resElement, GrammarInfo gInfo, Set<String> typeClassNames, String type, File srcDir) -->Line_13 $$ return getResourceElement(refApp, resElement, gInfo, typeClassNames, "#" + wadlRef.getFragment(), srcDir);[ CD ]
Line_13 $$ return getResourceElement(refApp, resElement, gInfo, typeClassNames, "#" + wadlRef.getFragment(), srcDir);-->Line_13 $$ getResourceElement(refApp, resElement, gInfo, typeClassNames, "#" + wadlRef.getFragment(), srcDir)[ CD ]
Line_6 $$ Application refApp = new Application(readIncludedDocument(wadlRefPath), wadlRefPath)-->Line_13 $$ getResourceElement(refApp, resElement, gInfo, typeClassNames, "#" + wadlRef.getFragment(), srcDir)[ FD ]
