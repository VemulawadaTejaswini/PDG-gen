Line_0 $$ Entry-->Line_2 $$ //37
public class func [ CD ]
Line_2 $$ //37
public class func -->Line_3 $$ public void connect(final Context context, String path, int maxLength, final WebSocketHandler<T> handler) [ CD ]
Line_3 $$ public void connect(final Context context, String path, int maxLength, final WebSocketHandler<T> handler) -->Line_4 $$ PublicAddress publicAddress = context.get(PublicAddress.class)[ CD ]
Line_4 $$ PublicAddress publicAddress = context.get(PublicAddress.class)-->Line_4 $$ context.get(PublicAddress.class)[ CD ]
Line_3 $$ public void connect(final Context context, String path, int maxLength, final WebSocketHandler<T> handler) -->Line_5 $$ URI address = publicAddress.getAddress(context)[ CD ]
Line_5 $$ URI address = publicAddress.getAddress(context)-->Line_5 $$ publicAddress.getAddress(context)[ CD ]
Line_4 $$ PublicAddress publicAddress = context.get(PublicAddress.class)-->Line_5 $$ publicAddress.getAddress(context)[ FD ]
Line_3 $$ public void connect(final Context context, String path, int maxLength, final WebSocketHandler<T> handler) -->Line_6 $$ URI httpPath = address.resolve(path)[ CD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_6 $$ address.resolve(path)[ CD ]
Line_5 $$ URI address = publicAddress.getAddress(context)-->Line_6 $$ address.resolve(path)[ FD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_7 $$ httpPath.getUserInfo()[ FD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_7 $$ httpPath.getHost()[ FD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_7 $$ httpPath.getPort()[ FD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_7 $$ httpPath.getPath()[ FD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_7 $$ httpPath.getQuery()[ FD ]
Line_6 $$ URI httpPath = address.resolve(path)-->Line_7 $$ httpPath.getFragment()[ FD ]
