Line_0 $$ Entry-->Line_2 $$ //47
public class func [ CD ]
Line_2 $$ //47
public class func -->Line_3 $$ public void select(SSPHandler sspHandler) [ CD ]
Line_3 $$ public void select(SSPHandler sspHandler) -->Line_4 $$ Iterator<Element> iter = getElements().get().iterator()[ CD ]
Line_4 $$ Iterator<Element> iter = getElements().get().iterator()-->Line_4 $$ getElements().get().iterator()[ CD ]
Line_3 $$ public void select(SSPHandler sspHandler) -->Line_5 $$ while (iter.hasNext()) [ CD ]
Line_3 $$ public void select(SSPHandler sspHandler) -->Line_3 $$ public void select(SSPHandler sspHandler) [ CD ]
Line_5 $$ while (iter.hasNext()) -->Line_5 $$ iter.hasNext()[ CD ]
Line_4 $$ Iterator<Element> iter = getElements().get().iterator()-->Line_5 $$ iter.hasNext()[ FD ]
Line_5 $$ while (iter.hasNext()) -->Line_6 $$ iter.next()[ CD ]
Line_4 $$ Iterator<Element> iter = getElements().get().iterator()-->Line_6 $$ iter.next()[ FD ]
Line_8 $$ URI uri = new URI(el.absUrl(HREF_ATTR))-->Line_9 $$ if (isLinkWithProperExtension(uri)) [ FD ]
Line_9 $$ if (isLinkWithProperExtension(uri)) -->Line_9 $$ isLinkWithProperExtension(uri)[ CD ]
Line_8 $$ URI uri = new URI(el.absUrl(HREF_ATTR))-->Line_9 $$ isLinkWithProperExtension(uri)[ FD ]
Line_9 $$ if (isLinkWithProperExtension(uri)) -->Line_10 $$ if (StringUtils.isNotBlank(uri.getFragment())) [ CD ]
Line_10 $$ if (StringUtils.isNotBlank(uri.getFragment())) -->Line_10 $$ StringUtils.isNotBlank(uri.getFragment())[ CD ]
Line_8 $$ URI uri = new URI(el.absUrl(HREF_ATTR))-->Line_10 $$ uri.getFragment()[ FD ]
Line_10 $$ if (StringUtils.isNotBlank(uri.getFragment())) -->Line_11 $$ iter.remove()[ CD ]
Line_4 $$ Iterator<Element> iter = getElements().get().iterator()-->Line_11 $$ iter.remove()[ FD ]
Line_10 $$ if (StringUtils.isNotBlank(uri.getFragment())) -->Line_13 $$ linkWithSimpleExtension.add(el)[ CD ]
Line_8 $$ URI uri = new URI(el.absUrl(HREF_ATTR))-->Line_9 $$ if (isLinkWithProperExtension(uri)) [ FD ]
Line_8 $$ URI uri = new URI(el.absUrl(HREF_ATTR))-->Line_9 $$ isLinkWithProperExtension(uri)[ FD ]
Line_8 $$ URI uri = new URI(el.absUrl(HREF_ATTR))-->Line_10 $$ uri.getFragment()[ FD ]
