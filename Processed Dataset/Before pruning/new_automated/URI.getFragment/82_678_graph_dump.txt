Line_0 $$ Entry-->Line_2 $$ //82
public class func [ CD ]
Line_2 $$ //82
public class func -->Line_3 $$ public void run() [ CD ]
Line_3 $$ public void run() -->Line_4 $$ Socket sock = ss.accept()[ CD ]
Line_4 $$ Socket sock = ss.accept()-->Line_4 $$ ss.accept()[ CD ]
Line_3 $$ public void run() -->Line_5 $$ InputStream is = sock.getInputStream()[ CD ]
Line_5 $$ InputStream is = sock.getInputStream()-->Line_5 $$ sock.getInputStream()[ CD ]
Line_4 $$ Socket sock = ss.accept()-->Line_5 $$ sock.getInputStream()[ FD ]
Line_3 $$ public void run() -->Line_6 $$ OutputStream os = sock.getOutputStream()[ CD ]
Line_6 $$ OutputStream os = sock.getOutputStream()-->Line_6 $$ sock.getOutputStream()[ CD ]
Line_4 $$ Socket sock = ss.accept()-->Line_6 $$ sock.getOutputStream()[ FD ]
Line_3 $$ public void run() -->Line_7 $$ MessageHeader headers = new MessageHeader(is)[ CD ]
Line_3 $$ public void run() -->Line_8 $$ String requestLine = headers.getValue(0)[ CD ]
Line_8 $$ String requestLine = headers.getValue(0)-->Line_8 $$ headers.getValue(0)[ CD ]
Line_7 $$ MessageHeader headers = new MessageHeader(is)-->Line_8 $$ headers.getValue(0)[ FD ]
Line_3 $$ public void run() -->Line_9 $$ int first = requestLine.indexOf(' ')[ CD ]
Line_9 $$ int first = requestLine.indexOf(' ')-->Line_9 $$ requestLine.indexOf(' ')[ CD ]
Line_8 $$ String requestLine = headers.getValue(0)-->Line_9 $$ requestLine.indexOf(' ')[ FD ]
Line_3 $$ public void run() -->Line_10 $$ int second = requestLine.lastIndexOf(' ')[ CD ]
Line_10 $$ int second = requestLine.lastIndexOf(' ')-->Line_10 $$ requestLine.lastIndexOf(' ')[ CD ]
Line_8 $$ String requestLine = headers.getValue(0)-->Line_10 $$ requestLine.lastIndexOf(' ')[ FD ]
Line_3 $$ public void run() -->Line_11 $$ String URIString = requestLine.substring(first + 1, second)[ CD ]
Line_11 $$ String URIString = requestLine.substring(first + 1, second)-->Line_11 $$ requestLine.substring(first + 1, second)[ CD ]
Line_8 $$ String requestLine = headers.getValue(0)-->Line_11 $$ requestLine.substring(first + 1, second)[ FD ]
Line_10 $$ int second = requestLine.lastIndexOf(' ')-->Line_11 $$ requestLine.substring(first + 1, second)[ FD ]
Line_3 $$ public void run() -->Line_12 $$ URI requestURI = new URI(URIString)[ CD ]
Line_3 $$ public void run() -->Line_13 $$ if (requestURI.getFragment() != null)
    os.write(replyFAILED.getBytes("UTF-8"));
else
    os.write(replyOK.getBytes("UTF-8"));[ CD ]
Line_12 $$ URI requestURI = new URI(URIString)-->Line_13 $$ requestURI.getFragment()[ FD ]
Line_13 $$ if (requestURI.getFragment() != null)
    os.write(replyFAILED.getBytes("UTF-8"));
else
    os.write(replyOK.getBytes("UTF-8"));-->Line_14 $$ os.write(replyFAILED.getBytes("UTF-8"))[ CD ]
Line_6 $$ OutputStream os = sock.getOutputStream()-->Line_14 $$ os.write(replyFAILED.getBytes("UTF-8"))[ FD ]
Line_13 $$ if (requestURI.getFragment() != null)
    os.write(replyFAILED.getBytes("UTF-8"));
else
    os.write(replyOK.getBytes("UTF-8"));-->Line_16 $$ os.write(replyOK.getBytes("UTF-8"))[ CD ]
Line_6 $$ OutputStream os = sock.getOutputStream()-->Line_16 $$ os.write(replyOK.getBytes("UTF-8"))[ FD ]
