Line_0 $$ Entry-->Line_2 $$ //12
public class func [ CD ]
Line_2 $$ //12
public class func -->Line_3 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) [ CD ]
Line_3 $$ public void NetconfProtocolSession(ProtocolSessionContext protocolSessionContext, String sessionID) -->Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) [ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_4 $$ authentication.equals(SessionContext.AuthType.PASSWORD)[ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_5 $$ context.setAuthenticationType(SessionContext.AuthType.PASSWORD)[ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_8 $$ String userName = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.USERNAME)[ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_9 $$ String password = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.PASSWORD)[ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_11 $$ String userInfo = userName + ":" + password[ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_12 $$ URI uri1 = new URI(uri)[ CD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_13 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())[ CD ]
Line_12 $$ URI uri1 = new URI(uri)-->Line_13 $$ uri1.getScheme()[ FD ]
Line_12 $$ URI uri1 = new URI(uri)-->Line_14 $$ uri1.getHost()[ FD ]
Line_12 $$ URI uri1 = new URI(uri)-->Line_14 $$ uri1.getPort()[ FD ]
Line_12 $$ URI uri1 = new URI(uri)-->Line_15 $$ uri1.getPath()[ FD ]
Line_12 $$ URI uri1 = new URI(uri)-->Line_15 $$ uri1.getQuery()[ FD ]
Line_12 $$ URI uri1 = new URI(uri)-->Line_16 $$ uri1.getFragment()[ FD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_18 $$ context.setURI(uri2)[ CD ]
Line_13 $$ URI uri2 = new URI(uri1.getScheme(), userInfo, uri1.getHost(), uri1.getPort(), uri1.getPath(), uri1.getQuery(), uri1.getFragment())-->Line_18 $$ context.setURI(uri2)[ FD ]
Line_4 $$ if (authentication.equals(SessionContext.AuthType.PASSWORD)) -->Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) [ CD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_21 $$ authentication.equals(SessionContext.AuthType.PUBLICKEY)[ CD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_23 $$ String keyURI = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH)[ CD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_24 $$ if ((keyURI == null) || (keyURI.length() == 0)) [ CD ]
Line_23 $$ String keyURI = (String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH)-->Line_24 $$ keyURI.length()[ FD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_29 $$ context.setKeyUsername((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_USERNAME))[ CD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_30 $$ context.setKeyPassword((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PASSPHRASE))[ CD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_31 $$ context.setKeyLocation((String) protocolSessionContext.getSessionParameters().get(ProtocolSessionContext.KEY_PATH))[ CD ]
Line_21 $$ if (authentication.equals(SessionContext.AuthType.PUBLICKEY)) -->Line_32 $$ context.setAuthenticationType(SessionContext.AuthType.PUBLICKEY)[ CD ]
