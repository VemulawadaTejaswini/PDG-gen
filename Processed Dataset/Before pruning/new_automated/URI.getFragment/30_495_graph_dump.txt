Line_0 $$ Entry-->Line_2 $$ //30
public class func [ CD ]
Line_2 $$ //30
public class func -->Line_3 $$ public void toHTTP(URI uri) [ CD ]
Line_3 $$ public void toHTTP(URI uri) -->Line_4 $$ if (uri == null)
    return uri;[ CD ]
Line_4 $$ if (uri == null)
    return uri;-->Line_5 $$ return uri;[ CD ]
Line_3 $$ public void toHTTP(URI uri) -->Line_6 $$ String scheme = uri.getScheme()[ CD ]
Line_6 $$ String scheme = uri.getScheme()-->Line_6 $$ uri.getScheme()[ CD ]
Line_3 $$ public void toHTTP(URI uri) -->Line_7 $$ if (HTTP_SCHEME.equals(scheme) || HTTPS_SCHEME.equals(scheme))
    return uri;[ CD ]
Line_6 $$ String scheme = uri.getScheme()-->Line_7 $$ HTTP_SCHEME.equals(scheme)[ FD ]
Line_6 $$ String scheme = uri.getScheme()-->Line_7 $$ HTTPS_SCHEME.equals(scheme)[ FD ]
Line_7 $$ if (HTTP_SCHEME.equals(scheme) || HTTPS_SCHEME.equals(scheme))
    return uri;-->Line_8 $$ return uri;[ CD ]
Line_3 $$ public void toHTTP(URI uri) -->Line_9 $$ if (SyncUtils.READER_HTTPS_SCHEME.equals(scheme))
    newScheme = HTTPS_SCHEME;[ CD ]
Line_6 $$ String scheme = uri.getScheme()-->Line_9 $$ if (SyncUtils.READER_HTTPS_SCHEME.equals(scheme))
    newScheme = HTTPS_SCHEME;[ FD ]
Line_9 $$ if (SyncUtils.READER_HTTPS_SCHEME.equals(scheme))
    newScheme = HTTPS_SCHEME;-->Line_9 $$ SyncUtils.READER_HTTPS_SCHEME.equals(scheme)[ CD ]
Line_6 $$ String scheme = uri.getScheme()-->Line_9 $$ SyncUtils.READER_HTTPS_SCHEME.equals(scheme)[ FD ]
Line_3 $$ public void toHTTP(URI uri) -->Line_11 $$ return new URI(newScheme, uri.getUserInfo(), uri.getHost(), uri.getPort(), uri.getPath(), uri.getQuery(), uri.getFragment());[ CD ]
