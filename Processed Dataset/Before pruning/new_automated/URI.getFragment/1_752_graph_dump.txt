Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void copyAndConfigureFiles(Job job, Path submitJobDir, short replication) [ CD ]
Line_3 $$ public void copyAndConfigureFiles(Job job, Path submitJobDir, short replication) -->Line_4 $$ Path tmp = new Path(tmpURI)[ CD ]
Line_3 $$ public void copyAndConfigureFiles(Job job, Path submitJobDir, short replication) -->Line_5 $$ Path newPath = copyRemoteFiles(archivesDir, tmp, conf, replication)[ CD ]
Line_5 $$ Path newPath = copyRemoteFiles(archivesDir, tmp, conf, replication)-->Line_5 $$ copyRemoteFiles(archivesDir, tmp, conf, replication)[ CD ]
Line_4 $$ Path tmp = new Path(tmpURI)-->Line_5 $$ copyRemoteFiles(archivesDir, tmp, conf, replication)[ FD ]
Line_3 $$ public void copyAndConfigureFiles(Job job, Path submitJobDir, short replication) -->Line_7 $$ URI pathURI = getPathURI(newPath, tmpURI.getFragment())[ CD ]
Line_7 $$ URI pathURI = getPathURI(newPath, tmpURI.getFragment())-->Line_7 $$ getPathURI(newPath, tmpURI.getFragment())[ CD ]
Line_5 $$ Path newPath = copyRemoteFiles(archivesDir, tmp, conf, replication)-->Line_7 $$ getPathURI(newPath, tmpURI.getFragment())[ FD ]
Line_3 $$ public void copyAndConfigureFiles(Job job, Path submitJobDir, short replication) -->Line_8 $$ DistributedCache.addCacheArchive(pathURI, conf)[ CD ]
Line_7 $$ URI pathURI = getPathURI(newPath, tmpURI.getFragment())-->Line_8 $$ DistributedCache.addCacheArchive(pathURI, conf)[ FD ]
