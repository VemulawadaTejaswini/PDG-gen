Line_0 $$ Entry-->Line_2 $$ //109
public class func [ CD ]
Line_2 $$ //109
public class func -->Line_3 $$ public void testEscapeResolvedUrl() [ CD ]
Line_3 $$ public void testEscapeResolvedUrl() -->Line_4 $$ String escaped = RealCDXExtractorOutput.resolve(context, spec)[ CD ]
Line_4 $$ String escaped = RealCDXExtractorOutput.resolve(context, spec)-->Line_4 $$ RealCDXExtractorOutput.resolve(context, spec)[ CD ]
Line_3 $$ public void testEscapeResolvedUrl() -->Line_5 $$ assertTrue(escaped.indexOf(" ") < 0)[ CD ]
Line_4 $$ String escaped = RealCDXExtractorOutput.resolve(context, spec)-->Line_5 $$ escaped.indexOf(" ")[ FD ]
Line_3 $$ public void testEscapeResolvedUrl() -->Line_6 $$ URI parsed = new URI(escaped)[ CD ]
Line_3 $$ public void testEscapeResolvedUrl() -->Line_7 $$ assertEquals("Ã¤nchor", parsed.getFragment())[ CD ]
Line_6 $$ URI parsed = new URI(escaped)-->Line_7 $$ parsed.getFragment()[ FD ]
