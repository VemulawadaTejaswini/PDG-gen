Line_0 $$ Entry-->Line_2 $$ //29
public class func [ CD ]
Line_2 $$ //29
public class func -->Line_3 $$ public void updatePortAndScheme(final URI uri) [ CD ]
Line_3 $$ public void updatePortAndScheme(final URI uri) -->Line_4 $$ int port = uri.getPort()[ CD ]
Line_4 $$ int port = uri.getPort()-->Line_4 $$ uri.getPort()[ CD ]
Line_3 $$ public void updatePortAndScheme(final URI uri) -->Line_5 $$ if (UseHttpForHttpsProcessor.this.portMapping.containsKey(port)) [ CD ]
Line_4 $$ int port = uri.getPort()-->Line_5 $$ if (UseHttpForHttpsProcessor.this.portMapping.containsKey(port)) [ FD ]
Line_5 $$ if (UseHttpForHttpsProcessor.this.portMapping.containsKey(port)) -->Line_5 $$ UseHttpForHttpsProcessor.this.portMapping.containsKey(port)[ CD ]
Line_4 $$ int port = uri.getPort()-->Line_5 $$ UseHttpForHttpsProcessor.this.portMapping.containsKey(port)[ FD ]
Line_5 $$ if (UseHttpForHttpsProcessor.this.portMapping.containsKey(port)) -->Line_6 $$ port = UseHttpForHttpsProcessor.this.portMapping.get(port)[ CD ]
Line_4 $$ int port = uri.getPort()-->Line_6 $$ port = UseHttpForHttpsProcessor.this.portMapping.get(port)[ FD ]
Line_6 $$ port = UseHttpForHttpsProcessor.this.portMapping.get(port)-->Line_6 $$ port = UseHttpForHttpsProcessor.this.portMapping.get(port)[ FD ]
Line_6 $$ port = UseHttpForHttpsProcessor.this.portMapping.get(port)-->Line_6 $$ UseHttpForHttpsProcessor.this.portMapping.get(port)[ CD ]
Line_4 $$ int port = uri.getPort()-->Line_6 $$ UseHttpForHttpsProcessor.this.portMapping.get(port)[ FD ]
Line_6 $$ port = UseHttpForHttpsProcessor.this.portMapping.get(port)-->Line_6 $$ UseHttpForHttpsProcessor.this.portMapping.get(port)[ FD ]
