Line_0 $$ Entry-->Line_2 $$ //59
public class func [ CD ]
Line_2 $$ //59
public class func -->Line_3 $$ public void fromUri(final URI uri, final HttpMethod method) [ CD ]
Line_3 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_4 $$ int newPort = uri.getPort()[ CD ]
Line_4 $$ int newPort = uri.getPort()-->Line_4 $$ uri.getPort()[ CD ]
Line_3 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_5 $$ if (newPort < 0) [ CD ]
Line_4 $$ int newPort = uri.getPort()-->Line_5 $$ if (newPort < 0) [ FD ]
Line_4 $$ int newPort = uri.getPort()-->Line_7 $$ newPort = uri.toURL().getDefaultPort()[ FD ]
Line_7 $$ newPort = uri.toURL().getDefaultPort()-->Line_7 $$ newPort = uri.toURL().getDefaultPort()[ FD ]
Line_7 $$ newPort = uri.toURL().getDefaultPort()-->Line_7 $$ uri.toURL().getDefaultPort()[ CD ]
Line_4 $$ int newPort = uri.getPort()-->Line_9 $$ newPort = ANY_PORT[ FD ]
Line_7 $$ newPort = uri.toURL().getDefaultPort()-->Line_9 $$ newPort = ANY_PORT[ FD ]
Line_9 $$ newPort = ANY_PORT-->Line_9 $$ newPort = ANY_PORT[ FD ]
Line_3 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_12 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method);[ CD ]
