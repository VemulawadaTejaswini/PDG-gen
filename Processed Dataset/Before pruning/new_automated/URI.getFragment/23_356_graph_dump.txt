Line_0 $$ Entry-->Line_2 $$ //23
public class func [ CD ]
Line_2 $$ //23
public class func -->Line_3 $$ public void intParseURL(String str) [ CD ]
Line_3 $$ public void intParseURL(String str) -->Line_4 $$ URI uri = new URI(str)[ CD ]
Line_3 $$ public void intParseURL(String str) -->Line_5 $$ if (uri.isOpaque()) [ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_5 $$ if (uri.isOpaque()) [ FD ]
Line_5 $$ if (uri.isOpaque()) -->Line_5 $$ uri.isOpaque()[ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_5 $$ uri.isOpaque()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_9 $$ if (uri.getFragment() != null) [ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_9 $$ uri.getFragment()[ FD ]
Line_9 $$ if (uri.getFragment() != null) -->Line_12 $$ if (uri.getQuery() != null) [ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_12 $$ uri.getQuery()[ FD ]
Line_12 $$ if (uri.getQuery() != null) -->Line_15 $$ if (uri.getUserInfo() != null) [ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_15 $$ uri.getUserInfo()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_19 $$ String scheme = uri.getScheme()[ CD ]
Line_19 $$ String scheme = uri.getScheme()-->Line_19 $$ uri.getScheme()[ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_19 $$ uri.getScheme()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_20 $$ if (scheme != null && !scheme.equals("rmi")) [ CD ]
Line_20 $$ !scheme.equals("rmi")-->Line_20 $$ scheme.equals("rmi")[ CD ]
Line_19 $$ String scheme = uri.getScheme()-->Line_20 $$ scheme.equals("rmi")[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_23 $$ String name = uri.getPath()[ CD ]
Line_23 $$ String name = uri.getPath()-->Line_23 $$ uri.getPath()[ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_23 $$ uri.getPath()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_24 $$ if (name != null) [ CD ]
Line_23 $$ String name = uri.getPath()-->Line_24 $$ if (name != null) [ FD ]
Line_24 $$ if (name != null) -->Line_25 $$ if (name.startsWith("/")) [ CD ]
Line_23 $$ String name = uri.getPath()-->Line_25 $$ if (name.startsWith("/")) [ FD ]
Line_25 $$ if (name.startsWith("/")) -->Line_25 $$ name.startsWith("/")[ CD ]
Line_23 $$ String name = uri.getPath()-->Line_25 $$ name.startsWith("/")[ FD ]
Line_25 $$ if (name.startsWith("/")) -->Line_26 $$ name = name.substring(1)[ CD ]
Line_23 $$ String name = uri.getPath()-->Line_26 $$ name = name.substring(1)[ FD ]
Line_26 $$ name = name.substring(1)-->Line_26 $$ name = name.substring(1)[ FD ]
Line_26 $$ name = name.substring(1)-->Line_26 $$ name.substring(1)[ CD ]
Line_23 $$ String name = uri.getPath()-->Line_26 $$ name.substring(1)[ FD ]
Line_26 $$ name = name.substring(1)-->Line_26 $$ name.substring(1)[ FD ]
Line_24 $$ if (name != null) -->Line_28 $$ if (name.length() == 0) [ CD ]
Line_23 $$ String name = uri.getPath()-->Line_28 $$ name.length()[ FD ]
Line_26 $$ name = name.substring(1)-->Line_28 $$ name.length()[ FD ]
Line_28 $$ if (name.length() == 0) -->Line_29 $$ name = null[ CD ]
Line_23 $$ String name = uri.getPath()-->Line_29 $$ name = null[ FD ]
Line_26 $$ name = name.substring(1)-->Line_29 $$ name = null[ FD ]
Line_29 $$ name = null-->Line_29 $$ name = null[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_32 $$ String host = uri.getHost()[ CD ]
Line_32 $$ String host = uri.getHost()-->Line_32 $$ uri.getHost()[ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_32 $$ uri.getHost()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_33 $$ if (host == null) [ CD ]
Line_32 $$ String host = uri.getHost()-->Line_33 $$ if (host == null) [ FD ]
Line_33 $$ if (host == null) -->Line_34 $$ host = ""[ CD ]
Line_32 $$ String host = uri.getHost()-->Line_34 $$ host = ""[ FD ]
Line_34 $$ host = ""-->Line_34 $$ host = ""[ FD ]
Line_4 $$ URI uri = new URI(str)-->Line_42 $$ uri.parseServerAuthority()[ FD ]
Line_45 $$ String authority = uri.getAuthority()-->Line_45 $$ uri.getAuthority()[ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_45 $$ uri.getAuthority()[ FD ]
Line_45 $$ String authority = uri.getAuthority()-->Line_46 $$ authority.startsWith(":")[ FD ]
Line_46 $$ if (authority != null && authority.startsWith(":")) -->Line_48 $$ authority = "localhost" + authority[ CD ]
Line_45 $$ String authority = uri.getAuthority()-->Line_48 $$ authority = "localhost" + authority[ FD ]
Line_48 $$ authority = "localhost" + authority-->Line_48 $$ authority = "localhost" + authority[ FD ]
Line_45 $$ String authority = uri.getAuthority()-->Line_48 $$ authority = "localhost" + authority[ FD ]
Line_48 $$ authority = "localhost" + authority-->Line_48 $$ authority = "localhost" + authority[ FD ]
Line_4 $$ URI uri = new URI(str)-->Line_50 $$ uri = new URI(null, authority, null, null, null)[ FD ]
Line_50 $$ uri = new URI(null, authority, null, null, null)-->Line_50 $$ uri = new URI(null, authority, null, null, null)[ FD ]
Line_4 $$ URI uri = new URI(str)-->Line_53 $$ uri.parseServerAuthority()[ FD ]
Line_50 $$ uri = new URI(null, authority, null, null, null)-->Line_53 $$ uri.parseServerAuthority()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_64 $$ int port = uri.getPort()[ CD ]
Line_64 $$ int port = uri.getPort()-->Line_64 $$ uri.getPort()[ CD ]
Line_4 $$ URI uri = new URI(str)-->Line_64 $$ uri.getPort()[ FD ]
Line_50 $$ uri = new URI(null, authority, null, null, null)-->Line_64 $$ uri.getPort()[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_65 $$ if (port == -1) [ CD ]
Line_64 $$ int port = uri.getPort()-->Line_65 $$ if (port == -1) [ FD ]
Line_65 $$ if (port == -1) -->Line_66 $$ port = Registry.REGISTRY_PORT[ CD ]
Line_64 $$ int port = uri.getPort()-->Line_66 $$ port = Registry.REGISTRY_PORT[ FD ]
Line_66 $$ port = Registry.REGISTRY_PORT-->Line_66 $$ port = Registry.REGISTRY_PORT[ FD ]
Line_3 $$ public void intParseURL(String str) -->Line_68 $$ return new ParsedNamingURL(host, port, name);[ CD ]
