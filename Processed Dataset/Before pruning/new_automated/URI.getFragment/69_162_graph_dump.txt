Line_0 $$ Entry-->Line_2 $$ //69
public class func [ CD ]
Line_2 $$ //69
public class func -->Line_3 $$ public void processFiles(File jobLocDir, @Nullable Object[] files, boolean download, boolean extract, @Nullable Collection<URL> clsPathUrls, @Nullable String rsrcNameProp) [ CD ]
Line_4 $$ Object pathObj-->Line_8 $$ if (pathObj instanceof URI) [ FD ]
Line_8 $$ if (pathObj instanceof URI) -->Line_9 $$ URI uri = (URI) pathObj[ CD ]
Line_8 $$ if (pathObj instanceof URI) -->Line_11 $$ locName = uri.getFragment()[ CD ]
Line_5 $$ String locName = null-->Line_11 $$ locName = uri.getFragment()[ FD ]
Line_11 $$ locName = uri.getFragment()-->Line_11 $$ locName = uri.getFragment()[ FD ]
Line_11 $$ locName = uri.getFragment()-->Line_11 $$ uri.getFragment()[ CD ]
Line_9 $$ URI uri = (URI) pathObj-->Line_11 $$ uri.getFragment()[ FD ]
Line_8 $$ if (pathObj instanceof URI) -->Line_13 $$ srcPath = new Path(uri)[ CD ]
Line_6 $$ Path srcPath-->Line_13 $$ srcPath = new Path(uri)[ FD ]
Line_13 $$ srcPath = new Path(uri)-->Line_13 $$ srcPath = new Path(uri)[ FD ]
Line_8 $$ if (pathObj instanceof URI) -->Line_16 $$ srcPath = (Path) pathObj[ CD ]
Line_6 $$ Path srcPath-->Line_16 $$ srcPath = (Path) pathObj[ FD ]
Line_13 $$ srcPath = new Path(uri)-->Line_16 $$ srcPath = (Path) pathObj[ FD ]
Line_16 $$ srcPath = (Path) pathObj-->Line_16 $$ srcPath = (Path) pathObj[ FD ]
Line_5 $$ String locName = null-->Line_18 $$ if (locName == null)
    locName = srcPath.getName();[ FD ]
Line_11 $$ locName = uri.getFragment()-->Line_18 $$ if (locName == null)
    locName = srcPath.getName();[ FD ]
Line_18 $$ if (locName == null)
    locName = srcPath.getName();-->Line_19 $$ locName = srcPath.getName()[ CD ]
Line_5 $$ String locName = null-->Line_19 $$ locName = srcPath.getName()[ FD ]
Line_11 $$ locName = uri.getFragment()-->Line_19 $$ locName = srcPath.getName()[ FD ]
Line_19 $$ locName = srcPath.getName()-->Line_19 $$ locName = srcPath.getName()[ FD ]
Line_19 $$ locName = srcPath.getName()-->Line_19 $$ srcPath.getName()[ CD ]
Line_6 $$ Path srcPath-->Line_19 $$ srcPath.getName()[ FD ]
Line_13 $$ srcPath = new Path(uri)-->Line_19 $$ srcPath.getName()[ FD ]
Line_16 $$ srcPath = (Path) pathObj-->Line_19 $$ srcPath.getName()[ FD ]
Line_5 $$ String locName = null-->Line_23 $$ res.add(locName)[ FD ]
Line_11 $$ locName = uri.getFragment()-->Line_23 $$ res.add(locName)[ FD ]
Line_19 $$ locName = srcPath.getName()-->Line_23 $$ res.add(locName)[ FD ]
Line_21 $$ File dstPath = new File(jobLocDir.getAbsolutePath(), locName)-->Line_25 $$ rsrcSet.add(dstPath)[ FD ]
Line_27 $$ if (clsPathUrls != null)
    clsPathUrls.add(dstPath.toURI().toURL());-->Line_28 $$ clsPathUrls.add(dstPath.toURI().toURL())[ CD ]
Line_21 $$ File dstPath = new File(jobLocDir.getAbsolutePath(), locName)-->Line_28 $$ dstPath.toURI()[ FD ]
Line_30 $$ if (!download)
    continue;-->Line_30 $$ !download[ CD ]
Line_33 $$ JobConf cfg = ctx.getJobConf()-->Line_33 $$ ctx.getJobConf()[ CD ]
Line_35 $$ FileSystem dstFs = FileSystem.getLocal(cfg)-->Line_35 $$ FileSystem.getLocal(cfg)[ CD ]
Line_33 $$ JobConf cfg = ctx.getJobConf()-->Line_35 $$ FileSystem.getLocal(cfg)[ FD ]
Line_37 $$ FileSystem srcFs = srcPath.getFileSystem(cfg)-->Line_37 $$ srcPath.getFileSystem(cfg)[ CD ]
Line_6 $$ Path srcPath-->Line_37 $$ srcPath.getFileSystem(cfg)[ FD ]
Line_13 $$ srcPath = new Path(uri)-->Line_37 $$ srcPath.getFileSystem(cfg)[ FD ]
Line_16 $$ srcPath = (Path) pathObj-->Line_37 $$ srcPath.getFileSystem(cfg)[ FD ]
Line_33 $$ JobConf cfg = ctx.getJobConf()-->Line_37 $$ srcPath.getFileSystem(cfg)[ FD ]
Line_39 $$ if (extract) -->Line_40 $$ File archivesPath = new File(jobLocDir.getAbsolutePath(), ".cached-archives")[ CD ]
Line_39 $$ if (extract) -->Line_42 $$ if (!archivesPath.exists() && !archivesPath.mkdir())
    throw new IOException("Failed to create directory " + "[path=" + archivesPath + ", jobId=" + jobId + ']');[ CD ]
Line_42 $$ !archivesPath.exists()-->Line_42 $$ archivesPath.exists()[ CD ]
Line_40 $$ File archivesPath = new File(jobLocDir.getAbsolutePath(), ".cached-archives")-->Line_42 $$ archivesPath.exists()[ FD ]
Line_42 $$ !archivesPath.mkdir()-->Line_42 $$ archivesPath.mkdir()[ CD ]
Line_40 $$ File archivesPath = new File(jobLocDir.getAbsolutePath(), ".cached-archives")-->Line_42 $$ archivesPath.mkdir()[ FD ]
Line_39 $$ if (extract) -->Line_46 $$ File archiveFile = new File(archivesPath, locName)[ CD ]
Line_39 $$ if (extract) -->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ CD ]
Line_37 $$ FileSystem srcFs = srcPath.getFileSystem(cfg)-->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ FD ]
Line_6 $$ Path srcPath-->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ FD ]
Line_13 $$ srcPath = new Path(uri)-->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ FD ]
Line_16 $$ srcPath = (Path) pathObj-->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ FD ]
Line_35 $$ FileSystem dstFs = FileSystem.getLocal(cfg)-->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ FD ]
Line_33 $$ JobConf cfg = ctx.getJobConf()-->Line_48 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(archiveFile.toString()), false, cfg)[ FD ]
Line_46 $$ File archiveFile = new File(archivesPath, locName)-->Line_48 $$ archiveFile.toString()[ FD ]
Line_39 $$ if (extract) -->Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()[ CD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_50 $$ archiveFile.getName().toLowerCase()[ CD ]
Line_46 $$ File archiveFile = new File(archivesPath, locName)-->Line_50 $$ archiveFile.getName()[ FD ]
Line_39 $$ if (extract) -->Line_52 $$ if (archiveNameLC.endsWith(".jar"))
    RunJar.unJar(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');[ CD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_52 $$ if (archiveNameLC.endsWith(".jar"))
    RunJar.unJar(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');[ FD ]
Line_52 $$ if (archiveNameLC.endsWith(".jar"))
    RunJar.unJar(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_52 $$ archiveNameLC.endsWith(".jar")[ CD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_52 $$ archiveNameLC.endsWith(".jar")[ FD ]
Line_52 $$ if (archiveNameLC.endsWith(".jar"))
    RunJar.unJar(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_53 $$ RunJar.unJar(archiveFile, dstPath)[ CD ]
Line_46 $$ File archiveFile = new File(archivesPath, locName)-->Line_53 $$ RunJar.unJar(archiveFile, dstPath)[ FD ]
Line_21 $$ File dstPath = new File(jobLocDir.getAbsolutePath(), locName)-->Line_53 $$ RunJar.unJar(archiveFile, dstPath)[ FD ]
Line_52 $$ if (archiveNameLC.endsWith(".jar"))
    RunJar.unJar(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_54 $$ if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');[ CD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_54 $$ if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');[ FD ]
Line_54 $$ if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_54 $$ archiveNameLC.endsWith(".zip")[ CD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_54 $$ archiveNameLC.endsWith(".zip")[ FD ]
Line_54 $$ if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_55 $$ FileUtil.unZip(archiveFile, dstPath)[ CD ]
Line_46 $$ File archiveFile = new File(archivesPath, locName)-->Line_55 $$ FileUtil.unZip(archiveFile, dstPath)[ FD ]
Line_21 $$ File dstPath = new File(jobLocDir.getAbsolutePath(), locName)-->Line_55 $$ FileUtil.unZip(archiveFile, dstPath)[ FD ]
Line_54 $$ if (archiveNameLC.endsWith(".zip"))
    FileUtil.unZip(archiveFile, dstPath);
else if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_56 $$ if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');[ CD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_56 $$ archiveNameLC.endsWith(".tar.gz")[ FD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_57 $$ archiveNameLC.endsWith(".tgz")[ FD ]
Line_50 $$ String archiveNameLC = archiveFile.getName().toLowerCase()-->Line_58 $$ archiveNameLC.endsWith(".tar")[ FD ]
Line_56 $$ if (archiveNameLC.endsWith(".tar.gz") || archiveNameLC.endsWith(".tgz") || archiveNameLC.endsWith(".tar"))
    FileUtil.unTar(archiveFile, dstPath);
else
    throw new IOException("Cannot unpack archive [path=" + srcPath + ", jobId=" + jobId + ']');-->Line_59 $$ FileUtil.unTar(archiveFile, dstPath)[ CD ]
Line_46 $$ File archiveFile = new File(archivesPath, locName)-->Line_59 $$ FileUtil.unTar(archiveFile, dstPath)[ FD ]
Line_21 $$ File dstPath = new File(jobLocDir.getAbsolutePath(), locName)-->Line_59 $$ FileUtil.unTar(archiveFile, dstPath)[ FD ]
Line_39 $$ if (extract) -->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ CD ]
Line_37 $$ FileSystem srcFs = srcPath.getFileSystem(cfg)-->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ FD ]
Line_6 $$ Path srcPath-->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ FD ]
Line_13 $$ srcPath = new Path(uri)-->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ FD ]
Line_16 $$ srcPath = (Path) pathObj-->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ FD ]
Line_35 $$ FileSystem dstFs = FileSystem.getLocal(cfg)-->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ FD ]
Line_33 $$ JobConf cfg = ctx.getJobConf()-->Line_64 $$ FileUtil.copy(srcFs, srcPath, dstFs, new Path(dstPath.toString()), false, cfg)[ FD ]
Line_21 $$ File dstPath = new File(jobLocDir.getAbsolutePath(), locName)-->Line_64 $$ dstPath.toString()[ FD ]
