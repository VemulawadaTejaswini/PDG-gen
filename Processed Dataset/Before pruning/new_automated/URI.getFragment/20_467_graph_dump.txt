Line_0 $$ Entry-->Line_2 $$ //20
public class func [ CD ]
Line_2 $$ //20
public class func -->Line_3 $$ public void upOne(URI uri) [ CD ]
Line_3 $$ public void upOne(URI uri) -->Line_4 $$ String tmpstr = uri.toString()[ CD ]
Line_4 $$ String tmpstr = uri.toString()-->Line_4 $$ uri.toString()[ CD ]
Line_3 $$ public void upOne(URI uri) -->Line_5 $$ String frag = uri.getFragment()[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_5 $$ uri.getFragment()[ CD ]
Line_3 $$ public void upOne(URI uri) -->Line_6 $$ if (frag != null && !frag.isEmpty())
    index = tmpstr.length() - frag.length() - 1;
else [ CD ]
Line_6 $$ !frag.isEmpty()-->Line_6 $$ frag.isEmpty()[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_6 $$ frag.isEmpty()[ FD ]
Line_4 $$ String tmpstr = uri.toString()-->Line_6 $$ tmpstr.length()[ FD ]
Line_5 $$ String frag = uri.getFragment()-->Line_6 $$ frag.length()[ FD ]
Line_6 $$ if (frag != null && !frag.isEmpty())
    index = tmpstr.length() - frag.length() - 1;
else -->Line_8 $$ frag = uri.getQuery()[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_8 $$ frag = uri.getQuery()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_8 $$ frag = uri.getQuery()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_8 $$ uri.getQuery()[ CD ]
Line_6 $$ if (frag != null && !frag.isEmpty())
    index = tmpstr.length() - frag.length() - 1;
else -->Line_9 $$ if (frag != null && !frag.isEmpty())
    index = tmpstr.length() - frag.length() - 1;
else [ CD ]
Line_9 $$ !frag.isEmpty()-->Line_9 $$ frag.isEmpty()[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_9 $$ frag.isEmpty()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_9 $$ frag.isEmpty()[ FD ]
Line_4 $$ String tmpstr = uri.toString()-->Line_9 $$ tmpstr.length()[ FD ]
Line_5 $$ String frag = uri.getFragment()-->Line_9 $$ frag.length()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_9 $$ frag.length()[ FD ]
Line_9 $$ if (frag != null && !frag.isEmpty())
    index = tmpstr.length() - frag.length() - 1;
else -->Line_11 $$ frag = uri.getPath()[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_11 $$ frag = uri.getPath()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_11 $$ frag = uri.getPath()[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_11 $$ frag = uri.getPath()[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_11 $$ uri.getPath()[ CD ]
Line_9 $$ if (frag != null && !frag.isEmpty())
    index = tmpstr.length() - frag.length() - 1;
else -->Line_12 $$ if (frag != null && !frag.isEmpty()) [ CD ]
Line_12 $$ !frag.isEmpty()-->Line_12 $$ frag.isEmpty()[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_12 $$ frag.isEmpty()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_12 $$ frag.isEmpty()[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_12 $$ frag.isEmpty()[ FD ]
Line_12 $$ if (frag != null && !frag.isEmpty()) -->Line_13 $$ int i = frag.lastIndexOf('/')[ CD ]
Line_13 $$ int i = frag.lastIndexOf('/')-->Line_13 $$ frag.lastIndexOf('/')[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_13 $$ frag.lastIndexOf('/')[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_13 $$ frag.lastIndexOf('/')[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_13 $$ frag.lastIndexOf('/')[ FD ]
Line_12 $$ if (frag != null && !frag.isEmpty()) -->Line_14 $$ boolean trimslash = false[ CD ]
Line_12 $$ if (frag != null && !frag.isEmpty()) -->Line_16 $$ // If it ends with a slash, remove that too
if (i == frag.length() - 1) [ CD ]
Line_13 $$ int i = frag.lastIndexOf('/')-->Line_16 $$ // If it ends with a slash, remove that too
if (i == frag.length() - 1) [ FD ]
Line_5 $$ String frag = uri.getFragment()-->Line_16 $$ frag.length()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_16 $$ frag.length()[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_16 $$ frag.length()[ FD ]
Line_16 $$ // If it ends with a slash, remove that too
if (i == frag.length() - 1) -->Line_17 $$ trimslash = true[ CD ]
Line_14 $$ boolean trimslash = false-->Line_17 $$ trimslash = true[ FD ]
Line_17 $$ trimslash = true-->Line_17 $$ trimslash = true[ FD ]
Line_16 $$ // If it ends with a slash, remove that too
if (i == frag.length() - 1) -->Line_18 $$ frag = frag.substring(0, i)[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_18 $$ frag = frag.substring(0, i)[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_18 $$ frag = frag.substring(0, i)[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_18 $$ frag = frag.substring(0, i)[ FD ]
Line_18 $$ frag = frag.substring(0, i)-->Line_18 $$ frag = frag.substring(0, i)[ FD ]
Line_18 $$ frag = frag.substring(0, i)-->Line_18 $$ frag.substring(0, i)[ CD ]
Line_5 $$ String frag = uri.getFragment()-->Line_18 $$ frag.substring(0, i)[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_18 $$ frag.substring(0, i)[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_18 $$ frag.substring(0, i)[ FD ]
Line_18 $$ frag = frag.substring(0, i)-->Line_18 $$ frag.substring(0, i)[ FD ]
Line_13 $$ int i = frag.lastIndexOf('/')-->Line_18 $$ frag.substring(0, i)[ FD ]
Line_4 $$ String tmpstr = uri.toString()-->Line_20 $$ tmpstr.length()[ FD ]
Line_5 $$ String frag = uri.getFragment()-->Line_20 $$ frag.length()[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_20 $$ frag.length()[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_20 $$ frag.length()[ FD ]
Line_18 $$ frag = frag.substring(0, i)-->Line_20 $$ frag.length()[ FD ]
Line_5 $$ String frag = uri.getFragment()-->Line_20 $$ frag.lastIndexOf('/')[ FD ]
Line_8 $$ frag = uri.getQuery()-->Line_20 $$ frag.lastIndexOf('/')[ FD ]
Line_11 $$ frag = uri.getPath()-->Line_20 $$ frag.lastIndexOf('/')[ FD ]
Line_18 $$ frag = frag.substring(0, i)-->Line_20 $$ frag.lastIndexOf('/')[ FD ]
Line_3 $$ public void upOne(URI uri) -->Line_24 $$ if (index >= 0)
    return IRI.create(tmpstr.substring(0, index));
else
    return IRI.create(uri);[ CD ]
Line_24 $$ if (index >= 0)
    return IRI.create(tmpstr.substring(0, index));
else
    return IRI.create(uri);-->Line_24 $$ return IRI.create(tmpstr.substring(0, index));[ CD ]
Line_24 $$ return IRI.create(tmpstr.substring(0, index));-->Line_24 $$ IRI.create(tmpstr.substring(0, index))[ CD ]
Line_4 $$ String tmpstr = uri.toString()-->Line_24 $$ tmpstr.substring(0, index)[ FD ]
Line_24 $$ if (index >= 0)
    return IRI.create(tmpstr.substring(0, index));
else
    return IRI.create(uri);-->Line_25 $$ return IRI.create(uri);[ CD ]
Line_25 $$ return IRI.create(uri);-->Line_25 $$ IRI.create(uri)[ CD ]
