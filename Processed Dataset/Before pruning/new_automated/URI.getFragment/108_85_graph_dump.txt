Line_0 $$ Entry-->Line_2 $$ //108
public class func [ CD ]
Line_2 $$ //108
public class func -->Line_3 $$ public void apply(@Nullable final URI input) [ CD ]
Line_3 $$ public void apply(@Nullable final URI input) -->Line_4 $$ final URI uri = URI_NORMALIZER.apply(input)[ CD ]
Line_4 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_4 $$ URI_NORMALIZER.apply(input)[ CD ]
Line_3 $$ public void apply(@Nullable final URI input) -->Line_5 $$ if (uri == null)
    return null;[ CD ]
Line_4 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_5 $$ if (uri == null)
    return null;[ FD ]
Line_5 $$ if (uri == null)
    return null;-->Line_6 $$ return null;[ CD ]
Line_3 $$ public void apply(@Nullable final URI input) -->Line_7 $$ return new URI(uri.getScheme(), uri.getSchemeSpecificPart(), Optional.fromNullable(uri.getFragment()).or(""));[ CD ]
Line_4 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_7 $$ uri.getScheme()[ FD ]
Line_4 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_7 $$ uri.getSchemeSpecificPart()[ FD ]
Line_4 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_8 $$ uri.getFragment()[ FD ]
