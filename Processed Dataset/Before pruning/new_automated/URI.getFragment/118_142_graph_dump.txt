Line_0 $$ Entry-->Line_2 $$ //118
public class func [ CD ]
Line_2 $$ //118
public class func -->Line_3 $$ public void rewrite(JsonNode plan, Set<String> namesUsed, boolean debugMode, boolean revisit) [ CD ]
Line_6 $$ String filename = file.getTextValue()-->Line_6 $$ file.getTextValue()[ CD ]
Line_4 $$ JsonNode file-->Line_6 $$ file.getTextValue()[ FD ]
Line_6 $$ String filename = file.getTextValue()-->Line_8 $$ filename = cleanLatestTag(filename)[ FD ]
Line_8 $$ filename = cleanLatestTag(filename)-->Line_8 $$ filename = cleanLatestTag(filename)[ FD ]
Line_8 $$ filename = cleanLatestTag(filename)-->Line_8 $$ cleanLatestTag(filename)[ CD ]
Line_6 $$ String filename = file.getTextValue()-->Line_8 $$ cleanLatestTag(filename)[ FD ]
Line_8 $$ filename = cleanLatestTag(filename)-->Line_8 $$ cleanLatestTag(filename)[ FD ]
Line_9 $$ URI uri = null-->Line_13 $$ uri = new URI(filename)[ FD ]
Line_13 $$ uri = new URI(filename)-->Line_13 $$ uri = new URI(filename)[ FD ]
Line_10 $$ String path, fragment-->Line_14 $$ path = uri.getPath()[ FD ]
Line_14 $$ path = uri.getPath()-->Line_14 $$ path = uri.getPath()[ FD ]
Line_14 $$ path = uri.getPath()-->Line_14 $$ uri.getPath()[ CD ]
Line_9 $$ URI uri = null-->Line_14 $$ uri.getPath()[ FD ]
Line_13 $$ uri = new URI(filename)-->Line_14 $$ uri.getPath()[ FD ]
Line_10 $$ String path, fragment-->Line_15 $$ path = restoreLatestTag(path)[ FD ]
Line_14 $$ path = uri.getPath()-->Line_15 $$ path = restoreLatestTag(path)[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_15 $$ path = restoreLatestTag(path)[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_15 $$ restoreLatestTag(path)[ CD ]
Line_10 $$ String path, fragment-->Line_15 $$ restoreLatestTag(path)[ FD ]
Line_14 $$ path = uri.getPath()-->Line_15 $$ restoreLatestTag(path)[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_15 $$ restoreLatestTag(path)[ FD ]
Line_10 $$ String path, fragment-->Line_17 $$ fragment = uri.getFragment()[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_17 $$ fragment = uri.getFragment()[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_17 $$ uri.getFragment()[ CD ]
Line_9 $$ URI uri = null-->Line_17 $$ uri.getFragment()[ FD ]
Line_13 $$ uri = new URI(filename)-->Line_17 $$ uri.getFragment()[ FD ]
Line_10 $$ String path, fragment-->Line_18 $$ if (path.contains("#LATEST")) [ FD ]
Line_14 $$ path = uri.getPath()-->Line_18 $$ if (path.contains("#LATEST")) [ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_18 $$ if (path.contains("#LATEST")) [ FD ]
Line_18 $$ if (path.contains("#LATEST")) -->Line_18 $$ path.contains("#LATEST")[ CD ]
Line_10 $$ String path, fragment-->Line_18 $$ path.contains("#LATEST")[ FD ]
Line_14 $$ path = uri.getPath()-->Line_18 $$ path.contains("#LATEST")[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_18 $$ path.contains("#LATEST")[ FD ]
Line_18 $$ if (path.contains("#LATEST")) -->Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()[ CD ]
Line_10 $$ String path, fragment-->Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()[ FD ]
Line_14 $$ path = uri.getPath()-->Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()[ FD ]
Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()-->Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()[ FD ]
Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()-->Line_21 $$ FileSystemUtils.getLatestPath(fs, new Path(path)).toString()[ CD ]
Line_18 $$ if (path.contains("#LATEST")) -->Line_23 $$ path = new URI(path).getPath()[ CD ]
Line_10 $$ String path, fragment-->Line_23 $$ path = new URI(path).getPath()[ FD ]
Line_14 $$ path = uri.getPath()-->Line_23 $$ path = new URI(path).getPath()[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_23 $$ path = new URI(path).getPath()[ FD ]
Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()-->Line_23 $$ path = new URI(path).getPath()[ FD ]
Line_23 $$ path = new URI(path).getPath()-->Line_23 $$ path = new URI(path).getPath()[ FD ]
Line_23 $$ path = new URI(path).getPath()-->Line_23 $$ new URI(path).getPath()[ CD ]
Line_10 $$ String path, fragment-->Line_32 $$ // check if the fragment was already created earlier
if (fragment == null)
    fragment = symlinkMap.get(path);[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_32 $$ // check if the fragment was already created earlier
if (fragment == null)
    fragment = symlinkMap.get(path);[ FD ]
Line_32 $$ // check if the fragment was already created earlier
if (fragment == null)
    fragment = symlinkMap.get(path);-->Line_33 $$ fragment = symlinkMap.get(path)[ CD ]
Line_10 $$ String path, fragment-->Line_33 $$ fragment = symlinkMap.get(path)[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_33 $$ fragment = symlinkMap.get(path)[ FD ]
Line_33 $$ fragment = symlinkMap.get(path)-->Line_33 $$ fragment = symlinkMap.get(path)[ FD ]
Line_33 $$ fragment = symlinkMap.get(path)-->Line_33 $$ symlinkMap.get(path)[ CD ]
Line_10 $$ String path, fragment-->Line_33 $$ symlinkMap.get(path)[ FD ]
Line_14 $$ path = uri.getPath()-->Line_33 $$ symlinkMap.get(path)[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_33 $$ symlinkMap.get(path)[ FD ]
Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()-->Line_33 $$ symlinkMap.get(path)[ FD ]
Line_23 $$ path = new URI(path).getPath()-->Line_33 $$ symlinkMap.get(path)[ FD ]
Line_10 $$ String path, fragment-->Line_36 $$ // create a new one
if (fragment == null)
    fragment = "cached_" + (symlinkCounter++);[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_36 $$ // create a new one
if (fragment == null)
    fragment = "cached_" + (symlinkCounter++);[ FD ]
Line_33 $$ fragment = symlinkMap.get(path)-->Line_36 $$ // create a new one
if (fragment == null)
    fragment = "cached_" + (symlinkCounter++);[ FD ]
Line_36 $$ // create a new one
if (fragment == null)
    fragment = "cached_" + (symlinkCounter++);-->Line_37 $$ fragment = "cached_" + (symlinkCounter++)[ CD ]
Line_10 $$ String path, fragment-->Line_37 $$ fragment = "cached_" + (symlinkCounter++)[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_37 $$ fragment = "cached_" + (symlinkCounter++)[ FD ]
Line_33 $$ fragment = symlinkMap.get(path)-->Line_37 $$ fragment = "cached_" + (symlinkCounter++)[ FD ]
Line_37 $$ fragment = "cached_" + (symlinkCounter++)-->Line_37 $$ fragment = "cached_" + (symlinkCounter++)[ FD ]
Line_10 $$ String path, fragment-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_14 $$ path = uri.getPath()-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_15 $$ path = restoreLatestTag(path)-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_20 $$ path = FileSystemUtils.getLatestPath(fs, new Path(path)).toString()-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_23 $$ path = new URI(path).getPath()-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_10 $$ String path, fragment-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_17 $$ fragment = uri.getFragment()-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_33 $$ fragment = symlinkMap.get(path)-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_37 $$ fragment = "cached_" + (symlinkCounter++)-->Line_39 $$ symlinkMap.put(path, fragment)[ FD ]
Line_3 $$ public void rewrite(JsonNode plan, Set<String> namesUsed, boolean debugMode, boolean revisit) -->Line_69 $$ ((ObjectNode) job).put("cachedFiles", cachedFiles)[ CD ]
