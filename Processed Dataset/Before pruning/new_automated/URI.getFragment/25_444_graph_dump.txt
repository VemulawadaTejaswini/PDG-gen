Line_0 $$ Entry-->Line_2 $$ //25
public class func [ CD ]
Line_2 $$ //25
public class func -->Line_3 $$ public void toHttp(final URI inputUri) [ CD ]
Line_3 $$ public void toHttp(final URI inputUri) -->Line_4 $$ Objects.requireNonNull(inputUri, "Input URI must not be null")[ CD ]
Line_3 $$ public void toHttp(final URI inputUri) -->Line_5 $$ String wsScheme = inputUri.getScheme()[ CD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_5 $$ inputUri.getScheme()[ CD ]
Line_3 $$ public void toHttp(final URI inputUri) -->Line_6 $$ if ("http".equalsIgnoreCase(wsScheme) || "https".equalsIgnoreCase(wsScheme)) [ CD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_6 $$ "http".equalsIgnoreCase(wsScheme)[ FD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_6 $$ "https".equalsIgnoreCase(wsScheme)[ FD ]
Line_6 $$ if ("http".equalsIgnoreCase(wsScheme) || "https".equalsIgnoreCase(wsScheme)) -->Line_11 $$ if ("ws".equalsIgnoreCase(wsScheme)) [ CD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_11 $$ if ("ws".equalsIgnoreCase(wsScheme)) [ FD ]
Line_11 $$ if ("ws".equalsIgnoreCase(wsScheme)) -->Line_11 $$ "ws".equalsIgnoreCase(wsScheme)[ CD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_11 $$ "ws".equalsIgnoreCase(wsScheme)[ FD ]
Line_11 $$ if ("ws".equalsIgnoreCase(wsScheme)) -->Line_16 $$ if ("wss".equalsIgnoreCase(wsScheme)) [ CD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_16 $$ if ("wss".equalsIgnoreCase(wsScheme)) [ FD ]
Line_16 $$ if ("wss".equalsIgnoreCase(wsScheme)) -->Line_16 $$ "wss".equalsIgnoreCase(wsScheme)[ CD ]
Line_5 $$ String wsScheme = inputUri.getScheme()-->Line_16 $$ "wss".equalsIgnoreCase(wsScheme)[ FD ]
Line_3 $$ public void toHttp(final URI inputUri) -->Line_25 $$ return new URI(httpScheme, inputUri.getUserInfo(), inputUri.getHost(), inputUri.getPort(), inputUri.getPath(), inputUri.getQuery(), inputUri.getFragment());[ CD ]
