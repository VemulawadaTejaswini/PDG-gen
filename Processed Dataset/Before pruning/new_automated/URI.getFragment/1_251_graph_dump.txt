Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void test_equals2() [ CD ]
Line_3 $$ public void test_equals2() -->Line_4 $$ URI uri = new URI("http:///~/dictionary")[ CD ]
Line_3 $$ public void test_equals2() -->Line_5 $$ URI uri2 = new URI(uri.getScheme(), uri.getAuthority(), uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_5 $$ uri.getScheme()[ FD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_5 $$ uri.getAuthority()[ FD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_5 $$ uri.getPath()[ FD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_6 $$ uri.getQuery()[ FD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_6 $$ uri.getFragment()[ FD ]
Line_3 $$ public void test_equals2() -->Line_7 $$ assertTrue(uri2.equals(uri))[ CD ]
Line_5 $$ URI uri2 = new URI(uri.getScheme(), uri.getAuthority(), uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_7 $$ uri2.equals(uri)[ FD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_7 $$ uri2.equals(uri)[ FD ]
Line_3 $$ public void test_equals2() -->Line_8 $$ uri = new URI("http://abc.com%E2%82%AC:88/root/news")[ CD ]
Line_4 $$ URI uri = new URI("http:///~/dictionary")-->Line_8 $$ uri = new URI("http://abc.com%E2%82%AC:88/root/news")[ FD ]
Line_8 $$ uri = new URI("http://abc.com%E2%82%AC:88/root/news")-->Line_8 $$ uri = new URI("http://abc.com%E2%82%AC:88/root/news")[ FD ]
