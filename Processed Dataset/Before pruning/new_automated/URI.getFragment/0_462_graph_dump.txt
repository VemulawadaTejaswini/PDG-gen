Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void copyAndConfigureFiles(JobConf job, Path submitJobDir, short replication) [ CD ]
Line_3 $$ public void copyAndConfigureFiles(JobConf job, Path submitJobDir, short replication) -->Line_4 $$ Path tmp = new Path(tmpURI)[ CD ]
Line_3 $$ public void copyAndConfigureFiles(JobConf job, Path submitJobDir, short replication) -->Line_5 $$ Path newPath = copyRemoteFiles(fs, filesDir, tmp, job, replication)[ CD ]
Line_5 $$ Path newPath = copyRemoteFiles(fs, filesDir, tmp, job, replication)-->Line_5 $$ copyRemoteFiles(fs, filesDir, tmp, job, replication)[ CD ]
Line_4 $$ Path tmp = new Path(tmpURI)-->Line_5 $$ copyRemoteFiles(fs, filesDir, tmp, job, replication)[ FD ]
Line_3 $$ public void copyAndConfigureFiles(JobConf job, Path submitJobDir, short replication) -->Line_6 $$ URI pathURI = getPathURI(newPath, tmpURI.getFragment())[ CD ]
Line_6 $$ URI pathURI = getPathURI(newPath, tmpURI.getFragment())-->Line_6 $$ getPathURI(newPath, tmpURI.getFragment())[ CD ]
Line_5 $$ Path newPath = copyRemoteFiles(fs, filesDir, tmp, job, replication)-->Line_6 $$ getPathURI(newPath, tmpURI.getFragment())[ FD ]
Line_3 $$ public void copyAndConfigureFiles(JobConf job, Path submitJobDir, short replication) -->Line_7 $$ DistributedCache.addCacheFile(pathURI, job)[ CD ]
Line_6 $$ URI pathURI = getPathURI(newPath, tmpURI.getFragment())-->Line_7 $$ DistributedCache.addCacheFile(pathURI, job)[ FD ]
