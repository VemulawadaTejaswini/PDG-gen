Line_0 $$ Entry-->Line_2 $$ //55
public class func [ CD ]
Line_2 $$ //55
public class func -->Line_3 $$ public void identifyNewCommitResource(HttpServletRequest request, HttpServletResponse response, Repository db, String newCommit) [ CD ]
Line_3 $$ public void identifyNewCommitResource(HttpServletRequest request, HttpServletResponse response, Repository db, String newCommit) -->Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) [ CD ]
Line_3 $$ public void identifyNewCommitResource(HttpServletRequest request, HttpServletResponse response, Repository db, String newCommit) -->Line_3 $$ public void identifyNewCommitResource(HttpServletRequest request, HttpServletResponse response, Repository db, String newCommit) [ CD ]
Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) -->Line_4 $$ int i = 0[ CD ]
Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) -->Line_4 $$ i++[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) -->Line_5 $$ String s = p.segment(i)[ CD ]
Line_5 $$ String s = p.segment(i)-->Line_5 $$ p.segment(i)[ CD ]
Line_4 $$ int i = 0-->Line_5 $$ p.segment(i)[ FD ]
Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) -->Line_6 $$ if (i == 2) [ CD ]
Line_4 $$ int i = 0-->Line_6 $$ if (i == 2) [ FD ]
Line_6 $$ if (i == 2) -->Line_7 $$ s += ".." + GitUtils.encode(newCommit)[ CD ]
Line_5 $$ String s = p.segment(i)-->Line_7 $$ s += ".." + GitUtils.encode(newCommit)[ FD ]
Line_7 $$ s += ".." + GitUtils.encode(newCommit)-->Line_7 $$ s += ".." + GitUtils.encode(newCommit)[ FD ]
Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) -->Line_9 $$ np.append(s)[ CD ]
Line_5 $$ String s = p.segment(i)-->Line_9 $$ np.append(s)[ FD ]
Line_7 $$ s += ".." + GitUtils.encode(newCommit)-->Line_9 $$ np.append(s)[ FD ]
Line_3 $$ public void identifyNewCommitResource(HttpServletRequest request, HttpServletResponse response, Repository db, String newCommit) -->Line_11 $$ if (p.hasTrailingSeparator())
    np = np.addTrailingSeparator();[ CD ]
Line_11 $$ if (p.hasTrailingSeparator())
    np = np.addTrailingSeparator();-->Line_11 $$ p.hasTrailingSeparator()[ CD ]
Line_11 $$ if (p.hasTrailingSeparator())
    np = np.addTrailingSeparator();-->Line_12 $$ np.addTrailingSeparator()[ CD ]
Line_3 $$ public void identifyNewCommitResource(HttpServletRequest request, HttpServletResponse response, Repository db, String newCommit) -->Line_13 $$ URI nu = new URI(u.getScheme(), u.getUserInfo(), u.getHost(), u.getPort(), np.toString(), request.getQueryString(), u.getFragment())[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) [ FD ]
Line_4 $$ int i = 0-->Line_4 $$ for (int i = 0; i < p.segmentCount(); i++) [ FD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
Line_4 $$ int i = 0-->Line_5 $$ p.segment(i)[ FD ]
Line_4 $$ int i = 0-->Line_6 $$ if (i == 2) [ FD ]
Line_5 $$ String s = p.segment(i)-->Line_9 $$ np.append(s)[ FD ]
Line_7 $$ s += ".." + GitUtils.encode(newCommit)-->Line_9 $$ np.append(s)[ FD ]
