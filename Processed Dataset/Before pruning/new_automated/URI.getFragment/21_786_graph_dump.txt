Line_0 $$ Entry-->Line_2 $$ //21
public class func [ CD ]
Line_2 $$ //21
public class func -->Line_3 $$ public void addShareLib(Configuration conf, String[] actionShareLibNames) [ CD ]
Line_5 $$ List<Path> listOfPaths = shareLibService.getShareLibJars(actionShareLibName)-->Line_5 $$ shareLibService.getShareLibJars(actionShareLibName)[ CD ]
Line_4 $$ String actionShareLibName-->Line_5 $$ shareLibService.getShareLibJars(actionShareLibName)[ FD ]
Line_6 $$ !listOfPaths.isEmpty()-->Line_6 $$ listOfPaths.isEmpty()[ CD ]
Line_5 $$ List<Path> listOfPaths = shareLibService.getShareLibJars(actionShareLibName)-->Line_6 $$ listOfPaths.isEmpty()[ FD ]
Line_8 $$ String fragmentName = new URI(actionLibPath.toString()).getFragment()-->Line_8 $$ new URI(actionLibPath.toString()).getFragment()[ CD ]
Line_7 $$ Path actionLibPath-->Line_8 $$ actionLibPath.toString()[ FD ]
Line_7 $$ Path actionLibPath-->Line_10 $$ actionLibPath.toString()[ FD ]
Line_7 $$ Path actionLibPath-->Line_11 $$ actionLibPath.getName()[ FD ]
Line_11 $$ String fileName = fragmentName == null ? actionLibPath.getName() : fragmentName-->Line_12 $$ if (confSet.contains(fileName)) [ FD ]
Line_12 $$ if (confSet.contains(fileName)) -->Line_12 $$ confSet.contains(fileName)[ CD ]
Line_11 $$ String fileName = fragmentName == null ? actionLibPath.getName() : fragmentName-->Line_12 $$ confSet.contains(fileName)[ FD ]
Line_12 $$ if (confSet.contains(fileName)) -->Line_13 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ CD ]
Line_13 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)-->Line_13 $$ shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ CD ]
Line_4 $$ String actionShareLibName-->Line_13 $$ shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ FD ]
Line_9 $$ Path pathWithFragment = fragmentName == null ? actionLibPath : new Path(new URI(actionLibPath.toString()).getPath())-->Line_13 $$ shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)[ FD ]
Line_12 $$ if (confSet.contains(fileName)) -->Line_15 $$ checkForDisallowedProps(jobXmlConf, actionLibPath.getName())[ CD ]
Line_13 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)-->Line_15 $$ checkForDisallowedProps(jobXmlConf, actionLibPath.getName())[ FD ]
Line_7 $$ Path actionLibPath-->Line_15 $$ actionLibPath.getName()[ FD ]
Line_12 $$ if (confSet.contains(fileName)) -->Line_16 $$ XConfiguration.injectDefaults(jobXmlConf, conf)[ CD ]
Line_13 $$ Configuration jobXmlConf = shareLibService.getShareLibConf(actionShareLibName, pathWithFragment)-->Line_16 $$ XConfiguration.injectDefaults(jobXmlConf, conf)[ FD ]
Line_12 $$ if (confSet.contains(fileName)) -->Line_17 $$ LOG.trace("Adding properties of " + actionLibPath + " to job conf")[ CD ]
Line_12 $$ if (confSet.contains(fileName)) -->Line_21 $$ sharelibList.add(new Path(actionLibPath.toUri()) [ CD ]
Line_7 $$ Path actionLibPath-->Line_21 $$ actionLibPath.toUri()[ FD ]
Line_22 $$ @Override
public int hashCode() -->Line_24 $$ return getName().hashCode();[ CD ]
Line_24 $$ return getName().hashCode();-->Line_24 $$ getName().hashCode()[ CD ]
Line_36 $$ @Override
public boolean equals(Object input) -->Line_38 $$ if (input == null) [ CD ]
Line_38 $$ if (input == null) -->Line_39 $$ return false;[ CD ]
Line_36 $$ @Override
public boolean equals(Object input) -->Line_41 $$ if (input == this) [ CD ]
Line_41 $$ if (input == this) -->Line_42 $$ return true;[ CD ]
Line_36 $$ @Override
public boolean equals(Object input) -->Line_44 $$ if (!(input instanceof Path)) [ CD ]
Line_44 $$ if (!(input instanceof Path)) -->Line_44 $$ !(input instanceof Path)[ CD ]
Line_44 $$ if (!(input instanceof Path)) -->Line_45 $$ return false;[ CD ]
Line_36 $$ @Override
public boolean equals(Object input) -->Line_47 $$ return getName().equals(((Path) input).getName());[ CD ]
Line_47 $$ return getName().equals(((Path) input).getName());-->Line_47 $$ getName().equals(((Path) input).getName())[ CD ]
