Line_0 $$ Entry-->Line_2 $$ //38
public class func [ CD ]
Line_2 $$ //38
public class func -->Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) [ CD ]
Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) -->Line_4 $$ String host = uri.getHost()[ CD ]
Line_4 $$ String host = uri.getHost()-->Line_4 $$ uri.getHost()[ CD ]
Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) -->Line_5 $$ if (host == null) [ CD ]
Line_4 $$ String host = uri.getHost()-->Line_5 $$ if (host == null) [ FD ]
Line_5 $$ if (host == null) -->Line_6 $$ return uri;[ CD ]
Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) -->Line_8 $$ String fqHost = canonicalizeHost(host)[ CD ]
Line_8 $$ String fqHost = canonicalizeHost(host)-->Line_8 $$ canonicalizeHost(host)[ CD ]
Line_4 $$ String host = uri.getHost()-->Line_8 $$ canonicalizeHost(host)[ FD ]
Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) -->Line_9 $$ int port = uri.getPort()[ CD ]
Line_9 $$ int port = uri.getPort()-->Line_9 $$ uri.getPort()[ CD ]
Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) -->Line_10 $$ if (host.equals(fqHost) && port != -1) [ CD ]
Line_4 $$ String host = uri.getHost()-->Line_10 $$ host.equals(fqHost)[ FD ]
Line_8 $$ String fqHost = canonicalizeHost(host)-->Line_10 $$ host.equals(fqHost)[ FD ]
Line_10 $$ if (host.equals(fqHost) && port != -1) -->Line_11 $$ return uri;[ CD ]
Line_3 $$ public void getCanonicalUri(URI uri, int defaultPort) -->Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_13 $$ uri.getScheme()[ FD ]
Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_13 $$ uri.getUserInfo()[ FD ]
Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_15 $$ uri.getPath()[ FD ]
Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_15 $$ uri.getQuery()[ FD ]
Line_13 $$ uri = new URI(uri.getScheme(), uri.getUserInfo(), fqHost, (port == -1) ? defaultPort : port, uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_15 $$ uri.getFragment()[ FD ]
