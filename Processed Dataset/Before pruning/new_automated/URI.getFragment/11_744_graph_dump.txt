Line_0 $$ Entry-->Line_2 $$ //11
public class func [ CD ]
Line_2 $$ //11
public class func -->Line_3 $$ public void safeRelativize(final URI baseURI, final URI toUri) [ CD ]
Line_3 $$ public void safeRelativize(final URI baseURI, final URI toUri) -->Line_4 $$ for (; m < basePath.length(); m++) [ CD ]
Line_3 $$ public void safeRelativize(final URI baseURI, final URI toUri) -->Line_3 $$ public void safeRelativize(final URI baseURI, final URI toUri) [ CD ]
Line_4 $$ for (; m < basePath.length(); m++) -->Line_4 $$ basePath.length()[ CD ]
Line_4 $$ for (; m < basePath.length(); m++) -->Line_5 $$ if (m >= toPath.length()) [ CD ]
Line_5 $$ if (m >= toPath.length()) -->Line_5 $$ toPath.length()[ CD ]
Line_5 $$ if (m >= toPath.length()) -->Line_6 $$ if (basePath.charAt(m) == '/') [ CD ]
Line_5 $$ if (m >= toPath.length()) -->Line_11 $$ if (basePath.charAt(m) != toPath.charAt(m)) [ CD ]
Line_11 $$ if (basePath.charAt(m) != toPath.charAt(m)) -->Line_14 $$ if (basePath.charAt(m) == '/') [ CD ]
Line_3 $$ public void safeRelativize(final URI baseURI, final URI toUri) -->Line_19 $$ if (m < toPath.length() && toPath.charAt(m) == '/') [ CD ]
Line_19 $$ if (m < toPath.length() && toPath.charAt(m) == '/') -->Line_22 $$ // for example, ../containername/ and ../containername// should not increment the truncatePtr
if (!(toPath.charAt(m - 1) == '/' && basePath.charAt(m - 1) == '/')) [ CD ]
Line_22 $$ // for example, ../containername/ and ../containername// should not increment the truncatePtr
if (!(toPath.charAt(m - 1) == '/' && basePath.charAt(m - 1) == '/')) -->Line_22 $$ !(toPath.charAt(m - 1) == '/' && basePath.charAt(m - 1) == '/')[ CD ]
Line_3 $$ public void safeRelativize(final URI baseURI, final URI toUri) -->Line_26 $$ if (m == toPath.length()) [ CD ]
Line_26 $$ if (m == toPath.length()) -->Line_26 $$ toPath.length()[ CD ]
Line_26 $$ if (m == toPath.length()) -->Line_28 $$ // No path difference, return query + fragment
return new URI(null, null, null, toUri.getQuery(), toUri.getFragment()).toString();[ CD ]
Line_28 $$ // No path difference, return query + fragment
return new URI(null, null, null, toUri.getQuery(), toUri.getFragment()).toString();-->Line_28 $$ new URI(null, null, null, toUri.getQuery(), toUri.getFragment()).toString()[ CD ]
Line_26 $$ if (m == toPath.length()) -->Line_31 $$ toPath.substring(truncatePtr)[ CD ]
Line_26 $$ if (m == toPath.length()) -->Line_32 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_26 $$ if (m == toPath.length()) -->Line_33 $$ while (ellipsesCount > 0) [ CD ]
Line_26 $$ if (m == toPath.length()) -->Line_26 $$ if (m == toPath.length()) [ CD ]
Line_33 $$ while (ellipsesCount > 0) -->Line_34 $$ sb.append("../")[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_34 $$ sb.append("../")[ FD ]
Line_26 $$ if (m == toPath.length()) -->Line_38 $$ if (!Utility.isNullOrEmpty(toPath)) [ CD ]
Line_38 $$ if (!Utility.isNullOrEmpty(toPath)) -->Line_38 $$ !Utility.isNullOrEmpty(toPath)[ CD ]
Line_38 $$ !Utility.isNullOrEmpty(toPath)-->Line_38 $$ Utility.isNullOrEmpty(toPath)[ CD ]
Line_38 $$ if (!Utility.isNullOrEmpty(toPath)) -->Line_39 $$ sb.append(toPath)[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_39 $$ sb.append(toPath)[ FD ]
Line_26 $$ if (m == toPath.length()) -->Line_42 $$ if (!Utility.isNullOrEmpty(toUri.getQuery())) [ CD ]
Line_42 $$ if (!Utility.isNullOrEmpty(toUri.getQuery())) -->Line_42 $$ !Utility.isNullOrEmpty(toUri.getQuery())[ CD ]
Line_42 $$ !Utility.isNullOrEmpty(toUri.getQuery())-->Line_42 $$ Utility.isNullOrEmpty(toUri.getQuery())[ CD ]
Line_42 $$ if (!Utility.isNullOrEmpty(toUri.getQuery())) -->Line_43 $$ sb.append("?")[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_43 $$ sb.append("?")[ FD ]
Line_42 $$ if (!Utility.isNullOrEmpty(toUri.getQuery())) -->Line_44 $$ sb.append(toUri.getQuery())[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_44 $$ sb.append(toUri.getQuery())[ FD ]
Line_26 $$ if (m == toPath.length()) -->Line_46 $$ if (!Utility.isNullOrEmpty(toUri.getFragment())) [ CD ]
Line_46 $$ if (!Utility.isNullOrEmpty(toUri.getFragment())) -->Line_46 $$ !Utility.isNullOrEmpty(toUri.getFragment())[ CD ]
Line_46 $$ !Utility.isNullOrEmpty(toUri.getFragment())-->Line_46 $$ Utility.isNullOrEmpty(toUri.getFragment())[ CD ]
Line_46 $$ if (!Utility.isNullOrEmpty(toUri.getFragment())) -->Line_47 $$ sb.append("#")[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_47 $$ sb.append("#")[ FD ]
Line_46 $$ if (!Utility.isNullOrEmpty(toUri.getFragment())) -->Line_48 $$ sb.append(toUri.getRawFragment())[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append(toUri.getRawFragment())[ FD ]
Line_26 $$ if (m == toPath.length()) -->Line_51 $$ return sb.toString();[ CD ]
Line_51 $$ return sb.toString();-->Line_51 $$ sb.toString()[ CD ]
Line_32 $$ final StringBuilder sb = new StringBuilder()-->Line_51 $$ sb.toString()[ FD ]
