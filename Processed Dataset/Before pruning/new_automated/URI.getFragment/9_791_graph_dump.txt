Line_0 $$ Entry-->Line_2 $$ //9
public class func [ CD ]
Line_2 $$ //9
public class func -->Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) [ CD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_4 $$ final String path = uri.isOpaque() ? uri.getSchemeSpecificPart() : uri.getRawPath()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_5 $$ final StringBuilder sb = new StringBuilder(path)[ CD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_6 $$ final String query = uri.getQuery()[ CD ]
Line_6 $$ final String query = uri.getQuery()-->Line_6 $$ uri.getQuery()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_7 $$ if (query != null) [ CD ]
Line_6 $$ final String query = uri.getQuery()-->Line_7 $$ if (query != null) [ FD ]
Line_7 $$ if (query != null) -->Line_8 $$ sb.append('?')[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_8 $$ sb.append('?')[ FD ]
Line_7 $$ if (query != null) -->Line_9 $$ sb.append(query)[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_9 $$ sb.append(query)[ FD ]
Line_6 $$ final String query = uri.getQuery()-->Line_9 $$ sb.append(query)[ FD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_11 $$ final String fragment = uri.getFragment()[ CD ]
Line_11 $$ final String fragment = uri.getFragment()-->Line_11 $$ uri.getFragment()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_12 $$ if (fragment != null) [ CD ]
Line_11 $$ final String fragment = uri.getFragment()-->Line_12 $$ if (fragment != null) [ FD ]
Line_12 $$ if (fragment != null) -->Line_13 $$ sb.append('#')[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_13 $$ sb.append('#')[ FD ]
Line_12 $$ if (fragment != null) -->Line_14 $$ sb.append(fragment)[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_14 $$ sb.append(fragment)[ FD ]
Line_11 $$ final String fragment = uri.getFragment()-->Line_14 $$ sb.append(fragment)[ FD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_16 $$ final String scheme = uri.getScheme()[ CD ]
Line_16 $$ final String scheme = uri.getScheme()-->Line_16 $$ uri.getScheme()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_17 $$ if ("file".equals(scheme)) [ CD ]
Line_16 $$ final String scheme = uri.getScheme()-->Line_17 $$ if ("file".equals(scheme)) [ FD ]
Line_17 $$ if ("file".equals(scheme)) -->Line_17 $$ "file".equals(scheme)[ CD ]
Line_16 $$ final String scheme = uri.getScheme()-->Line_17 $$ "file".equals(scheme)[ FD ]
Line_17 $$ if ("file".equals(scheme)) -->Line_18 $$ if (sb.toString().startsWith("//") && !sb.toString().startsWith("////")) [ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_18 $$ sb.toString()[ FD ]
Line_18 $$ !sb.toString().startsWith("////")-->Line_18 $$ sb.toString().startsWith("////")[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_18 $$ sb.toString()[ FD ]
Line_18 $$ if (sb.toString().startsWith("//") && !sb.toString().startsWith("////")) -->Line_19 $$ sb.insert(0, "//")[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_19 $$ sb.insert(0, "//")[ FD ]
Line_3 $$ public void getAbsoluteUrl(final URI base, final URI uri) -->Line_22 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) [ CD ]
Line_22 $$ !uri.isAbsolute()-->Line_22 $$ uri.isAbsolute()[ CD ]
Line_22 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) -->Line_23 $$ final URL baseUrl = base.toURL()[ CD ]
Line_23 $$ final URL baseUrl = base.toURL()-->Line_23 $$ base.toURL()[ CD ]
Line_22 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) -->Line_24 $$ if (scheme == null || baseUrl.getProtocol().equals(scheme)) [ CD ]
Line_16 $$ final String scheme = uri.getScheme()-->Line_24 $$ baseUrl.getProtocol().equals(scheme)[ FD ]
Line_23 $$ final URL baseUrl = base.toURL()-->Line_24 $$ baseUrl.getProtocol()[ FD ]
Line_24 $$ if (scheme == null || baseUrl.getProtocol().equals(scheme)) -->Line_25 $$ final URL url = new URL(baseUrl, sb.toString())[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_25 $$ sb.toString()[ FD ]
Line_24 $$ if (scheme == null || baseUrl.getProtocol().equals(scheme)) -->Line_26 $$ return url;[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_29 $$ sb.toString()[ FD ]
