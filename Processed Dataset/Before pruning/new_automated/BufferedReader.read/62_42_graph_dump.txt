Line_0 $$ Entry-->Line_2 $$ //62
public class func [ CD ]
Line_2 $$ //62
public class func -->Line_3 $$ public void readFileAsString(File filePath) [ CD ]
Line_3 $$ public void readFileAsString(File filePath) -->Line_4 $$ BufferedReader reader = new BufferedReader(new FileReader(filePath))[ CD ]
Line_3 $$ public void readFileAsString(File filePath) -->Line_6 $$ while ((numRead = reader.read(buf)) != -1) [ CD ]
Line_3 $$ public void readFileAsString(File filePath) -->Line_3 $$ public void readFileAsString(File filePath) [ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new FileReader(filePath))-->Line_6 $$ reader.read(buf)[ FD ]
Line_6 $$ while ((numRead = reader.read(buf)) != -1) -->Line_7 $$ String readData = String.valueOf(buf, 0, numRead)[ CD ]
Line_7 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_7 $$ String.valueOf(buf, 0, numRead)[ CD ]
Line_6 $$ while ((numRead = reader.read(buf)) != -1) -->Line_8 $$ fileData.append(readData)[ CD ]
Line_7 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_8 $$ fileData.append(readData)[ FD ]
Line_3 $$ public void readFileAsString(File filePath) -->Line_11 $$ reader.close()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new FileReader(filePath))-->Line_11 $$ reader.close()[ FD ]
Line_7 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_8 $$ fileData.append(readData)[ FD ]
