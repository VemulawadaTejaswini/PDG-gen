Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void test_markI() [ CD ]
Line_3 $$ public void test_markI() -->Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)[ CD ]
Line_3 $$ public void test_markI() -->Line_5 $$ br.mark(3)[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_5 $$ br.mark(3)[ FD ]
Line_3 $$ public void test_markI() -->Line_6 $$ int result = br.read(carray)[ CD ]
Line_6 $$ int result = br.read(carray)-->Line_6 $$ br.read(carray)[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_6 $$ br.read(carray)[ FD ]
Line_3 $$ public void test_markI() -->Line_7 $$ assertEquals("Assert 2:", '2', carray[2])[ CD ]
Line_3 $$ public void test_markI() -->Line_8 $$ assertEquals("Assert 3:", '3', br.read())[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_8 $$ br.read()[ FD ]
Line_3 $$ public void test_markI() -->Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)[ FD ]
Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)-->Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)[ FD ]
Line_3 $$ public void test_markI() -->Line_10 $$ br.mark(3)[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_10 $$ br.mark(3)[ FD ]
Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)-->Line_10 $$ br.mark(3)[ FD ]
Line_3 $$ public void test_markI() -->Line_11 $$ result = br.read(carray)[ CD ]
Line_6 $$ int result = br.read(carray)-->Line_11 $$ result = br.read(carray)[ FD ]
Line_11 $$ result = br.read(carray)-->Line_11 $$ result = br.read(carray)[ FD ]
Line_11 $$ result = br.read(carray)-->Line_11 $$ br.read(carray)[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_11 $$ br.read(carray)[ FD ]
Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)-->Line_11 $$ br.read(carray)[ FD ]
Line_3 $$ public void test_markI() -->Line_12 $$ assertEquals("Assert 8:", '3', carray[3])[ CD ]
Line_3 $$ public void test_markI() -->Line_13 $$ assertEquals("Assert 9:", '4', br.read())[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_13 $$ br.read()[ FD ]
Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)-->Line_13 $$ br.read()[ FD ]
Line_3 $$ public void test_markI() -->Line_14 $$ assertEquals("Assert 10:", -1, br.read())[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new StringReader("01234"), 2)-->Line_14 $$ br.read()[ FD ]
Line_9 $$ br = new BufferedReader(new StringReader("01234"), 2)-->Line_14 $$ br.read()[ FD ]
Line_3 $$ public void test_markI() -->Line_15 $$ BufferedReader reader = new BufferedReader(new StringReader("01234"))[ CD ]
Line_3 $$ public void test_markI() -->Line_16 $$ reader.mark(Integer.MAX_VALUE)[ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new StringReader("01234"))-->Line_16 $$ reader.mark(Integer.MAX_VALUE)[ FD ]
Line_3 $$ public void test_markI() -->Line_17 $$ reader.read()[ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new StringReader("01234"))-->Line_17 $$ reader.read()[ FD ]
Line_3 $$ public void test_markI() -->Line_18 $$ reader.close()[ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new StringReader("01234"))-->Line_18 $$ reader.close()[ FD ]
