Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void processFlagFile() [ CD ]
Line_3 $$ public void processFlagFile() -->Line_4 $$ while ((c = buffer.read()) != -1) [ CD ]
Line_3 $$ public void processFlagFile() -->Line_3 $$ public void processFlagFile() [ CD ]
Line_4 $$ while ((c = buffer.read()) != -1) -->Line_7 $$ // Ignoring the BOM.
if (isFirstCharacter) [ CD ]
Line_7 $$ // Ignoring the BOM.
if (isFirstCharacter) -->Line_9 $$ if (c == UTF8_BOM_CODE) [ CD ]
Line_4 $$ while ((c = buffer.read()) != -1) -->Line_14 $$ if (c == 32 || c == 9 || c == 10 || c == 13) [ CD ]
Line_14 $$ if (c == 32 || c == 9 || c == 10 || c == 13) -->Line_15 $$ if (quoted) [ CD ]
Line_15 $$ if (quoted) -->Line_16 $$ builder.append((char) c)[ CD ]
Line_15 $$ if (quoted) -->Line_17 $$ if (builder.length() != 0) [ CD ]
Line_17 $$ if (builder.length() != 0) -->Line_18 $$ tokens.add(builder.toString())[ CD ]
Line_17 $$ if (builder.length() != 0) -->Line_19 $$ builder.setLength(0)[ CD ]
Line_14 $$ if (c == 32 || c == 9 || c == 10 || c == 13) -->Line_21 $$ if (c == 34) [ CD ]
Line_21 $$ if (c == 34) -->Line_22 $$ if (escaped) [ CD ]
Line_22 $$ if (escaped) -->Line_23 $$ if (quoted) [ CD ]
Line_23 $$ if (quoted) -->Line_24 $$ builder.setCharAt(builder.length() - 1, (char) c)[ CD ]
Line_23 $$ if (quoted) -->Line_26 $$ builder.append((char) c)[ CD ]
Line_21 $$ if (c == 34) -->Line_32 $$ builder.append((char) c)[ CD ]
Line_3 $$ public void processFlagFile() -->Line_37 $$ buffer.close()[ CD ]
