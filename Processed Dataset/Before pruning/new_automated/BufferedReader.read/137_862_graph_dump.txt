Line_0 $$ Entry-->Line_2 $$ //137
public class func [ CD ]
Line_2 $$ //137
public class func -->Line_3 $$ public void run(IAction action) [ CD ]
Line_3 $$ public void run(IAction action) -->Line_4 $$ URL url = Platform.find(bundle, new Path("samples/manifest.txt"))[ CD ]
Line_4 $$ URL url = Platform.find(bundle, new Path("samples/manifest.txt"))-->Line_4 $$ Platform.find(bundle, new Path("samples/manifest.txt"))[ CD ]
Line_3 $$ public void run(IAction action) -->Line_5 $$ url = Platform.resolve(url)[ CD ]
Line_4 $$ URL url = Platform.find(bundle, new Path("samples/manifest.txt"))-->Line_5 $$ url = Platform.resolve(url)[ FD ]
Line_5 $$ url = Platform.resolve(url)-->Line_5 $$ url = Platform.resolve(url)[ FD ]
Line_5 $$ url = Platform.resolve(url)-->Line_5 $$ Platform.resolve(url)[ CD ]
Line_4 $$ URL url = Platform.find(bundle, new Path("samples/manifest.txt"))-->Line_5 $$ Platform.resolve(url)[ FD ]
Line_5 $$ url = Platform.resolve(url)-->Line_5 $$ Platform.resolve(url)[ FD ]
Line_3 $$ public void run(IAction action) -->Line_6 $$ Object content = url.getContent()[ CD ]
Line_6 $$ Object content = url.getContent()-->Line_6 $$ url.getContent()[ CD ]
Line_4 $$ URL url = Platform.find(bundle, new Path("samples/manifest.txt"))-->Line_6 $$ url.getContent()[ FD ]
Line_5 $$ url = Platform.resolve(url)-->Line_6 $$ url.getContent()[ FD ]
Line_3 $$ public void run(IAction action) -->Line_7 $$ InputStream ins = (InputStream) content[ CD ]
Line_3 $$ public void run(IAction action) -->Line_8 $$ int count = ins.available()[ CD ]
Line_8 $$ int count = ins.available()-->Line_8 $$ ins.available()[ CD ]
Line_7 $$ InputStream ins = (InputStream) content-->Line_8 $$ ins.available()[ FD ]
Line_3 $$ public void run(IAction action) -->Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(ins))[ CD ]
Line_3 $$ public void run(IAction action) -->Line_10 $$ in.read(cbuf)[ CD ]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(ins))-->Line_10 $$ in.read(cbuf)[ FD ]
Line_3 $$ public void run(IAction action) -->Line_11 $$ in.close()[ CD ]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(ins))-->Line_11 $$ in.close()[ FD ]
