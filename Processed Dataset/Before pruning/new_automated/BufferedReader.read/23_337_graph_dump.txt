Line_0 $$ Entry-->Line_2 $$ //23
public class func [ CD ]
Line_2 $$ //23
public class func -->Line_3 $$ public void readStreamAsString(final InputStream iStream) [ CD ]
Line_3 $$ public void readStreamAsString(final InputStream iStream) -->Line_4 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(iStream))[ CD ]
Line_3 $$ public void readStreamAsString(final InputStream iStream) -->Line_5 $$ while ((numRead = reader.read(buf)) != -1) [ CD ]
Line_3 $$ public void readStreamAsString(final InputStream iStream) -->Line_3 $$ public void readStreamAsString(final InputStream iStream) [ CD ]
Line_4 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(iStream))-->Line_5 $$ reader.read(buf)[ FD ]
Line_5 $$ while ((numRead = reader.read(buf)) != -1) -->Line_6 $$ String readData = String.valueOf(buf, 0, numRead)[ CD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_6 $$ String.valueOf(buf, 0, numRead)[ CD ]
Line_5 $$ while ((numRead = reader.read(buf)) != -1) -->Line_8 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))
    // SKIP UTF-8 BOM IF ANY
    readData = readData.substring(1);[ CD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_8 $$ readData.startsWith(UTF8_BOM)[ FD ]
Line_8 $$ if (fileData.length() == 0 && readData.startsWith(UTF8_BOM))
    // SKIP UTF-8 BOM IF ANY
    readData = readData.substring(1);-->Line_10 $$ readData = readData.substring(1)[ CD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_10 $$ readData = readData.substring(1)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_10 $$ readData = readData.substring(1)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_10 $$ readData.substring(1)[ CD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_10 $$ readData.substring(1)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_10 $$ readData.substring(1)[ FD ]
Line_5 $$ while ((numRead = reader.read(buf)) != -1) -->Line_12 $$ fileData.append(readData)[ CD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_12 $$ fileData.append(readData)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_12 $$ fileData.append(readData)[ FD ]
Line_3 $$ public void readStreamAsString(final InputStream iStream) -->Line_14 $$ reader.close()[ CD ]
Line_4 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(iStream))-->Line_14 $$ reader.close()[ FD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_8 $$ readData.startsWith(UTF8_BOM)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_8 $$ readData.startsWith(UTF8_BOM)[ FD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_10 $$ readData.substring(1)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_10 $$ readData.substring(1)[ FD ]
Line_6 $$ String readData = String.valueOf(buf, 0, numRead)-->Line_12 $$ fileData.append(readData)[ FD ]
Line_10 $$ readData = readData.substring(1)-->Line_12 $$ fileData.append(readData)[ FD ]
