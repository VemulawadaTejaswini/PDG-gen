Line_0 $$ Entry-->Line_2 $$ //21
public class func [ CD ]
Line_2 $$ //21
public class func -->Line_3 $$ public void generateGraph(String dotFile) [ CD ]
Line_3 $$ public void generateGraph(String dotFile) -->Line_4 $$ while ((c = br.read()) != -1) [ CD ]
Line_3 $$ public void generateGraph(String dotFile) -->Line_3 $$ public void generateGraph(String dotFile) [ CD ]
Line_4 $$ while ((c = br.read()) != -1) -->Line_5 $$ if (c == '\n') [ CD ]
Line_5 $$ if (c == '\n') -->Line_6 $$ if (pc == '\\') [ CD ]
Line_6 $$ if (pc == '\\') -->Line_8 $$ line.deleteCharAt(line.length() - 1)[ CD ]
Line_6 $$ if (pc == '\\') -->Line_10 $$ GElement element = parseLine(line.toString())[ CD ]
Line_10 $$ GElement element = parseLine(line.toString())-->Line_10 $$ parseLine(line.toString())[ CD ]
Line_6 $$ if (pc == '\\') -->Line_11 $$ if (element != null) [ CD ]
Line_10 $$ GElement element = parseLine(line.toString())-->Line_11 $$ if (element != null) [ FD ]
Line_11 $$ if (element != null) -->Line_12 $$ if (graph == null)
    graph = element;
else
    graph.addElement(element);[ CD ]
Line_12 $$ if (graph == null)
    graph = element;
else
    graph.addElement(element);-->Line_15 $$ graph.addElement(element)[ CD ]
Line_10 $$ GElement element = parseLine(line.toString())-->Line_15 $$ graph.addElement(element)[ FD ]
Line_6 $$ if (pc == '\\') -->Line_17 $$ line.delete(0, line.length())[ CD ]
Line_5 $$ if (c == '\n') -->Line_19 $$ if (c != '\r') [ CD ]
Line_19 $$ if (c != '\r') -->Line_20 $$ line.append((char) c)[ CD ]
Line_19 $$ if (c != '\r') -->Line_21 $$ if (c == '\r') [ CD ]
Line_3 $$ public void generateGraph(String dotFile) -->Line_26 $$ br.close()[ CD ]
Line_10 $$ GElement element = parseLine(line.toString())-->Line_11 $$ if (element != null) [ FD ]
Line_10 $$ GElement element = parseLine(line.toString())-->Line_15 $$ graph.addElement(element)[ FD ]
