Line_0 $$ Entry-->Line_2 $$ //8
public class func [ CD ]
Line_2 $$ //8
public class func -->Line_3 $$ public void getTextInfos() [ CD ]
Line_3 $$ public void getTextInfos() -->Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))[ CD ]
Line_3 $$ public void getTextInfos() -->Line_7 $$ while (in.ready()) [ CD ]
Line_3 $$ public void getTextInfos() -->Line_3 $$ public void getTextInfos() [ CD ]
Line_7 $$ while (in.ready()) -->Line_7 $$ in.ready()[ CD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))-->Line_7 $$ in.ready()[ FD ]
Line_7 $$ while (in.ready()) -->Line_8 $$ if (in.read() == '<' && in.ready() && in.read() == '<') [ CD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))-->Line_8 $$ in.read()[ FD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))-->Line_8 $$ in.ready()[ FD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))-->Line_8 $$ in.read()[ FD ]
Line_8 $$ if (in.read() == '<' && in.ready() && in.read() == '<') -->Line_9 $$ in.readLine()[ CD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))-->Line_9 $$ in.readLine()[ FD ]
Line_8 $$ if (in.read() == '<' && in.ready() && in.read() == '<') -->Line_10 $$ textInfos.add(parseText(in))[ CD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("SparqlTest.test"), Charset.forName("UTF8")))-->Line_10 $$ parseText(in)[ FD ]
