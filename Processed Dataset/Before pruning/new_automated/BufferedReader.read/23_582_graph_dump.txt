Line_0 $$ Entry-->Line_2 $$ //23
public class func [ CD ]
Line_2 $$ //23
public class func -->Line_3 $$ public void getStartOfSelected(String val) [ CD ]
Line_3 $$ public void getStartOfSelected(String val) -->Line_4 $$ while ((cur = in.read()) != -1) [ CD ]
Line_3 $$ public void getStartOfSelected(String val) -->Line_3 $$ public void getStartOfSelected(String val) [ CD ]
Line_4 $$ while ((cur = in.read()) != -1) -->Line_5 $$ char c = (char) cur[ CD ]
Line_4 $$ while ((cur = in.read()) != -1) -->Line_7 $$ if (c == '\n' || ("" + c).equals(System.getProperty("line.separator"))) [ CD ]
Line_7 $$ if (c == '\n' || ("" + c).equals(System.getProperty("line.separator"))) -->Line_8 $$ int index = line.indexOf(search)[ CD ]
Line_8 $$ int index = line.indexOf(search)-->Line_8 $$ line.indexOf(search)[ CD ]
Line_7 $$ if (c == '\n' || ("" + c).equals(System.getProperty("line.separator"))) -->Line_9 $$ if (index != -1) [ CD ]
Line_8 $$ int index = line.indexOf(search)-->Line_9 $$ if (index != -1) [ FD ]
Line_9 $$ if (index != -1) -->Line_10 $$ return count - line.length() + index;[ CD ]
Line_8 $$ int index = line.indexOf(search)-->Line_9 $$ if (index != -1) [ FD ]
