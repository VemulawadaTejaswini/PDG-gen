Line_0 $$ Entry-->Line_2 $$ //93
public class func [ CD ]
Line_2 $$ //93
public class func -->Line_3 $$ public void parseAwfulCSV(BufferedReader reader, boolean header) [ CD ]
Line_3 $$ public void parseAwfulCSV(BufferedReader reader, boolean header) -->Line_4 $$ while ((ch = reader.read()) != -1) [ CD ]
Line_3 $$ public void parseAwfulCSV(BufferedReader reader, boolean header) -->Line_3 $$ public void parseAwfulCSV(BufferedReader reader, boolean header) [ CD ]
Line_4 $$ while ((ch = reader.read()) != -1) -->Line_5 $$ if (insideQuote) [ CD ]
Line_5 $$ if (insideQuote) -->Line_6 $$ if (ch == '\"') [ CD ]
Line_6 $$ if (ch == '\"') -->Line_8 $$ reader.mark(1)[ CD ]
Line_6 $$ if (ch == '\"') -->Line_9 $$ if (reader.read() == '\"') [ CD ]
Line_9 $$ if (reader.read() == '\"') -->Line_11 $$ // it's "", which means a quote character
if (count == c.length) [ CD ]
Line_11 $$ // it's "", which means a quote character
if (count == c.length) -->Line_12 $$ PApplet.expand(c)[ CD ]
Line_9 $$ if (reader.read() == '\"') -->Line_14 $$ c[count++] = '\"'[ CD ]
Line_9 $$ if (reader.read() == '\"') -->Line_17 $$ reader.reset()[ CD ]
Line_6 $$ if (ch == '\"') -->Line_27 $$ // inside a quote, but the character isn't a quote
if (count == c.length) [ CD ]
Line_27 $$ // inside a quote, but the character isn't a quote
if (count == c.length) -->Line_28 $$ PApplet.expand(c)[ CD ]
Line_6 $$ if (ch == '\"') -->Line_30 $$ c[count++] = (char) ch[ CD ]
Line_5 $$ if (insideQuote) -->Line_33 $$ // not inside a quote
if (ch == '\"') [ CD ]
Line_33 $$ // not inside a quote
if (ch == '\"') -->Line_36 $$ if (ch == '\r' || ch == '\n') [ CD ]
Line_36 $$ if (ch == '\r' || ch == '\n') -->Line_37 $$ if (ch == '\r') [ CD ]
Line_37 $$ if (ch == '\r') -->Line_39 $$ reader.mark(1)[ CD ]
Line_37 $$ if (ch == '\r') -->Line_40 $$ if (reader.read() != '\n') [ CD ]
Line_40 $$ if (reader.read() != '\n') -->Line_41 $$ reader.reset()[ CD ]
Line_36 $$ if (ch == '\r' || ch == '\n') -->Line_44 $$ setString(row, col, new String(c, 0, count))[ CD ]
Line_36 $$ if (ch == '\r' || ch == '\n') -->Line_46 $$ if (row == 0 && header) [ CD ]
Line_46 $$ if (row == 0 && header) -->Line_48 $$ removeTitleRow()[ CD ]
Line_46 $$ if (row == 0 && header) -->Line_51 $$ header = false[ CD ]
Line_51 $$ header = false-->Line_51 $$ header = false[ FD ]
Line_36 $$ if (ch == '\r' || ch == '\n') -->Line_56 $$ if (ch == ',') [ CD ]
Line_56 $$ if (ch == ',') -->Line_57 $$ setString(row, col, new String(c, 0, count))[ CD ]
Line_56 $$ if (ch == ',') -->Line_61 $$ ensureColumn(col)[ CD ]
Line_56 $$ if (ch == ',') -->Line_64 $$ // just a regular character, add it
if (count == c.length) [ CD ]
Line_64 $$ // just a regular character, add it
if (count == c.length) -->Line_65 $$ PApplet.expand(c)[ CD ]
Line_56 $$ if (ch == ',') -->Line_67 $$ c[count++] = (char) ch[ CD ]
Line_51 $$ header = false-->Line_46 $$ if (row == 0 && header) [ FD ]
