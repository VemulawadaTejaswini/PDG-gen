Line_0 $$ Entry-->Line_2 $$ //22
public class func [ CD ]
Line_2 $$ //22
public class func -->Line_3 $$ public void readInputStreamToString(Socket socket) [ CD ]
Line_3 $$ public void readInputStreamToString(Socket socket) -->Line_4 $$ while ((line = bufferedReader.readLine()) != null) [ CD ]
Line_3 $$ public void readInputStreamToString(Socket socket) -->Line_3 $$ public void readInputStreamToString(Socket socket) [ CD ]
Line_4 $$ while ((line = bufferedReader.readLine()) != null) -->Line_5 $$ if (line.startsWith("Content-Length")) [ CD ]
Line_5 $$ if (line.startsWith("Content-Length")) -->Line_5 $$ line.startsWith("Content-Length")[ CD ]
Line_5 $$ if (line.startsWith("Content-Length")) -->Line_6 $$ Integer.parseInt(line.split(":")[1].trim())[ CD ]
Line_4 $$ while ((line = bufferedReader.readLine()) != null) -->Line_8 $$ if (line.length() == 0) [ CD ]
Line_8 $$ if (line.length() == 0) -->Line_10 $$ if (contentLength != null) [ CD ]
Line_10 $$ if (contentLength != null) -->Line_11 $$ result.append('\n')[ CD ]
Line_10 $$ if (contentLength != null) -->Line_12 $$ for (int position = 0; position < contentLength; position++) [ CD ]
Line_10 $$ if (contentLength != null) -->Line_10 $$ if (contentLength != null) [ CD ]
Line_12 $$ for (int position = 0; position < contentLength; position++) -->Line_12 $$ int position = 0[ CD ]
Line_12 $$ for (int position = 0; position < contentLength; position++) -->Line_12 $$ position++[ CD ]
Line_12 $$ int position = 0-->Line_12 $$ position++[ FD ]
Line_12 $$ for (int position = 0; position < contentLength; position++) -->Line_13 $$ result.append((char) bufferedReader.read())[ CD ]
Line_4 $$ while ((line = bufferedReader.readLine()) != null) -->Line_18 $$ result.append(line).append('\n')[ CD ]
Line_12 $$ int position = 0-->Line_12 $$ for (int position = 0; position < contentLength; position++) [ FD ]
Line_12 $$ int position = 0-->Line_12 $$ for (int position = 0; position < contentLength; position++) [ FD ]
Line_12 $$ int position = 0-->Line_12 $$ position++[ FD ]
