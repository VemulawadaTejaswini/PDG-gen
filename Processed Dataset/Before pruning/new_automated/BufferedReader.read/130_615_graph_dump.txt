Line_0 $$ Entry-->Line_2 $$ //130
public class func [ CD ]
Line_2 $$ //130
public class func -->Line_3 $$ public void readStream(InputStream inputStream) [ CD ]
Line_3 $$ public void readStream(InputStream inputStream) -->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))[ CD ]
Line_3 $$ public void readStream(InputStream inputStream) -->Line_5 $$ int length = reader.read(buffer)[ CD ]
Line_5 $$ int length = reader.read(buffer)-->Line_5 $$ reader.read(buffer)[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))-->Line_5 $$ reader.read(buffer)[ FD ]
Line_3 $$ public void readStream(InputStream inputStream) -->Line_6 $$ assertTrue("Failed to read anything from input stream", length > -1)[ CD ]
Line_3 $$ public void readStream(InputStream inputStream) -->Line_7 $$ return String.valueOf(buffer, 0, length);[ CD ]
Line_7 $$ return String.valueOf(buffer, 0, length);-->Line_7 $$ String.valueOf(buffer, 0, length)[ CD ]
Line_5 $$ int length = reader.read(buffer)-->Line_7 $$ String.valueOf(buffer, 0, length)[ FD ]
Line_3 $$ public void readStream(InputStream inputStream) -->Line_8 $$ reader.close()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))-->Line_8 $$ reader.close()[ FD ]
