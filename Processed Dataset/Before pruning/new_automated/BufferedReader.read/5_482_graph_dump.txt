Line_0 $$ Entry-->Line_2 $$ //5
public class func [ CD ]
Line_2 $$ //5
public class func -->Line_3 $$ public void readLine(BufferedReader r) [ CD ]
Line_3 $$ public void readLine(BufferedReader r) -->Line_4 $$ while (!eol && (c = r.read()) >= 0) [ CD ]
Line_3 $$ public void readLine(BufferedReader r) -->Line_3 $$ public void readLine(BufferedReader r) [ CD ]
Line_4 $$ while (!eol && (c = r.read()) >= 0) -->Line_5 $$ sb.append((char) c)[ CD ]
Line_4 $$ while (!eol && (c = r.read()) >= 0) -->Line_9 $$ // check for \r\n
if (c == '\r') [ CD ]
Line_9 $$ // check for \r\n
if (c == '\r') -->Line_10 $$ r.mark(1)[ CD ]
Line_9 $$ // check for \r\n
if (c == '\r') -->Line_11 $$ r.read()[ CD ]
Line_9 $$ // check for \r\n
if (c == '\r') -->Line_13 $$ if (c != '\n') [ CD ]
Line_13 $$ if (c != '\n') -->Line_14 $$ r.reset()[ CD ]
Line_13 $$ if (c != '\n') -->Line_17 $$ sb.append((char) c)[ CD ]
Line_3 $$ public void readLine(BufferedReader r) -->Line_21 $$ return sb.length() == 0 ? null : sb.toString();[ CD ]
