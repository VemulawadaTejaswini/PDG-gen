Line_0 $$ Entry-->Line_2 $$ //19
public class func [ CD ]
Line_2 $$ //19
public class func -->Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) [ CD ]
Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_4 $$ log(Level.TRACE, "status code: %d", statuscode)[ CD ]
Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_5 $$ if ((statuscode != 200 && statuscode != 500) || size < 1) [ CD ]
Line_5 $$ if ((statuscode != 200 && statuscode != 500) || size < 1) -->Line_6 $$ log(Level.ERROR, "communication error, code: %d, byte expected: %d", statuscode, size)[ CD ]
Line_5 $$ if ((statuscode != 200 && statuscode != 500) || size < 1) -->Line_7 $$ return new BufferedReader(new CharArrayReader(new char[0]));[ CD ]
Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_9 $$ int readchar = in.read(cbuf)[ CD ]
Line_9 $$ int readchar = in.read(cbuf)-->Line_9 $$ in.read(cbuf)[ CD ]
Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_10 $$ if (readchar != size) [ CD ]
Line_9 $$ int readchar = in.read(cbuf)-->Line_10 $$ if (readchar != size) [ FD ]
Line_10 $$ if (readchar != size) -->Line_11 $$ log(Level.ERROR, "read failed, not enough byte, got %d expected %d", readchar, size)[ CD ]
Line_9 $$ int readchar = in.read(cbuf)-->Line_11 $$ log(Level.ERROR, "read failed, not enough byte, got %d expected %d", readchar, size)[ FD ]
Line_10 $$ if (readchar != size) -->Line_12 $$ return new BufferedReader(new CharArrayReader(new char[0]));[ CD ]
Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_14 $$ in.readLine()[ CD ]
Line_3 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_15 $$ return new BufferedReader(new CharArrayReader(cbuf));[ CD ]
