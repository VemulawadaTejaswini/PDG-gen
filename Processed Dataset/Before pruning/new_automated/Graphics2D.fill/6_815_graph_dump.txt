Line_0 $$ Entry-->Line_2 $$ //6
public class func [ CD ]
Line_2 $$ //6
public class func -->Line_3 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) [ CD ]
Line_3 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_4 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())[ CD ]
Line_4 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())-->Line_4 $$ AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())[ CD ]
Line_3 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_6 $$ tx.translate(-paintBounds.getX(), -paintBounds.getY())[ CD ]
Line_4 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())-->Line_6 $$ tx.translate(-paintBounds.getX(), -paintBounds.getY())[ FD ]
Line_6 $$ -paintBounds.getX()-->Line_6 $$ paintBounds.getX()[ CD ]
Line_6 $$ -paintBounds.getY()-->Line_6 $$ paintBounds.getY()[ CD ]
Line_3 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_7 $$ graphics.fill(tx.createTransformedShape(shape))[ CD ]
Line_4 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())-->Line_7 $$ tx.createTransformedShape(shape)[ FD ]
Line_3 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_8 $$ if (paintOld != null) [ CD ]
Line_8 $$ if (paintOld != null) -->Line_9 $$ graphics.setPaint(paintOld)[ CD ]
Line_3 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_11 $$ graphics.setTransform(txOrig)[ CD ]
