Line_0 $$ Entry-->Line_2 $$ //54
public class func [ CD ]
Line_2 $$ //54
public class func -->Line_3 $$ public void doPaint(Graphics2D g, JComponent c, int width, int height, Object[] extendedCacheKeys) [ CD ]
Line_3 $$ public void doPaint(Graphics2D g, JComponent c, int width, int height, Object[] extendedCacheKeys) -->Line_4 $$ if (testValid(0, 0, width - 1, height - 1)) [ CD ]
Line_4 $$ if (testValid(0, 0, width - 1, height - 1)) -->Line_4 $$ testValid(0, 0, width - 1, height - 1)[ CD ]
Line_4 $$ if (testValid(0, 0, width - 1, height - 1)) -->Line_5 $$ Shape s = shapeGenerator.createRectangle(0, 0, width, height)[ CD ]
Line_5 $$ Shape s = shapeGenerator.createRectangle(0, 0, width, height)-->Line_5 $$ shapeGenerator.createRectangle(0, 0, width, height)[ CD ]
Line_4 $$ if (testValid(0, 0, width - 1, height - 1)) -->Line_6 $$ g.setPaint(getTableHeaderPaint(s))[ CD ]
Line_5 $$ Shape s = shapeGenerator.createRectangle(0, 0, width, height)-->Line_6 $$ getTableHeaderPaint(s)[ FD ]
Line_4 $$ if (testValid(0, 0, width - 1, height - 1)) -->Line_7 $$ g.fill(s)[ CD ]
Line_5 $$ Shape s = shapeGenerator.createRectangle(0, 0, width, height)-->Line_7 $$ g.fill(s)[ FD ]
Line_4 $$ if (testValid(0, 0, width - 1, height - 1)) -->Line_9 $$ paintBorder(g, width, height)[ CD ]
