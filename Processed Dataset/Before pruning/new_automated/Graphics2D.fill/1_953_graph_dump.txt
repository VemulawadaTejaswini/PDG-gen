Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void paintSurveyColumn(Graphics graphics, int column, float currentX, float columnDistance) [ CD ]
Line_3 $$ public void paintSurveyColumn(Graphics graphics, int column, float currentX, float columnDistance) -->Line_4 $$ if (dataTable.isSupportingColumnWeights()) [ CD ]
Line_4 $$ if (dataTable.isSupportingColumnWeights()) -->Line_4 $$ dataTable.isSupportingColumnWeights()[ CD ]
Line_4 $$ if (dataTable.isSupportingColumnWeights()) -->Line_5 $$ Color weightColor = getWeightColor(dataTable.getColumnWeight(column), this.maxWeight)[ CD ]
Line_5 $$ Color weightColor = getWeightColor(dataTable.getColumnWeight(column), this.maxWeight)-->Line_5 $$ getWeightColor(dataTable.getColumnWeight(column), this.maxWeight)[ CD ]
Line_4 $$ if (dataTable.isSupportingColumnWeights()) -->Line_6 $$ Rectangle2D weightRect = new Rectangle2D.Double(0, MARGIN, columnDistance, this.dataTable.getNumberOfRows())[ CD ]
Line_4 $$ if (dataTable.isSupportingColumnWeights()) -->Line_7 $$ g.setColor(weightColor)[ CD ]
Line_5 $$ Color weightColor = getWeightColor(dataTable.getColumnWeight(column), this.maxWeight)-->Line_7 $$ g.setColor(weightColor)[ FD ]
Line_4 $$ if (dataTable.isSupportingColumnWeights()) -->Line_8 $$ g.fill(weightRect)[ CD ]
Line_6 $$ Rectangle2D weightRect = new Rectangle2D.Double(0, MARGIN, columnDistance, this.dataTable.getNumberOfRows())-->Line_8 $$ g.fill(weightRect)[ FD ]
Line_3 $$ public void paintSurveyColumn(Graphics graphics, int column, float currentX, float columnDistance) -->Line_10 $$ if (this.dataTable.getNumberOfColumns() <= 10)
    g.drawString(this.dataTable.getColumnName(column), 0, MARGIN - 3);[ CD ]
Line_10 $$ if (this.dataTable.getNumberOfColumns() <= 10)
    g.drawString(this.dataTable.getColumnName(column), 0, MARGIN - 3);-->Line_11 $$ g.drawString(this.dataTable.getColumnName(column), 0, MARGIN - 3)[ CD ]
Line_3 $$ public void paintSurveyColumn(Graphics graphics, int column, float currentX, float columnDistance) -->Line_12 $$ g.translate(0, MARGIN)[ CD ]
Line_3 $$ public void paintSurveyColumn(Graphics graphics, int column, float currentX, float columnDistance) -->Line_13 $$ g.setColor(GRID_COLOR)[ CD ]
