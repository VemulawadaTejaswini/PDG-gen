Line_0 $$ Entry-->Line_2 $$ //117
public class func [ CD ]
Line_2 $$ //117
public class func -->Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) [ CD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_4 $$ AffineTransform old = g.getTransform()[ CD ]
Line_4 $$ AffineTransform old = g.getTransform()-->Line_4 $$ g.getTransform()[ CD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_5 $$ g.translate(center.x, center.y)[ CD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_6 $$ g.scale(radius, radius)[ CD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_7 $$ g.setColor(color)[ CD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_8 $$ g.fill(circle)[ CD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_9 $$ g.setTransform(old)[ CD ]
Line_4 $$ AffineTransform old = g.getTransform()-->Line_9 $$ g.setTransform(old)[ FD ]
Line_3 $$ public void drawParticles(Vec2[] centers, float radius, ParticleColor[] colors, int count) -->Line_10 $$ restoreState(g)[ CD ]
