Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readUntilDelimiter(final BufferedReader inputStream) [ CD ]
Line_2 $$ public void readUntilDelimiter(final BufferedReader inputStream) -->Line_3 $$ inputStream.read()[ CD ]
Line_2 $$ public void readUntilDelimiter(final BufferedReader inputStream) -->Line_4 $$ if (ci == -1) [ CD ]
Line_4 $$ if (ci == -1) -->Line_4 $$ -1[ CD ]
Line_4 $$ if (ci == -1) -->Line_5 $$ System.err.println("Socket already closed by server \n")[ CD ]
Line_4 $$ if (ci == -1) -->Line_6 $$ inputStream.close()[ CD ]
Line_4 $$ if (ci == -1) -->Line_10 $$ if (c == '#' && canc == false) [ CD ]
Line_10 $$ if (c == '#' && canc == false) -->Line_11 $$ response.append(c)[ CD ]
Line_10 $$ if (c == '#' && canc == false) -->Line_13 $$ if (c == '#') [ CD ]
Line_13 $$ if (c == '#') -->Line_14 $$ response.append(c)[ CD ]
Line_13 $$ if (c == '#') -->Line_16 $$ if (c != '#') [ CD ]
Line_16 $$ if (c != '#') -->Line_17 $$ response.append(c)[ CD ]
Line_2 $$ public void readUntilDelimiter(final BufferedReader inputStream) -->Line_21 $$ return response.toString();[ CD ]
Line_21 $$ return response.toString();-->Line_21 $$ response.toString()[ CD ]
