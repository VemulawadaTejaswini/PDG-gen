Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void loadOvfContents(String ovfPath) [ CD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_3 $$ File ovfFile = new File(ovfPath)[ CD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_5 $$ AuAssert.check(ovfFile.length() < MAX_OVF_SIZE)[ CD ]
Line_3 $$ File ovfFile = new File(ovfPath)-->Line_5 $$ ovfFile.length()[ FD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_6 $$ int totalLen = (int) (ovfFile.length() < MAX_OVF_SIZE ? ovfFile.length() : MAX_OVF_SIZE)[ CD ]
Line_3 $$ File ovfFile = new File(ovfPath)-->Line_6 $$ ovfFile.length()[ FD ]
Line_3 $$ File ovfFile = new File(ovfPath)-->Line_7 $$ ovfFile.length()[ FD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_8 $$ while (offset < totalLen && (len = reader.read(ovfBuf, offset, totalLen - offset)) != -1) [ CD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_2 $$ public void loadOvfContents(String ovfPath) [ CD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_12 $$ if (reader != null) [ CD ]
Line_12 $$ if (reader != null) -->Line_13 $$ reader.close()[ CD ]
Line_2 $$ public void loadOvfContents(String ovfPath) -->Line_15 $$ return new String(ovfBuf);[ CD ]
