Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) [ CD ]
Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) -->Line_3 $$ final URL url = url(fullPath)[ CD ]
Line_3 $$ final URL url = url(fullPath)-->Line_3 $$ url(fullPath)[ CD ]
Line_3 $$ final URL url = url(fullPath)-->Line_4 $$ url.openConnection()[ FD ]
Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) -->Line_5 $$ connection.setRequestMethod(requestMethod)[ CD ]
Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) -->Line_7 $$ while ((bytesRead = reader.read(chars)) != -1) [ CD ]
Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) -->Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) [ CD ]
Line_7 $$ while ((bytesRead = reader.read(chars)) != -1) -->Line_8 $$ builder.append(chars, 0, bytesRead)[ CD ]
Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) -->Line_10 $$ if (reader != null) [ CD ]
Line_10 $$ if (reader != null) -->Line_11 $$ reader.close()[ CD ]
Line_2 $$ public void readFromPath(final String path, final String clientId, final String requestMethod) -->Line_13 $$ if (connection != null) [ CD ]
Line_13 $$ if (connection != null) -->Line_14 $$ connection.disconnect()[ CD ]
