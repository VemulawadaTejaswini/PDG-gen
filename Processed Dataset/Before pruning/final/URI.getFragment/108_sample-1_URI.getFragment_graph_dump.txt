Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void apply(@Nullable final URI input) [ CD ]
Line_2 $$ public void apply(@Nullable final URI input) -->Line_3 $$ final URI uri = URI_NORMALIZER.apply(input)[ CD ]
Line_3 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_3 $$ URI_NORMALIZER.apply(input)[ CD ]
Line_2 $$ public void apply(@Nullable final URI input) -->Line_4 $$ if (uri == null)[ CD ]
Line_3 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_4 $$ if (uri == null)[ FD ]
Line_4 $$ if (uri == null)-->Line_5 $$ return null;[ CD ]
Line_2 $$ public void apply(@Nullable final URI input) -->Line_6 $$ return new URI(uri.getScheme(), uri.getSchemeSpecificPart(), Optional.fromNullable(uri.getFragment()).or(""));[ CD ]
Line_3 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_6 $$ uri.getScheme()[ FD ]
Line_3 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_6 $$ uri.getSchemeSpecificPart()[ FD ]
Line_3 $$ final URI uri = URI_NORMALIZER.apply(input)-->Line_7 $$ uri.getFragment()[ FD ]
