Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) [ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_3 $$ if (!uri.isAbsolute())[ CD ]
Line_3 $$ if (!uri.isAbsolute())-->Line_3 $$ !uri.isAbsolute()[ CD ]
Line_3 $$ !uri.isAbsolute()-->Line_3 $$ uri.isAbsolute()[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_5 $$ if (uri.isOpaque())[ CD ]
Line_5 $$ if (uri.isOpaque())-->Line_5 $$ uri.isOpaque()[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_7 $$ String scheme = uri.getScheme()[ CD ]
Line_7 $$ String scheme = uri.getScheme()-->Line_7 $$ uri.getScheme()[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_8 $$ if ((scheme == null) || !scheme.equalsIgnoreCase("file"))[ CD ]
Line_8 $$ !scheme.equalsIgnoreCase("file")-->Line_8 $$ scheme.equalsIgnoreCase("file")[ CD ]
Line_7 $$ String scheme = uri.getScheme()-->Line_8 $$ scheme.equalsIgnoreCase("file")[ FD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_10 $$ if (uri.getFragment() != null)[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_12 $$ if (uri.getQuery() != null)[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_14 $$ String path = uri.getPath()[ CD ]
Line_14 $$ String path = uri.getPath()-->Line_14 $$ uri.getPath()[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_15 $$ if (path.equals(""))[ CD ]
Line_14 $$ String path = uri.getPath()-->Line_15 $$ if (path.equals(""))[ FD ]
Line_15 $$ if (path.equals(""))-->Line_15 $$ path.equals("")[ CD ]
Line_14 $$ String path = uri.getPath()-->Line_15 $$ path.equals("")[ FD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_17 $$ String auth = uri.getAuthority()[ CD ]
Line_17 $$ String auth = uri.getAuthority()-->Line_17 $$ uri.getAuthority()[ CD ]
Line_2 $$ public void fromUri(WindowsFileSystem fs, URI uri) -->Line_18 $$ if (auth != null && !auth.equals("")) [ CD ]
Line_18 $$ !auth.equals("")-->Line_18 $$ auth.equals("")[ CD ]
Line_17 $$ String auth = uri.getAuthority()-->Line_18 $$ auth.equals("")[ FD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_19 $$ String host = uri.getHost()[ CD ]
Line_19 $$ String host = uri.getHost()-->Line_19 $$ uri.getHost()[ CD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_20 $$ if (host == null)[ CD ]
Line_19 $$ String host = uri.getHost()-->Line_20 $$ if (host == null)[ FD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_22 $$ if (uri.getUserInfo() != null)[ CD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_24 $$ if (uri.getPort() != -1)[ CD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_26 $$ if (host.startsWith("[")) [ CD ]
Line_19 $$ String host = uri.getHost()-->Line_26 $$ if (host.startsWith("[")) [ FD ]
Line_26 $$ if (host.startsWith("[")) -->Line_26 $$ host.startsWith("[")[ CD ]
Line_19 $$ String host = uri.getHost()-->Line_26 $$ host.startsWith("[")[ FD ]
Line_26 $$ if (host.startsWith("[")) -->Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')[ CD ]
Line_19 $$ String host = uri.getHost()-->Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')[ FD ]
Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')-->Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')[ FD ]
Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')-->Line_27 $$ host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')[ CD ]
Line_19 $$ String host = uri.getHost()-->Line_27 $$ host.substring(1, host.length() - 1)[ FD ]
Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')-->Line_27 $$ host.substring(1, host.length() - 1)[ FD ]
Line_19 $$ String host = uri.getHost()-->Line_27 $$ host.length()[ FD ]
Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')-->Line_27 $$ host.length()[ FD ]
Line_26 $$ if (host.startsWith("[")) -->Line_30 $$ host += IPV6_LITERAL_SUFFIX[ CD ]
Line_19 $$ String host = uri.getHost()-->Line_30 $$ host += IPV6_LITERAL_SUFFIX[ FD ]
Line_27 $$ host = host.substring(1, host.length() - 1).replace(':', '-').replace('%', 's')-->Line_30 $$ host += IPV6_LITERAL_SUFFIX[ FD ]
Line_30 $$ host += IPV6_LITERAL_SUFFIX-->Line_30 $$ host += IPV6_LITERAL_SUFFIX[ FD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_32 $$ path = "\\\\" + host + path[ CD ]
Line_14 $$ String path = uri.getPath()-->Line_32 $$ path = "\\\\" + host + path[ FD ]
Line_32 $$ path = "\\\\" + host + path-->Line_32 $$ path = "\\\\" + host + path[ FD ]
Line_14 $$ String path = uri.getPath()-->Line_32 $$ path = "\\\\" + host + path[ FD ]
Line_32 $$ path = "\\\\" + host + path-->Line_32 $$ path = "\\\\" + host + path[ FD ]
Line_18 $$ if (auth != null && !auth.equals("")) -->Line_34 $$ if ((path.length() > 2) && (path.charAt(2) == ':')) [ CD ]
Line_14 $$ String path = uri.getPath()-->Line_34 $$ path.length()[ FD ]
Line_32 $$ path = "\\\\" + host + path-->Line_34 $$ path.length()[ FD ]
Line_14 $$ String path = uri.getPath()-->Line_34 $$ path.charAt(2)[ FD ]
Line_32 $$ path = "\\\\" + host + path-->Line_34 $$ path.charAt(2)[ FD ]
Line_34 $$ if ((path.length() > 2) && (path.charAt(2) == ':')) -->Line_35 $$ path = path.substring(1)[ CD ]
Line_14 $$ String path = uri.getPath()-->Line_35 $$ path = path.substring(1)[ FD ]
Line_32 $$ path = "\\\\" + host + path-->Line_35 $$ path = path.substring(1)[ FD ]
Line_35 $$ path = path.substring(1)-->Line_35 $$ path = path.substring(1)[ FD ]
Line_35 $$ path = path.substring(1)-->Line_35 $$ path.substring(1)[ CD ]
Line_14 $$ String path = uri.getPath()-->Line_35 $$ path.substring(1)[ FD ]
Line_32 $$ path = "\\\\" + host + path-->Line_35 $$ path.substring(1)[ FD ]
Line_35 $$ path = path.substring(1)-->Line_35 $$ path.substring(1)[ FD ]
