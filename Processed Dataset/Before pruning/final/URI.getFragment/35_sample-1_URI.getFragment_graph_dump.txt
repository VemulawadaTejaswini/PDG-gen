Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) [ CD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_3 $$ URI connectorURI = connector.getConnectUri()[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_3 $$ connector.getConnectUri()[ CD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_4 $$ if (connectorURI == null) [ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_4 $$ if (connectorURI == null) [ FD ]
Line_4 $$ if (connectorURI == null) -->Line_5 $$ return null;[ CD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_7 $$ String scheme = connectorURI.getScheme()[ CD ]
Line_7 $$ String scheme = connectorURI.getScheme()-->Line_7 $$ connectorURI.getScheme()[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_7 $$ connectorURI.getScheme()[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_8 $$ if ("vm".equals(scheme)) [ CD ]
Line_7 $$ String scheme = connectorURI.getScheme()-->Line_8 $$ if ("vm".equals(scheme)) [ FD ]
Line_8 $$ if ("vm".equals(scheme)) -->Line_8 $$ "vm".equals(scheme)[ CD ]
Line_7 $$ String scheme = connectorURI.getScheme()-->Line_8 $$ "vm".equals(scheme)[ FD ]
Line_8 $$ if ("vm".equals(scheme)) -->Line_9 $$ return connectorURI;[ CD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_11 $$ String userInfo = getPublishedUserInfoValue(connectorURI.getUserInfo())[ CD ]
Line_11 $$ String userInfo = getPublishedUserInfoValue(connectorURI.getUserInfo())-->Line_11 $$ getPublishedUserInfoValue(connectorURI.getUserInfo())[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_11 $$ connectorURI.getUserInfo()[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_12 $$ String host = getPublishedHostValue(connectorURI.getHost())[ CD ]
Line_12 $$ String host = getPublishedHostValue(connectorURI.getHost())-->Line_12 $$ getPublishedHostValue(connectorURI.getHost())[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_12 $$ connectorURI.getHost()[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_13 $$ int port = connectorURI.getPort()[ CD ]
Line_13 $$ int port = connectorURI.getPort()-->Line_13 $$ connectorURI.getPort()[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_13 $$ connectorURI.getPort()[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_14 $$ if (portMapping.containsKey(port)) [ CD ]
Line_13 $$ int port = connectorURI.getPort()-->Line_14 $$ if (portMapping.containsKey(port)) [ FD ]
Line_14 $$ if (portMapping.containsKey(port)) -->Line_14 $$ portMapping.containsKey(port)[ CD ]
Line_13 $$ int port = connectorURI.getPort()-->Line_14 $$ portMapping.containsKey(port)[ FD ]
Line_14 $$ if (portMapping.containsKey(port)) -->Line_15 $$ port = portMapping.get(port)[ CD ]
Line_13 $$ int port = connectorURI.getPort()-->Line_15 $$ port = portMapping.get(port)[ FD ]
Line_15 $$ port = portMapping.get(port)-->Line_15 $$ port = portMapping.get(port)[ FD ]
Line_15 $$ port = portMapping.get(port)-->Line_15 $$ portMapping.get(port)[ CD ]
Line_13 $$ int port = connectorURI.getPort()-->Line_15 $$ portMapping.get(port)[ FD ]
Line_15 $$ port = portMapping.get(port)-->Line_15 $$ portMapping.get(port)[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_17 $$ String path = getPublishedPathValue(connectorURI.getPath())[ CD ]
Line_17 $$ String path = getPublishedPathValue(connectorURI.getPath())-->Line_17 $$ getPublishedPathValue(connectorURI.getPath())[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_17 $$ connectorURI.getPath()[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_18 $$ String fragment = getPublishedFragmentValue(connectorURI.getFragment())[ CD ]
Line_18 $$ String fragment = getPublishedFragmentValue(connectorURI.getFragment())-->Line_18 $$ getPublishedFragmentValue(connectorURI.getFragment())[ CD ]
Line_3 $$ URI connectorURI = connector.getConnectUri()-->Line_18 $$ connectorURI.getFragment()[ FD ]
Line_2 $$ public void getPublishableConnectURI(TransportConnector connector) -->Line_19 $$ URI publishedURI = new URI(scheme, userInfo, host, port, path, getClusterClientUriQuery(), fragment)[ CD ]
