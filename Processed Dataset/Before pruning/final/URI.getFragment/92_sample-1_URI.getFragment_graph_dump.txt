Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getCURIE(URI uri) [ CD ]
Line_2 $$ public void getCURIE(URI uri) -->Line_3 $$ String s = uri.toString()[ CD ]
Line_3 $$ String s = uri.toString()-->Line_3 $$ uri.toString()[ CD ]
Line_2 $$ public void getCURIE(URI uri) -->Line_4 $$ String namespace = s.substring(0, s.indexOf(OntMapper.NUMBER_SIGN))[ CD ]
Line_4 $$ String namespace = s.substring(0, s.indexOf(OntMapper.NUMBER_SIGN))-->Line_4 $$ s.substring(0, s.indexOf(OntMapper.NUMBER_SIGN))[ CD ]
Line_3 $$ String s = uri.toString()-->Line_4 $$ s.substring(0, s.indexOf(OntMapper.NUMBER_SIGN))[ FD ]
Line_3 $$ String s = uri.toString()-->Line_4 $$ s.indexOf(OntMapper.NUMBER_SIGN)[ FD ]
Line_2 $$ public void getCURIE(URI uri) -->Line_5 $$ if (!namespace.equals(Janus.ontologyURI)) [ CD ]
Line_5 $$ if (!namespace.equals(Janus.ontologyURI)) -->Line_5 $$ !namespace.equals(Janus.ontologyURI)[ CD ]
Line_5 $$ !namespace.equals(Janus.ontologyURI)-->Line_5 $$ namespace.equals(Janus.ontologyURI)[ CD ]
Line_4 $$ String namespace = s.substring(0, s.indexOf(OntMapper.NUMBER_SIGN))-->Line_5 $$ namespace.equals(Janus.ontologyURI)[ FD ]
Line_5 $$ if (!namespace.equals(Janus.ontologyURI)) -->Line_6 $$ String prefix = PrefixMap.getPrefix(URI.create(namespace))[ CD ]
Line_6 $$ String prefix = PrefixMap.getPrefix(URI.create(namespace))-->Line_6 $$ PrefixMap.getPrefix(URI.create(namespace))[ CD ]
Line_4 $$ String namespace = s.substring(0, s.indexOf(OntMapper.NUMBER_SIGN))-->Line_6 $$ URI.create(namespace)[ FD ]
Line_5 $$ if (!namespace.equals(Janus.ontologyURI)) -->Line_7 $$ return prefix + OntMapper.COLON + uri.getFragment();[ CD ]
Line_2 $$ public void getCURIE(URI uri) -->Line_9 $$ return OntMapper.COLON + uri.getFragment();[ CD ]
