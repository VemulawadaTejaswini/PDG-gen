Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void JsonRef(final URI uri) [ CD ]
Line_2 $$ public void JsonRef(final URI uri) -->Line_3 $$ final String scheme = uri.getScheme()[ CD ]
Line_3 $$ final String scheme = uri.getScheme()-->Line_3 $$ uri.getScheme()[ CD ]
Line_2 $$ public void JsonRef(final URI uri) -->Line_4 $$ final String ssp = uri.getSchemeSpecificPart()[ CD ]
Line_4 $$ final String ssp = uri.getSchemeSpecificPart()-->Line_4 $$ uri.getSchemeSpecificPart()[ CD ]
Line_2 $$ public void JsonRef(final URI uri) -->Line_5 $$ final String fragment = Optional.fromNullable(uri.getFragment()).or("")[ CD ]
Line_5 $$ final String fragment = Optional.fromNullable(uri.getFragment()).or("")-->Line_5 $$ Optional.fromNullable(uri.getFragment()).or("")[ CD ]
Line_5 $$ final String fragment = Optional.fromNullable(uri.getFragment()).or("")-->Line_6 $$ fragment.isEmpty()[ FD ]
Line_2 $$ public void JsonRef(final URI uri) -->Line_8 $$ this.uri = new URI(scheme, ssp, fragment)[ CD ]
Line_2 $$ public void JsonRef(final URI uri) -->Line_10 $$ this.uri.toString()[ CD ]
Line_2 $$ public void JsonRef(final URI uri) -->Line_11 $$ asString.hashCode()[ CD ]
