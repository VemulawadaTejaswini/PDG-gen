Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void test_getEntryName() [ CD ]
Line_2 $$ public void test_getEntryName() -->Line_3 $$ URL u = copyAndOpenResourceStream("lf.jar", "plus.bmp")[ CD ]
Line_3 $$ URL u = copyAndOpenResourceStream("lf.jar", "plus.bmp")-->Line_3 $$ copyAndOpenResourceStream("lf.jar", "plus.bmp")[ CD ]
Line_3 $$ URL u = copyAndOpenResourceStream("lf.jar", "plus.bmp")-->Line_4 $$ u.openConnection()[ FD ]
Line_2 $$ public void test_getEntryName() -->Line_5 $$ assertEquals("Returned incorrect entryName", "plus.bmp", juc.getEntryName())[ CD ]
Line_2 $$ public void test_getEntryName() -->Line_7 $$ u = copyAndOpenResourceStream("lf.jar", "")[ CD ]
Line_3 $$ URL u = copyAndOpenResourceStream("lf.jar", "plus.bmp")-->Line_7 $$ u = copyAndOpenResourceStream("lf.jar", "")[ FD ]
Line_7 $$ u = copyAndOpenResourceStream("lf.jar", "")-->Line_7 $$ u = copyAndOpenResourceStream("lf.jar", "")[ FD ]
Line_7 $$ u = copyAndOpenResourceStream("lf.jar", "")-->Line_7 $$ copyAndOpenResourceStream("lf.jar", "")[ CD ]
Line_3 $$ URL u = copyAndOpenResourceStream("lf.jar", "plus.bmp")-->Line_8 $$ u.openConnection()[ FD ]
Line_7 $$ u = copyAndOpenResourceStream("lf.jar", "")-->Line_8 $$ u.openConnection()[ FD ]
Line_2 $$ public void test_getEntryName() -->Line_9 $$ assertNull("Returned incorrect entryName", juc.getEntryName())[ CD ]
Line_2 $$ public void test_getEntryName() -->Line_10 $$ URL url = copyAndOpenResourceStream("lf.jar", "foo.jar!/Bugs/HelloWorld.class")[ CD ]
Line_10 $$ URL url = copyAndOpenResourceStream("lf.jar", "foo.jar!/Bugs/HelloWorld.class")-->Line_10 $$ copyAndOpenResourceStream("lf.jar", "foo.jar!/Bugs/HelloWorld.class")[ CD ]
Line_2 $$ public void test_getEntryName() -->Line_11 $$ assertEquals("foo.jar!/Bugs/HelloWorld.class", ((JarURLConnection) url.openConnection()).getEntryName())[ CD ]
Line_10 $$ URL url = copyAndOpenResourceStream("lf.jar", "foo.jar!/Bugs/HelloWorld.class")-->Line_11 $$ url.openConnection()[ FD ]
