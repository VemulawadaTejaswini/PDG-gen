Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void checkUpdate(String s) [ CD ]
Line_2 $$ public void checkUpdate(String s) -->Line_3 $$ URL url = new URL(s)[ CD ]
Line_2 $$ public void checkUpdate(String s) -->Line_4 $$ URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_4 $$ url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(s)-->Line_4 $$ url.openConnection()[ FD ]
Line_2 $$ public void checkUpdate(String s) -->Line_5 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_6 $$ conn.getInputStream()[ FD ]
Line_2 $$ public void checkUpdate(String s) -->Line_7 $$ if ((line = in.readLine()) != null) [ CD ]
Line_5 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_7 $$ in.readLine()[ FD ]
Line_7 $$ if ((line = in.readLine()) != null) -->Line_8 $$ line.trim()[ CD ]
Line_7 $$ if ((line = in.readLine()) != null) -->Line_10 $$ while ((line = in.readLine()) != null) details += line;[ CD ]
Line_7 $$ if ((line = in.readLine()) != null) -->Line_7 $$ if ((line = in.readLine()) != null) [ CD ]
Line_5 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_10 $$ in.readLine()[ FD ]
Line_7 $$ if ((line = in.readLine()) != null) -->Line_12 $$ return true;[ CD ]
