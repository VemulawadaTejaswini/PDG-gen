Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testPetStore() [ CD ]
Line_2 $$ public void testPetStore() -->Line_3 $$ URL url = new URL(endpointAddress)[ CD ]
Line_2 $$ public void testPetStore() -->Line_4 $$ URLConnection connect = url.openConnection()[ CD ]
Line_4 $$ URLConnection connect = url.openConnection()-->Line_4 $$ url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(endpointAddress)-->Line_4 $$ url.openConnection()[ FD ]
Line_2 $$ public void testPetStore() -->Line_5 $$ connect.addRequestProperty("Accept", "text/xml")[ CD ]
Line_4 $$ URLConnection connect = url.openConnection()-->Line_5 $$ connect.addRequestProperty("Accept", "text/xml")[ FD ]
Line_2 $$ public void testPetStore() -->Line_6 $$ InputStream in = connect.getInputStream()[ CD ]
Line_6 $$ InputStream in = connect.getInputStream()-->Line_6 $$ connect.getInputStream()[ CD ]
Line_4 $$ URLConnection connect = url.openConnection()-->Line_6 $$ connect.getInputStream()[ FD ]
Line_2 $$ public void testPetStore() -->Line_7 $$ assertNotNull(in)[ CD ]
Line_6 $$ InputStream in = connect.getInputStream()-->Line_7 $$ assertNotNull(in)[ FD ]
Line_2 $$ public void testPetStore() -->Line_8 $$ assertEquals(PetStore.CLOSED, getStringFromInputStream(in))[ CD ]
Line_6 $$ InputStream in = connect.getInputStream()-->Line_8 $$ getStringFromInputStream(in)[ FD ]
