Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testQueryRedirect() [ CD ]
Line_2 $$ public void testQueryRedirect() -->Line_3 $$ URL url = new URI("http", null, "localhost", HTTP_SERVER_PORT, "/path", "redirect=/a/b/c/d?q", null).toURL()[ CD ]
Line_3 $$ URL url = new URI("http", null, "localhost", HTTP_SERVER_PORT, "/path", "redirect=/a/b/c/d?q", null).toURL()-->Line_3 $$ new URI("http", null, "localhost", HTTP_SERVER_PORT, "/path", "redirect=/a/b/c/d?q", null).toURL()[ CD ]
Line_2 $$ public void testQueryRedirect() -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URI("http", null, "localhost", HTTP_SERVER_PORT, "/path", "redirect=/a/b/c/d?q", null).toURL()-->Line_4 $$ url.openConnection()[ FD ]
Line_2 $$ public void testQueryRedirect() -->Line_5 $$ conn.setInstanceFollowRedirects(false)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.setInstanceFollowRedirects(false)[ FD ]
Line_2 $$ public void testQueryRedirect() -->Line_6 $$ conn.connect()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.connect()[ FD ]
Line_2 $$ public void testQueryRedirect() -->Line_7 $$ assertEquals(302, conn.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.getResponseCode()[ FD ]
Line_2 $$ public void testQueryRedirect() -->Line_8 $$ assertEquals("Temporary Redirect", conn.getResponseMessage())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getResponseMessage()[ FD ]
Line_2 $$ public void testQueryRedirect() -->Line_9 $$ assertEquals("/a/b/c/d?q", conn.getHeaderField("Location"))[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getHeaderField("Location")[ FD ]
