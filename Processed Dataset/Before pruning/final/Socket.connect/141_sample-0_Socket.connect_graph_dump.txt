Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void validateRemoteDomain(Element doc, StreamID streamID) [ CD ]
Line_2 $$ public void validateRemoteDomain(Element doc, StreamID streamID) -->Line_3 $$ for (Iterator<DNSUtil.HostAddress> it = hosts.iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ public void validateRemoteDomain(Element doc, StreamID streamID) -->Line_2 $$ public void validateRemoteDomain(Element doc, StreamID streamID) [ CD ]
Line_3 $$ for (Iterator<DNSUtil.HostAddress> it = hosts.iterator(); it.hasNext(); ) -->Line_3 $$ it.hasNext()[ CD ]
Line_3 $$ for (Iterator<DNSUtil.HostAddress> it = hosts.iterator(); it.hasNext(); ) -->Line_3 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()[ CD ]
Line_3 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_3 $$ hosts.iterator()[ CD ]
Line_5 $$ DNSUtil.HostAddress address = it.next()-->Line_5 $$ it.next()[ CD ]
Line_3 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_5 $$ it.next()[ FD ]
Line_5 $$ DNSUtil.HostAddress address = it.next()-->Line_6 $$ address.getHost()[ FD ]
Line_5 $$ DNSUtil.HostAddress address = it.next()-->Line_7 $$ address.getPort()[ FD ]
Line_3 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_3 $$ it.hasNext()[ FD ]
Line_3 $$ Iterator<DNSUtil.HostAddress> it = hosts.iterator()-->Line_5 $$ it.next()[ FD ]
Line_5 $$ DNSUtil.HostAddress address = it.next()-->Line_6 $$ address.getHost()[ FD ]
Line_5 $$ DNSUtil.HostAddress address = it.next()-->Line_7 $$ address.getPort()[ FD ]
