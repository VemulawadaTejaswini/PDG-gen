Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testFileChannelBlockRead() [ CD ]
Line_2 $$ public void testFileChannelBlockRead() -->Line_3 $$ do [ CD ]
Line_2 $$ public void testFileChannelBlockRead() -->Line_2 $$ public void testFileChannelBlockRead() [ CD ]
Line_3 $$ do -->Line_4 $$ int rd = in.read(buf)[ CD ]
Line_4 $$ int rd = in.read(buf)-->Line_4 $$ in.read(buf)[ CD ]
Line_3 $$ do -->Line_6 $$ buf.flip()[ CD ]
Line_3 $$ do -->Line_7 $$ byte[] arr = new byte[buf.remaining()][ CD ]
Line_3 $$ do -->Line_8 $$ buf.get(arr)[ CD ]
Line_7 $$ byte[] arr = new byte[buf.remaining()]-->Line_8 $$ buf.get(arr)[ FD ]
Line_3 $$ do -->Line_9 $$ String s = new String(arr)[ CD ]
Line_3 $$ do -->Line_10 $$ System.out.print(s)[ CD ]
Line_9 $$ String s = new String(arr)-->Line_10 $$ System.out.print(s)[ FD ]
Line_3 $$ do -->Line_11 $$ buf.clear()[ CD ]
Line_3 $$ do -->Line_13 $$ !done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_13 $$ !done.await(5, TimeUnit.MILLISECONDS)-->Line_13 $$ done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_2 $$ public void testFileChannelBlockRead() -->Line_14 $$ LOG.info("read " + read + " bytes in " + loops + " iterations")[ CD ]
Line_2 $$ public void testFileChannelBlockRead() -->Line_15 $$ in.close()[ CD ]
Line_2 $$ public void testFileChannelBlockRead() -->Line_16 $$ assertEquals(790, read)[ CD ]
Line_7 $$ byte[] arr = new byte[buf.remaining()]-->Line_8 $$ buf.get(arr)[ FD ]
Line_9 $$ String s = new String(arr)-->Line_10 $$ System.out.print(s)[ FD ]
