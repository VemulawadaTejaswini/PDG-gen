Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void timeReadCD(String filename, Stat stat) [ CD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_4 $$ file.seek(pos)[ CD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_5 $$ int nelems = file.readInt()[ CD ]
Line_5 $$ int nelems = file.readInt()-->Line_5 $$ file.readInt()[ CD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_6 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)[ CD ]
Line_6 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_6 $$ ByteBuffer.allocateDirect(nelems * 4)[ CD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_7 $$ IntBuffer ibuff = bbuff.asIntBuffer()[ CD ]
Line_7 $$ IntBuffer ibuff = bbuff.asIntBuffer()-->Line_7 $$ bbuff.asIntBuffer()[ CD ]
Line_6 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_7 $$ bbuff.asIntBuffer()[ FD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_8 $$ channel.read(bbuff)[ CD ]
Line_6 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_8 $$ channel.read(bbuff)[ FD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_9 $$ int[] data = new int[nelems][ CD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_10 $$ ibuff.get(data)[ CD ]
Line_7 $$ IntBuffer ibuff = bbuff.asIntBuffer()-->Line_10 $$ ibuff.get(data)[ FD ]
Line_9 $$ int[] data = new int[nelems]-->Line_10 $$ ibuff.get(data)[ FD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_11 $$ for (int j = 0; j < nelems; j++) [ CD ]
Line_3 $$ while (pos < fileSizeBytes) -->Line_3 $$ while (pos < fileSizeBytes) [ CD ]
Line_5 $$ int nelems = file.readInt()-->Line_11 $$ for (int j = 0; j < nelems; j++) [ FD ]
Line_11 $$ for (int j = 0; j < nelems; j++) -->Line_11 $$ int j = 0[ CD ]
Line_11 $$ for (int j = 0; j < nelems; j++) -->Line_11 $$ j++[ CD ]
Line_11 $$ int j = 0-->Line_11 $$ j++[ FD ]
Line_11 $$ for (int j = 0; j < nelems; j++) -->Line_12 $$ if (data[j] != j) [ CD ]
Line_11 $$ int j = 0-->Line_12 $$ if (data[j] != j) [ FD ]
Line_12 $$ if (data[j] != j) -->Line_13 $$ System.out.println(" bad at pos " + pos + " file= " + filename)[ CD ]
Line_2 $$ public void timeReadCD(String filename, Stat stat) -->Line_20 $$ channel.close()[ CD ]
Line_6 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_7 $$ bbuff.asIntBuffer()[ FD ]
Line_6 $$ ByteBuffer bbuff = ByteBuffer.allocateDirect(nelems * 4)-->Line_8 $$ channel.read(bbuff)[ FD ]
Line_7 $$ IntBuffer ibuff = bbuff.asIntBuffer()-->Line_10 $$ ibuff.get(data)[ FD ]
Line_9 $$ int[] data = new int[nelems]-->Line_10 $$ ibuff.get(data)[ FD ]
Line_11 $$ int j = 0-->Line_11 $$ for (int j = 0; j < nelems; j++) [ FD ]
Line_11 $$ int j = 0-->Line_11 $$ for (int j = 0; j < nelems; j++) [ FD ]
Line_11 $$ int j = 0-->Line_11 $$ j++[ FD ]
Line_11 $$ int j = 0-->Line_12 $$ if (data[j] != j) [ FD ]
