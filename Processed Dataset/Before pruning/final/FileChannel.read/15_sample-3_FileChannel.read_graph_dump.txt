Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readFileChannelFully(FileChannel fileChannel, byte buf[], int off, int len) [ CD ]
Line_2 $$ public void readFileChannelFully(FileChannel fileChannel, byte buf[], int off, int len) -->Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buf, off, len)[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buf, off, len)-->Line_3 $$ ByteBuffer.wrap(buf, off, len)[ CD ]
Line_2 $$ public void readFileChannelFully(FileChannel fileChannel, byte buf[], int off, int len) -->Line_4 $$ while (toRead > 0) [ CD ]
Line_2 $$ public void readFileChannelFully(FileChannel fileChannel, byte buf[], int off, int len) -->Line_2 $$ public void readFileChannelFully(FileChannel fileChannel, byte buf[], int off, int len) [ CD ]
Line_4 $$ while (toRead > 0) -->Line_5 $$ int ret = fileChannel.read(byteBuffer)[ CD ]
Line_5 $$ int ret = fileChannel.read(byteBuffer)-->Line_5 $$ fileChannel.read(byteBuffer)[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.wrap(buf, off, len)-->Line_5 $$ fileChannel.read(byteBuffer)[ FD ]
Line_4 $$ while (toRead > 0) -->Line_6 $$ if (ret < 0) [ CD ]
Line_5 $$ int ret = fileChannel.read(byteBuffer)-->Line_6 $$ if (ret < 0) [ FD ]
Line_4 $$ while (toRead > 0) -->Line_10 $$ off += ret[ CD ]
Line_10 $$ off += ret-->Line_10 $$ off += ret[ FD ]
Line_5 $$ int ret = fileChannel.read(byteBuffer)-->Line_10 $$ off += ret[ FD ]
Line_5 $$ int ret = fileChannel.read(byteBuffer)-->Line_6 $$ if (ret < 0) [ FD ]
Line_5 $$ int ret = fileChannel.read(byteBuffer)-->Line_10 $$ off += ret[ FD ]
