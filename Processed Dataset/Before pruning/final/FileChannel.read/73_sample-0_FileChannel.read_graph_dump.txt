Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getIPBans() [ CD ]
Line_2 $$ public void getIPBans() -->Line_3 $$ if (!data.exists()) [ CD ]
Line_3 $$ if (!data.exists()) -->Line_3 $$ !data.exists()[ CD ]
Line_3 $$ !data.exists()-->Line_3 $$ data.exists()[ CD ]
Line_3 $$ if (!data.exists()) -->Line_4 $$ return d;[ CD ]
Line_2 $$ public void getIPBans() -->Line_7 $$ fin.getChannel()[ CD ]
Line_2 $$ public void getIPBans() -->Line_8 $$ long size = chan.size()[ CD ]
Line_8 $$ long size = chan.size()-->Line_8 $$ chan.size()[ CD ]
Line_2 $$ public void getIPBans() -->Line_9 $$ ByteBuffer.allocateDirect((int) size)[ CD ]
Line_2 $$ public void getIPBans() -->Line_10 $$ chan.read(buf)[ CD ]
