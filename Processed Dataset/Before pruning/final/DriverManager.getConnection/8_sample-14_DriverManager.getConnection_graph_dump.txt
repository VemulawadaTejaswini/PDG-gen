Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) [ CD ]
Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) -->Line_3 $$ PhoenixConnection pconn = DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)[ CD ]
Line_3 $$ PhoenixConnection pconn = DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)-->Line_3 $$ DriverManager.getConnection(getUrl(), PropertiesUtil.deepCopy(TEST_PROPERTIES)).unwrap(PhoenixConnection.class)[ CD ]
Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) -->Line_4 $$ PhoenixPreparedStatement pstmt = new PhoenixPreparedStatement(pconn, query)[ CD ]
Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) -->Line_5 $$ TestUtil.bindParams(pstmt, binds)[ CD ]
Line_4 $$ PhoenixPreparedStatement pstmt = new PhoenixPreparedStatement(pconn, query)-->Line_5 $$ TestUtil.bindParams(pstmt, binds)[ FD ]
Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) -->Line_6 $$ QueryPlan plan = pstmt.compileQuery()[ CD ]
Line_6 $$ QueryPlan plan = pstmt.compileQuery()-->Line_6 $$ pstmt.compileQuery()[ CD ]
Line_4 $$ PhoenixPreparedStatement pstmt = new PhoenixPreparedStatement(pconn, query)-->Line_6 $$ pstmt.compileQuery()[ FD ]
Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) -->Line_7 $$ assertEquals(limit, plan.getLimit())[ CD ]
Line_6 $$ QueryPlan plan = pstmt.compileQuery()-->Line_7 $$ plan.getLimit()[ FD ]
Line_2 $$ public void compileStatement(String query, List<Object> binds, Integer limit) -->Line_8 $$ return plan.getContext();[ CD ]
Line_8 $$ return plan.getContext();-->Line_8 $$ plan.getContext()[ CD ]
Line_6 $$ QueryPlan plan = pstmt.compileQuery()-->Line_8 $$ plan.getContext()[ FD ]
