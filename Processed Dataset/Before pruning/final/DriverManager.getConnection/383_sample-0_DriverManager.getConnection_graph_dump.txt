Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void singleSpan() [ CD ]
Line_2 $$ public void singleSpan() -->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_3 $$ DriverManager.getConnection(getUrl(), props)[ CD ]
Line_2 $$ public void singleSpan() -->Line_4 $$ sink.initForTesting(conn)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_4 $$ sink.initForTesting(conn)[ FD ]
Line_2 $$ public void singleSpan() -->Line_5 $$ createAndFlush(sink, traceid, Span.ROOT_SPAN_ID, 10, "root", 12, 13, "host-name.value", "test annotation for a span")[ CD ]
Line_2 $$ public void singleSpan() -->Line_7 $$ validateTraces(Collections.singletonList(record), conn, traceid)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_7 $$ validateTraces(Collections.singletonList(record), conn, traceid)[ FD ]
