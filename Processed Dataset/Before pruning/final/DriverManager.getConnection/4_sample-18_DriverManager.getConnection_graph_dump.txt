Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getConnection(String connectionUrl, String username, String passwd) [ CD ]
Line_2 $$ public void getConnection(String connectionUrl, String username, String passwd) -->Line_3 $$ if (!connectionUrl.contains("database=")) [ CD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_3 $$ !connectionUrl.contains("database=")[ CD ]
Line_3 $$ !connectionUrl.contains("database=")-->Line_3 $$ connectionUrl.contains("database=")[ CD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_4 $$ String dbname = connectionUrl.substring(connectionUrl.lastIndexOf('/') + 1)[ CD ]
Line_4 $$ String dbname = connectionUrl.substring(connectionUrl.lastIndexOf('/') + 1)-->Line_4 $$ connectionUrl.substring(connectionUrl.lastIndexOf('/') + 1)[ CD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))[ CD ]
Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))-->Line_5 $$ connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))[ CD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_6 $$ String port = url.substring(url.lastIndexOf(":") + 1)[ CD ]
Line_6 $$ String port = url.substring(url.lastIndexOf(":") + 1)-->Line_6 $$ url.substring(url.lastIndexOf(":") + 1)[ CD ]
Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))-->Line_6 $$ url.substring(url.lastIndexOf(":") + 1)[ FD ]
Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))-->Line_6 $$ url.lastIndexOf(":")[ FD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_7 $$ port = port.isEmpty() ? "" : ",dbs_port=" + port[ CD ]
Line_6 $$ String port = url.substring(url.lastIndexOf(":") + 1)-->Line_7 $$ port = port.isEmpty() ? "" : ",dbs_port=" + port[ FD ]
Line_7 $$ port = port.isEmpty() ? "" : ",dbs_port=" + port-->Line_7 $$ port = port.isEmpty() ? "" : ",dbs_port=" + port[ FD ]
Line_6 $$ String port = url.substring(url.lastIndexOf(":") + 1)-->Line_7 $$ port.isEmpty()[ FD ]
Line_7 $$ port = port.isEmpty() ? "" : ",dbs_port=" + port-->Line_7 $$ port.isEmpty()[ FD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))[ CD ]
Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))-->Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))[ FD ]
Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))-->Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))[ FD ]
Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))-->Line_8 $$ url.substring(0, url.lastIndexOf(":"))[ CD ]
Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))-->Line_8 $$ url.substring(0, url.lastIndexOf(":"))[ FD ]
Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))-->Line_8 $$ url.substring(0, url.lastIndexOf(":"))[ FD ]
Line_5 $$ String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'))-->Line_8 $$ url.lastIndexOf(":")[ FD ]
Line_8 $$ url = url.substring(0, url.lastIndexOf(":"))-->Line_8 $$ url.lastIndexOf(":")[ FD ]
Line_3 $$ if (!connectionUrl.contains("database=")) -->Line_9 $$ connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port[ CD ]
Line_9 $$ connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port-->Line_9 $$ connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port[ FD ]
Line_6 $$ String port = url.substring(url.lastIndexOf(":") + 1)-->Line_9 $$ connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port[ FD ]
Line_7 $$ port = port.isEmpty() ? "" : ",dbs_port=" + port-->Line_9 $$ connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port[ FD ]
Line_2 $$ public void getConnection(String connectionUrl, String username, String passwd) -->Line_11 $$ return DriverManager.getConnection(connectionUrl, username, passwd);[ CD ]
Line_11 $$ return DriverManager.getConnection(connectionUrl, username, passwd);-->Line_11 $$ DriverManager.getConnection(connectionUrl, username, passwd)[ CD ]
Line_9 $$ connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port-->Line_11 $$ DriverManager.getConnection(connectionUrl, username, passwd)[ FD ]
