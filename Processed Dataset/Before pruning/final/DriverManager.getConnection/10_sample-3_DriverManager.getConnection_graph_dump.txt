Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testSumFloat() [ CD ]
Line_2 $$ public void testSumFloat() -->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_3 $$ DriverManager.getConnection(getUrl(), props)[ CD ]
Line_2 $$ public void testSumFloat() -->Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_4 $$ conn.prepareStatement(query)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_4 $$ conn.prepareStatement(query)[ FD ]
Line_2 $$ public void testSumFloat() -->Line_5 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = statement.executeQuery()-->Line_5 $$ statement.executeQuery()[ CD ]
Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_5 $$ statement.executeQuery()[ FD ]
Line_2 $$ public void testSumFloat() -->Line_6 $$ assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = statement.executeQuery()-->Line_6 $$ rs.next()[ FD ]
Line_2 $$ public void testSumFloat() -->Line_7 $$ assertTrue(Floats.compare(rs.getFloat(1), 0.15f) == 0)[ CD ]
Line_5 $$ ResultSet rs = statement.executeQuery()-->Line_7 $$ rs.getFloat(1)[ FD ]
Line_2 $$ public void testSumFloat() -->Line_8 $$ assertFalse(rs.next())[ CD ]
Line_5 $$ ResultSet rs = statement.executeQuery()-->Line_8 $$ rs.next()[ FD ]
Line_2 $$ public void testSumFloat() -->Line_9 $$ conn.close()[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_9 $$ conn.close()[ FD ]
