Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testUnsignedDoubleAddExpression() [ CD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_3 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ CD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_4 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_5 $$ conn.prepareStatement(query)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_5 $$ conn.prepareStatement(query)[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_6 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_6 $$ statement.executeQuery()[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_6 $$ statement.executeQuery()[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_7 $$ assertTrue(rs.next())[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_7 $$ rs.next()[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_8 $$ assertEquals(ROW8, rs.getString(1))[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_8 $$ rs.getString(1)[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_9 $$ assertTrue(rs.next())[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_9 $$ rs.next()[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_10 $$ assertEquals(ROW9, rs.getString(1))[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_10 $$ rs.getString(1)[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_11 $$ assertFalse(rs.next())[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_11 $$ rs.next()[ FD ]
Line_2 $$ public void testUnsignedDoubleAddExpression() -->Line_12 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_12 $$ conn.close()[ FD ]
