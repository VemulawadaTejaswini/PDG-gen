Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testControl() [ CD ]
Line_2 $$ public void testControl() -->Line_3 $$ Statement stat = conn.createStatement()[ CD ]
Line_3 $$ Statement stat = conn.createStatement()-->Line_3 $$ conn.createStatement()[ CD ]
Line_2 $$ public void testControl() -->Line_4 $$ stat.execute("create alias overload0 for \"" + ME + ".overload0\"")[ CD ]
Line_3 $$ Statement stat = conn.createStatement()-->Line_4 $$ stat.execute("create alias overload0 for \"" + ME + ".overload0\"")[ FD ]
Line_2 $$ public void testControl() -->Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")[ CD ]
Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")-->Line_5 $$ stat.executeQuery("select overload0() from dual")[ CD ]
Line_3 $$ Statement stat = conn.createStatement()-->Line_5 $$ stat.executeQuery("select overload0() from dual")[ FD ]
Line_2 $$ public void testControl() -->Line_6 $$ assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")-->Line_6 $$ rs.next()[ FD ]
Line_2 $$ public void testControl() -->Line_7 $$ assertEquals("0 args", 0, rs.getInt(1))[ CD ]
Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")-->Line_7 $$ rs.getInt(1)[ FD ]
Line_2 $$ public void testControl() -->Line_8 $$ assertFalse(rs.next())[ CD ]
Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")-->Line_8 $$ rs.next()[ FD ]
Line_2 $$ public void testControl() -->Line_9 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")[ CD ]
Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")-->Line_9 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")[ FD ]
Line_9 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")-->Line_9 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")[ FD ]
Line_9 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")-->Line_9 $$ meta.getProcedures(null, null, "OVERLOAD0")[ CD ]
Line_2 $$ public void testControl() -->Line_10 $$ assertFalse(rs.next())[ CD ]
Line_5 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")-->Line_10 $$ rs.next()[ FD ]
Line_9 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")-->Line_10 $$ rs.next()[ FD ]
