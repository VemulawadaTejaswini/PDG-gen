Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void runAsyncInternal() [ CD ]
Line_2 $$ public void runAsyncInternal() -->Line_3 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()[ CD ]
Line_3 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()-->Line_3 $$ Concurrent.getManagedSingleThreadedExecutorService()[ CD ]
Line_2 $$ public void runAsyncInternal() -->Line_4 $$ !crate.getPayload2()[ CD ]
Line_4 $$ !crate.getPayload2()-->Line_4 $$ crate.getPayload2()[ CD ]
Line_3 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()-->Line_4 $$ crate.getPayload2()[ FD ]
Line_2 $$ public void runAsyncInternal() -->Line_5 $$ ExecutorService executor = crate.getPayload1()[ CD ]
Line_5 $$ ExecutorService executor = crate.getPayload1()-->Line_5 $$ crate.getPayload1()[ CD ]
Line_3 $$ Crate.Tuple<ExecutorService, Boolean> crate = Concurrent.getManagedSingleThreadedExecutorService()-->Line_5 $$ crate.getPayload1()[ FD ]
Line_2 $$ public void runAsyncInternal() -->Line_6 $$ executor.submit(callable)[ CD ]
Line_5 $$ ExecutorService executor = crate.getPayload1()-->Line_6 $$ executor.submit(callable)[ FD ]
Line_2 $$ public void runAsyncInternal() -->Line_7 $$ executor.shutdown()[ CD ]
Line_5 $$ ExecutorService executor = crate.getPayload1()-->Line_7 $$ executor.shutdown()[ FD ]
