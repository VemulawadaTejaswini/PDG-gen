Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testPreparedSetSchemaFunction() [ CD ]
Line_2 $$ public void testPreparedSetSchemaFunction() -->Line_3 $$ PreparedStatement ps = prepareStatement("SELECT " + "APP.GET_SCHEMA_TRANSITION(SCHEMANAME) FROM SYS.SYSSCHEMAS")[ CD ]
Line_3 $$ PreparedStatement ps = prepareStatement("SELECT " + "APP.GET_SCHEMA_TRANSITION(SCHEMANAME) FROM SYS.SYSSCHEMAS")-->Line_3 $$ prepareStatement("SELECT " + "APP.GET_SCHEMA_TRANSITION(SCHEMANAME) FROM SYS.SYSSCHEMAS")[ CD ]
Line_2 $$ public void testPreparedSetSchemaFunction() -->Line_5 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_5 $$ ps.executeQuery()[ CD ]
Line_3 $$ PreparedStatement ps = prepareStatement("SELECT " + "APP.GET_SCHEMA_TRANSITION(SCHEMANAME) FROM SYS.SYSSCHEMAS")-->Line_5 $$ ps.executeQuery()[ FD ]
Line_2 $$ public void testPreparedSetSchemaFunction() -->Line_6 $$ while (rs.next()) [ CD ]
Line_2 $$ public void testPreparedSetSchemaFunction() -->Line_2 $$ public void testPreparedSetSchemaFunction() [ CD ]
Line_6 $$ while (rs.next()) -->Line_6 $$ rs.next()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_6 $$ rs.next()[ FD ]
Line_6 $$ while (rs.next()) -->Line_7 $$ assertTrue(rs.getString(1).length() > 2)[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ rs.getString(1)[ FD ]
Line_6 $$ while (rs.next()) -->Line_8 $$ verifyCachedSchema(getConnection())[ CD ]
