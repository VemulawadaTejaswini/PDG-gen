Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void pathWithSpacesInTheNameDoesNotFail() [ CD ]
Line_2 $$ public void pathWithSpacesInTheNameDoesNotFail() -->Line_3 $$ ClassLoader resultsClassLoader = generateAndCompile("/schema/regression/spaces in path.json", "com.example", Collections.<String, Object>emptyMap())[ CD ]
Line_3 $$ ClassLoader resultsClassLoader = generateAndCompile("/schema/regression/spaces in path.json", "com.example", Collections.<String, Object>emptyMap())-->Line_3 $$ generateAndCompile("/schema/regression/spaces in path.json", "com.example", Collections.<String, Object>emptyMap())[ CD ]
Line_2 $$ public void pathWithSpacesInTheNameDoesNotFail() -->Line_4 $$ Class generatedType = resultsClassLoader.loadClass("com.example.SpacesInPath")[ CD ]
Line_4 $$ Class generatedType = resultsClassLoader.loadClass("com.example.SpacesInPath")-->Line_4 $$ resultsClassLoader.loadClass("com.example.SpacesInPath")[ CD ]
Line_3 $$ ClassLoader resultsClassLoader = generateAndCompile("/schema/regression/spaces in path.json", "com.example", Collections.<String, Object>emptyMap())-->Line_4 $$ resultsClassLoader.loadClass("com.example.SpacesInPath")[ FD ]
