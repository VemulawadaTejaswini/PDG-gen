Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void dateConverterShouldAcceptStringAndNumeric() [ CD ]
Line_2 $$ public void dateConverterShouldAcceptStringAndNumeric() -->Line_3 $$ String strDate = df.format(new Date(now))[ CD ]
Line_3 $$ String strDate = df.format(new Date(now))-->Line_3 $$ df.format(new Date(now))[ CD ]
Line_2 $$ public void dateConverterShouldAcceptStringAndNumeric() -->Line_4 $$ Date date2 = genson.deserialize(String.format("\"%s\"", strDate), Date.class)[ CD ]
Line_4 $$ Date date2 = genson.deserialize(String.format("\"%s\"", strDate), Date.class)-->Line_4 $$ genson.deserialize(String.format("\"%s\"", strDate), Date.class)[ CD ]
Line_3 $$ String strDate = df.format(new Date(now))-->Line_4 $$ String.format("\"%s\"", strDate)[ FD ]
Line_2 $$ public void dateConverterShouldAcceptStringAndNumeric() -->Line_5 $$ assertEquals(strDate, df.format(date2))[ CD ]
Line_3 $$ String strDate = df.format(new Date(now))-->Line_5 $$ assertEquals(strDate, df.format(date2))[ FD ]
Line_4 $$ Date date2 = genson.deserialize(String.format("\"%s\"", strDate), Date.class)-->Line_5 $$ df.format(date2)[ FD ]
