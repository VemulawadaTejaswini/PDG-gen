Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void BenchmarkCreator(String label) [ CD ]
Line_2 $$ public void BenchmarkCreator(String label) -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime.getRuntime()[ CD ]
Line_2 $$ public void BenchmarkCreator(String label) -->Line_4 $$ properties.setProperty("java.memory.free", String.valueOf(runtime.freeMemory()))[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.freeMemory()[ FD ]
Line_2 $$ public void BenchmarkCreator(String label) -->Line_6 $$ properties.setProperty("java.memory.total", String.valueOf(runtime.totalMemory()))[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_7 $$ runtime.totalMemory()[ FD ]
Line_2 $$ public void BenchmarkCreator(String label) -->Line_8 $$ properties.setProperty("java.memory.max", String.valueOf(runtime.maxMemory()))[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_9 $$ runtime.maxMemory()[ FD ]
Line_2 $$ public void BenchmarkCreator(String label) -->Line_10 $$ properties.setProperty("java.processors.available", String.valueOf(runtime.availableProcessors()))[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_11 $$ runtime.availableProcessors()[ FD ]
