Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_6 $$ conn.addRequestProperty("X-SetHeaders", "Location: /abcd|X-Dummy: none")  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_7 $$ conn.connect()  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_8 $$ assertEquals(200, conn.getResponseCode())  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_9 $$ assertEquals("OK", conn.getResponseMessage())  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_10 $$ assertEquals("/abcd", conn.getHeaderField("Location"))  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_11 $$ assertEquals("none", conn.getHeaderField("X-Dummy"))  [FD]
Line_3 $$ public void testHeaders() --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/") --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void testHeaders() --> Line_4 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")  [CD]
Line_3 $$ public void testHeaders() --> Line_6 $$ conn.addRequestProperty("X-SetHeaders", "Location: /abcd|X-Dummy: none")  [CD]
Line_3 $$ public void testHeaders() --> Line_7 $$ conn.connect()  [CD]
Line_3 $$ public void testHeaders() --> Line_8 $$ assertEquals(200, conn.getResponseCode())  [CD]
Line_3 $$ public void testHeaders() --> Line_9 $$ assertEquals("OK", conn.getResponseMessage())  [CD]
Line_3 $$ public void testHeaders() --> Line_10 $$ assertEquals("/abcd", conn.getHeaderField("Location"))  [CD]
Line_3 $$ public void testHeaders() --> Line_11 $$ assertEquals("none", conn.getHeaderField("X-Dummy"))  [CD]
