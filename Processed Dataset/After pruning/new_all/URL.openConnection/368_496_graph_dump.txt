Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_6 $$ conn.setRequestMethod("GET")  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_7 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_8 $$ assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE))  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_9 $$ JSONObject json = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))  [FD]
Line_3 $$ public void call() --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ URL url = createURL(RestConstants.ADMIN_OS_ENV_RESOURCE, Collections.EMPTY_MAP) --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void call() --> Line_4 $$ URL url = createURL(RestConstants.ADMIN_OS_ENV_RESOURCE, Collections.EMPTY_MAP)  [CD]
Line_3 $$ public void call() --> Line_6 $$ conn.setRequestMethod("GET")  [CD]
Line_3 $$ public void call() --> Line_7 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())  [CD]
Line_3 $$ public void call() --> Line_8 $$ assertTrue(conn.getHeaderField("content-type").startsWith(RestConstants.JSON_CONTENT_TYPE))  [CD]
Line_3 $$ public void call() --> Line_9 $$ JSONObject json = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))  [CD]
