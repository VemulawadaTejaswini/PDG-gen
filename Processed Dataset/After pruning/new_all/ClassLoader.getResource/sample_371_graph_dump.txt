Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_23 $$ return in.readDataset(-1, -1);  [FD]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_24 $$ in.close()  [FD]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_42 $$ in.setIncludeBulkData(includeBulkData)  [FD]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_42 $$ in.setIncludeBulkData(includeBulkData)  [FD]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_43 $$ in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI)  [FD]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_43 $$ in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI)  [FD]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_44 $$ return in.readDataset(-1, -1);  [FD]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_44 $$ return in.readDataset(-1, -1);  [FD]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_45 $$ in.close()  [FD]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_45 $$ in.close()  [FD]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_69 $$ String line = in.readLine()  [FD]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI())) --> Line_69 $$ String line = in.readLine()  [FD]
Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt") --> Line_77 $$ assertNull(nonManifestResource)  [FD]
Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt") --> Line_133 $$ assertNotNull(manifestResource)  [FD]
Line_3 $$ public void toFile(String name) --> Line_5 $$ return new File(cl.getResource(name).toURI());  [CD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_5 $$ return new File(cl.getResource(name).toURI());  [FD]
Line_10 $$ public void initialize() --> Line_12 $$ URL dataUrl = classLoader.getResource("org/richfaces/renderkit/countries.xml")  [CD]
Line_19 $$ public void readDataset(String name) --> Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))  [CD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_22 $$ cl.getResource(name)  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_22 $$ cl.getResource(name)  [FD]
Line_29 $$ public void addClasspathResources() --> Line_31 $$ File testResourceFile = new File(classLoader.getResource(TEST_RESOURCE_NAME).getFile())  [CD]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) --> Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))  [CD]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_41 $$ cl.getResource(name)  [FD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_41 $$ cl.getResource(name)  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_41 $$ cl.getResource(name)  [FD]
Line_51 $$ ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader() --> Line_52 $$ contextClassLoader.getResource(location)  [FD]
Line_57 $$ public void uri(String name) --> Line_59 $$ return cl.getResource(name).toString();  [CD]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_59 $$ return cl.getResource(name).toString();  [FD]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_59 $$ return cl.getResource(name).toString();  [FD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_59 $$ return cl.getResource(name).toString();  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_59 $$ return cl.getResource(name).toString();  [FD]
Line_64 $$ public void testSlaves() --> Line_67 $$ BufferedReader in = new BufferedReader(new InputStreamReader(classLoader.getResource("slaves").openStream()))  [CD]
Line_74 $$ public void testNonMetaInfNotAccessible() --> Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")  [CD]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")  [FD]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")  [FD]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")  [FD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")  [FD]
Line_82 $$ public void resourceOnClasspath(final String filename) --> Line_84 $$ return cldr.getResource(filename);  [CD]
Line_83 $$ ClassLoader cldr = Thread.currentThread().getContextClassLoader() --> Line_84 $$ return cldr.getResource(filename);  [FD]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")  [FD]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")  [FD]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")  [FD]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")  [FD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")  [FD]
Line_100 $$ public void initialize() --> Line_102 $$ URL dataUrl = classLoader.getResource("org/richfaces/demo/countries.xml")  [CD]
Line_108 $$ public void getResource(String name) --> Line_110 $$ return tccl.getResource(name);  [CD]
Line_109 $$ ClassLoader tccl = Thread.currentThread().getContextClassLoader() --> Line_110 $$ return tccl.getResource(name);  [FD]
Line_115 $$ public void getResizableIconFromResource(String resource) --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [CD]
Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_117 $$ ImageIO.read(cl.getResource(resource))  [FD]
Line_123 $$ public void getXmlUrl(String fileName) --> Line_125 $$ return loader.getResource(fileName).toExternalForm();  [CD]
Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader() --> Line_125 $$ return loader.getResource(fileName).toExternalForm();  [FD]
Line_130 $$ public void testMetaInfAccessible() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [CD]
Line_131 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader() --> Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")  [FD]
Line_138 $$ public void testLoader() --> Line_140 $$ URL url2 = loader.getResource(defaultConfigFileName1)  [CD]
Line_139 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader() --> Line_140 $$ URL url2 = loader.getResource(defaultConfigFileName1)  [FD]
Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader() --> Line_140 $$ URL url2 = loader.getResource(defaultConfigFileName1)  [FD]
Line_145 $$ public void getURL(final String name) --> Line_147 $$ return classLoader.getResource(name);  [CD]
Line_3 $$ public void toFile(String name) --> Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_19 $$ public void readDataset(String name) --> Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_19 $$ public void readDataset(String name) --> Line_23 $$ return in.readDataset(-1, -1);  [CD]
Line_19 $$ public void readDataset(String name) --> Line_24 $$ in.close()  [CD]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) --> Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) --> Line_42 $$ in.setIncludeBulkData(includeBulkData)  [CD]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) --> Line_43 $$ in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI)  [CD]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) --> Line_44 $$ return in.readDataset(-1, -1);  [CD]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) --> Line_45 $$ in.close()  [CD]
Line_57 $$ public void uri(String name) --> Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_64 $$ public void testSlaves() --> Line_69 $$ String line = in.readLine()  [CD]
Line_74 $$ public void testNonMetaInfNotAccessible() --> Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_74 $$ public void testNonMetaInfNotAccessible() --> Line_77 $$ assertNull(nonManifestResource)  [CD]
Line_82 $$ public void resourceOnClasspath(final String filename) --> Line_83 $$ ClassLoader cldr = Thread.currentThread().getContextClassLoader()  [CD]
Line_108 $$ public void getResource(String name) --> Line_109 $$ ClassLoader tccl = Thread.currentThread().getContextClassLoader()  [CD]
Line_115 $$ public void getResizableIconFromResource(String resource) --> Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_123 $$ public void getXmlUrl(String fileName) --> Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()  [CD]
Line_130 $$ public void testMetaInfAccessible() --> Line_131 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()  [CD]
Line_130 $$ public void testMetaInfAccessible() --> Line_133 $$ assertNotNull(manifestResource)  [CD]
Line_138 $$ public void testLoader() --> Line_139 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()  [CD]
