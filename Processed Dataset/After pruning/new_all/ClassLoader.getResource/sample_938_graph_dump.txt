Line_3 $$ public void findCurrentResourceVersion(String resourceUrl) --> Line_5 $$ return cl.getResource(resourceUrl);  [CD]
Line_4 $$ ClassLoader cl = getClass().getClassLoader() --> Line_5 $$ return cl.getResource(resourceUrl);  [FD]
Line_17 $$ public void findUrl(String name) --> Line_19 $$ return classLoader.getResource(name);  [CD]
Line_24 $$ public void findJarDirectory(String name) --> Line_26 $$ URL url = classLoader.getResource(name)  [CD]
Line_32 $$ public void getURL(String filename) --> Line_34 $$ classLoader.getResource(filename)  [CD]
Line_39 $$ public void testTemplateResources() --> Line_41 $$ URL url = classLoader.getResource("mail.html")  [CD]
Line_48 $$ public void compileQuery(String queryFileName) --> Line_50 $$ URL url = classLoader.getResource("lux/compiler/" + queryFileName)  [CD]
Line_58 $$ public void resource(final String name) --> Line_60 $$ final URL resource = classLoader.getResource(name)  [CD]
Line_66 $$ public void getClassFilePath(String path) --> Line_68 $$ URL url = cl.getResource(path + ".class")  [CD]
Line_67 $$ ClassLoader cl = getClass().getClassLoader() --> Line_68 $$ URL url = cl.getResource(path + ".class")  [FD]
Line_4 $$ ClassLoader cl = getClass().getClassLoader() --> Line_68 $$ URL url = cl.getResource(path + ".class")  [FD]
Line_3 $$ public void findCurrentResourceVersion(String resourceUrl) --> Line_4 $$ ClassLoader cl = getClass().getClassLoader()  [CD]
Line_66 $$ public void getClassFilePath(String path) --> Line_67 $$ ClassLoader cl = getClass().getClassLoader()  [CD]
