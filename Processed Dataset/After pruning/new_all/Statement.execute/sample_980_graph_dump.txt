Line_3 $$ public void tearDown() --> Line_5 $$ stmt.execute("drop function myif(a INOUT int, b IN int)")  [CD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_5 $$ stmt.execute("drop function myif(a INOUT int, b IN int)")  [FD]
Line_11 $$ public void executeWhatever(String sql) --> Line_13 $$ stmt.execute(sql)  [CD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_13 $$ stmt.execute(sql)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_13 $$ stmt.execute(sql)  [FD]
Line_19 $$ public void delete() --> Line_21 $$ stmt.execute("delete from tab1 where i = " + keyVal)  [CD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_21 $$ stmt.execute("delete from tab1 where i = " + keyVal)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_21 $$ stmt.execute("delete from tab1 where i = " + keyVal)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_21 $$ stmt.execute("delete from tab1 where i = " + keyVal)  [FD]
Line_27 $$ public void after() --> Line_30 $$ stmt.execute("DROP DOMAIN testdom")  [CD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_30 $$ stmt.execute("DROP DOMAIN testdom")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_30 $$ stmt.execute("DROP DOMAIN testdom")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_30 $$ stmt.execute("DROP DOMAIN testdom")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_30 $$ stmt.execute("DROP DOMAIN testdom")  [FD]
Line_36 $$ public void before() --> Line_39 $$ stmt.execute("CREATE TABLE truncatetest(id uuid)")  [CD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_39 $$ stmt.execute("CREATE TABLE truncatetest(id uuid)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_39 $$ stmt.execute("CREATE TABLE truncatetest(id uuid)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_39 $$ stmt.execute("CREATE TABLE truncatetest(id uuid)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_39 $$ stmt.execute("CREATE TABLE truncatetest(id uuid)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_39 $$ stmt.execute("CREATE TABLE truncatetest(id uuid)")  [FD]
Line_45 $$ public void setUp() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [CD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_48 $$ stmt.execute("INSERT INTO xmltest VALUES (2, '" + _xmlFragment + "')")  [FD]
Line_54 $$ public void setUp() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [CD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_57 $$ stmt.execute("CREATE TEMP TABLE genkeys(a serial, b text, c int)")  [FD]
Line_63 $$ public void setUp() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [CD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_66 $$ stmt.execute("CREATE TEMP TABLE uuidtest(id uuid)")  [FD]
Line_72 $$ public void setUp() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [CD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_75 $$ stmt.execute("INSERT INTO hold VALUES (2)")  [FD]
Line_81 $$ public void setUp() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [CD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_84 $$ stmt.execute("CREATE OR REPLACE FUNCTION return_bool(boolean) RETURNS boolean AS 'BEGIN RETURN $1; END;' LANGUAGE plpgsql")  [FD]
Line_90 $$ public void after() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [CD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_92 $$ stmt.execute("DROP TABLE genkeys")  [FD]
Line_98 $$ public void testSelect() --> Line_100 $$ stmt.execute("select * from hold")  [CD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_100 $$ stmt.execute("select * from hold")  [FD]
Line_106 $$ public void tearDown() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [CD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_108 $$ stmt.execute("DROP TABLE hold")  [FD]
Line_114 $$ public void executeSQL(String sql) --> Line_116 $$ stmt.execute(sql)  [CD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_116 $$ stmt.execute(sql)  [FD]
Line_122 $$ public void tearDown() --> Line_124 $$ st.execute("drop table if exists type")  [CD]
Line_130 $$ public void setUp() --> Line_132 $$ st.execute(DatabaseCreator.CREATE_TABLE_SIMPLE1)  [CD]
Line_131 $$ Statement st = conn.createStatement() --> Line_132 $$ st.execute(DatabaseCreator.CREATE_TABLE_SIMPLE1)  [FD]
Line_138 $$ public void after() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [CD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_140 $$ stmt.execute("DROP TABLE uuidtest")  [FD]
Line_146 $$ public void execute(String sql) --> Line_148 $$ statement.execute(sql)  [CD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_148 $$ statement.execute(sql)  [FD]
Line_154 $$ public void loadData(JdbcDataSource ds) --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [CD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_157 $$ stmt.execute("CREATE TABLE ROLES AS SELECT * FROM CSVREAD('classpath:roles.csv',null,'lineComment=#')")  [FD]
Line_163 $$ public void executeInsert() --> Line_165 $$ statement.execute("insert into employee (name) values ('john doe')")  [CD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_165 $$ statement.execute("insert into employee (name) values ('john doe')")  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_165 $$ statement.execute("insert into employee (name) values ('john doe')")  [FD]
Line_171 $$ public void execute(String sql) --> Line_173 $$ statement.execute(sql)  [CD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_173 $$ statement.execute(sql)  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_173 $$ statement.execute(sql)  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_173 $$ statement.execute(sql)  [FD]
Line_179 $$ public void tearDown() --> Line_181 $$ st.executeUpdate("DROP FUNCTION PADSTRING")  [CD]
Line_180 $$ Statement st = createStatement() --> Line_181 $$ st.executeUpdate("DROP FUNCTION PADSTRING")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_181 $$ st.executeUpdate("DROP FUNCTION PADSTRING")  [FD]
Line_179 $$ public void tearDown() --> Line_182 $$ st.execute("drop view tran_table")  [CD]
Line_180 $$ Statement st = createStatement() --> Line_182 $$ st.execute("drop view tran_table")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_182 $$ st.execute("drop view tran_table")  [FD]
Line_188 $$ public void setSchema(String schema) --> Line_190 $$ stm.execute("SET SCHEMA " + schema)  [CD]
Line_189 $$ Statement stm = createStatement() --> Line_190 $$ stm.execute("SET SCHEMA " + schema)  [FD]
Line_196 $$ public void setTimeout(long t) --> Line_198 $$ stm.execute("call syscs_util.syscs_set_database_property(" + "'derby.locks.waitTimeout', '" + t + "')")  [CD]
Line_197 $$ Statement stm = createStatement() --> Line_198 $$ stm.execute("call syscs_util.syscs_set_database_property(" + "'derby.locks.waitTimeout', '" + t + "')")  [FD]
Line_189 $$ Statement stm = createStatement() --> Line_198 $$ stm.execute("call syscs_util.syscs_set_database_property(" + "'derby.locks.waitTimeout', '" + t + "')")  [FD]
Line_205 $$ public void checkConnection() --> Line_207 $$ st.execute("SELECT true")  [CD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_207 $$ st.execute("SELECT true")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_207 $$ st.execute("SELECT true")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_207 $$ st.execute("SELECT true")  [FD]
Line_213 $$ public void updateHeartbeat() --> Line_215 $$ st.execute("UPDATE ttirc_system SET value = NOW() WHERE " + m_dbKeyParam + " = 'MASTER_HEARTBEAT'")  [CD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_215 $$ st.execute("UPDATE ttirc_system SET value = NOW() WHERE " + m_dbKeyParam + " = 'MASTER_HEARTBEAT'")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_215 $$ st.execute("UPDATE ttirc_system SET value = NOW() WHERE " + m_dbKeyParam + " = 'MASTER_HEARTBEAT'")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_215 $$ st.execute("UPDATE ttirc_system SET value = NOW() WHERE " + m_dbKeyParam + " = 'MASTER_HEARTBEAT'")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_215 $$ st.execute("UPDATE ttirc_system SET value = NOW() WHERE " + m_dbKeyParam + " = 'MASTER_HEARTBEAT'")  [FD]
Line_221 $$ public void grantRevokeAfterSettingSQLAuthProperty() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [CD]
Line_222 $$ Statement stmt = createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_223 $$ stmt.execute("revoke select on GR_TAB from some_user")  [FD]
Line_229 $$ public void shutdown(final boolean active) --> Line_231 $$ statement.execute("SHUTDOWN")  [CD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_231 $$ statement.execute("SHUTDOWN")  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_231 $$ statement.execute("SHUTDOWN")  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_231 $$ statement.execute("SHUTDOWN")  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_231 $$ statement.execute("SHUTDOWN")  [FD]
Line_238 $$ for (int i = 0; i < PROCEDURES.length; i++) --> Line_239 $$ stmt.execute(PROCEDURES[i])  [CD]
Line_222 $$ Statement stmt = createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_239 $$ stmt.execute(PROCEDURES[i])  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_248 $$ statement.execute("DROP DATABASE IF EXISTS " + db + " CASCADE")  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_248 $$ statement.execute("DROP DATABASE IF EXISTS " + db + " CASCADE")  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_248 $$ statement.execute("DROP DATABASE IF EXISTS " + db + " CASCADE")  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_248 $$ statement.execute("DROP DATABASE IF EXISTS " + db + " CASCADE")  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_258 $$ statement.execute("CREATE DATABASE " + db)  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_258 $$ statement.execute("CREATE DATABASE " + db)  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_258 $$ statement.execute("CREATE DATABASE " + db)  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_258 $$ statement.execute("CREATE DATABASE " + db)  [FD]
Line_265 $$ public void testReload() --> Line_268 $$ statement.execute("RELOAD")  [CD]
Line_267 $$ Statement statement = context.createStatement(connection) --> Line_268 $$ statement.execute("RELOAD")  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_268 $$ statement.execute("RELOAD")  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_268 $$ statement.execute("RELOAD")  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_268 $$ statement.execute("RELOAD")  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_268 $$ statement.execute("RELOAD")  [FD]
Line_274 $$ public void adminCreatePartition() --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [CD]
Line_276 $$ Statement statement = context.createStatement(connection) --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [FD]
Line_267 $$ Statement statement = context.createStatement(connection) --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_277 $$ statement.execute("ALTER TABLE tb1 ADD IF NOT EXISTS PARTITION (b = '1') ")  [FD]
Line_283 $$ public void tearDown() --> Line_285 $$ stmt.execute("drop table app.t1")  [CD]
Line_284 $$ Statement stmt = createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_285 $$ stmt.execute("drop table app.t1")  [FD]
Line_291 $$ public void setUp() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [CD]
Line_292 $$ Statement stmt = createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_293 $$ stmt.execute("create table testblob (data blob)")  [FD]
Line_299 $$ public void setUp() --> Line_301 $$ st.execute("DROP TABLE IF EXISTS noindex")  [CD]
Line_300 $$ Statement st = cx.createStatement() --> Line_301 $$ st.execute("DROP TABLE IF EXISTS noindex")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_301 $$ st.execute("DROP TABLE IF EXISTS noindex")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_301 $$ st.execute("DROP TABLE IF EXISTS noindex")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_301 $$ st.execute("DROP TABLE IF EXISTS noindex")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_301 $$ st.execute("DROP TABLE IF EXISTS noindex")  [FD]
Line_308 $$ if (table != null) --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [CD]
Line_276 $$ Statement statement = context.createStatement(connection) --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [FD]
Line_267 $$ Statement statement = context.createStatement(connection) --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_309 $$ statement.execute("CREATE table " + db + "." + table + " (a string)")  [FD]
Line_316 $$ public void tearDown() --> Line_318 $$ st.execute("drop table lobTable100M")  [CD]
Line_317 $$ Statement st = createStatement() --> Line_318 $$ st.execute("drop table lobTable100M")  [FD]
Line_300 $$ Statement st = cx.createStatement() --> Line_318 $$ st.execute("drop table lobTable100M")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_318 $$ st.execute("drop table lobTable100M")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_318 $$ st.execute("drop table lobTable100M")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_318 $$ st.execute("drop table lobTable100M")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_318 $$ st.execute("drop table lobTable100M")  [FD]
Line_324 $$ public void setUp() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [CD]
Line_325 $$ Statement st = createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_317 $$ Statement st = createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_300 $$ Statement st = cx.createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_326 $$ st.execute("create table lobTable100M(bl blob(100M))")  [FD]
Line_332 $$ public void tearDown() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [CD]
Line_333 $$ Statement stmt = createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_334 $$ stmt.execute("drop table GR_TAB")  [FD]
Line_340 $$ public void cleanup() --> Line_342 $$ dropStmt.execute("DROP TABLE actor_states")  [CD]
Line_341 $$ Statement dropStmt = this.conn.createStatement() --> Line_342 $$ dropStmt.execute("DROP TABLE actor_states")  [FD]
Line_348 $$ public void insertThreePoints() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [CD]
Line_349 $$ Statement st = cx.createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_325 $$ Statement st = createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_317 $$ Statement st = createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_300 $$ Statement st = cx.createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_350 $$ st.execute("INSERT INTO spatial (geom) VALUES (ST_GeomFromText('POINT(2 2)', 4326))")  [FD]
Line_356 $$ public void loadSQL(Connection connection, String resource, HypersonicPreprocessor sqlPreprocessor) --> Line_360 $$ stmt.execute(sql)  [CD]
Line_333 $$ Statement stmt = createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_360 $$ stmt.execute(sql)  [FD]
Line_366 $$ public void setUp() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [CD]
Line_333 $$ Statement stmt = createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_367 $$ stmt.execute("CREATE TABLE " + JDBC.escape(tableName) + "(id int)")  [FD]
Line_373 $$ public void setUp() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [CD]
Line_374 $$ Statement stmt = createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_375 $$ stmt.executeUpdate("create table t1 (c11 int, c12 smallint, c13 double, c14 char(3))")  [FD]
Line_373 $$ public void setUp() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [CD]
Line_374 $$ Statement stmt = createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_376 $$ stmt.execute("insert into t2 values (-1),(-2)")  [FD]
Line_382 $$ public void tearDown() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [CD]
Line_374 $$ Statement stmt = createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_383 $$ stmt.execute("DROP TABLE " + JDBC.escape(tableName))  [FD]
Line_389 $$ public void testMetaDataGetClassicTableTypes() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [CD]
Line_374 $$ Statement stmt = createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_390 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_397 $$ public void testMetaDataGetTablesClassic() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [CD]
Line_374 $$ Statement stmt = createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_398 $$ stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname + " = " + TableTypeMappings.CLASSIC.toString())  [FD]
Line_405 $$ public void test_0() --> Line_406 $$ stmt.execute("select 1")  [CD]
Line_374 $$ Statement stmt = createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_406 $$ stmt.execute("select 1")  [FD]
Line_412 $$ public void setUp() --> Line_415 $$ s.execute("CREATE TABLE PED001 (A INT NOT NULL, B DECIMAL(6,4), C VARCHAR(20))")  [CD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_415 $$ s.execute("CREATE TABLE PED001 (A INT NOT NULL, B DECIMAL(6,4), C VARCHAR(20))")  [FD]
Line_422 $$ public void setUp() --> Line_424 $$ s.execute("delete from t1")  [CD]
Line_423 $$ Statement s = createStatement() --> Line_424 $$ s.execute("delete from t1")  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_424 $$ s.execute("delete from t1")  [FD]
Line_430 $$ public void traceMarker() --> Line_432 $$ statement.execute(null)  [CD]
Line_431 $$ Statement statement = delegatingConnection.createStatement() --> Line_432 $$ statement.execute(null)  [FD]
Line_276 $$ Statement statement = context.createStatement(connection) --> Line_432 $$ statement.execute(null)  [FD]
Line_267 $$ Statement statement = context.createStatement(connection) --> Line_432 $$ statement.execute(null)  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_432 $$ statement.execute(null)  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_432 $$ statement.execute(null)  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_432 $$ statement.execute(null)  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_432 $$ statement.execute(null)  [FD]
Line_438 $$ public void setUp() --> Line_440 $$ s.execute("insert into EXCEPTION_TABLE1 (id, data)" + "values (1, 'data1')")  [CD]
Line_439 $$ Statement s = createStatement() --> Line_440 $$ s.execute("insert into EXCEPTION_TABLE1 (id, data)" + "values (1, 'data1')")  [FD]
Line_423 $$ Statement s = createStatement() --> Line_440 $$ s.execute("insert into EXCEPTION_TABLE1 (id, data)" + "values (1, 'data1')")  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_440 $$ s.execute("insert into EXCEPTION_TABLE1 (id, data)" + "values (1, 'data1')")  [FD]
Line_447 $$ public void tearDown() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [CD]
Line_448 $$ Statement stmt = createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_449 $$ stmt.execute("DROP TABLE T0")  [FD]
Line_455 $$ public void createSQLJSchema() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [CD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_457 $$ stmt.execute("GRANT USAGE ON SCHEMA sqlj TO public")  [FD]
Line_463 $$ public void executeStatement(String sql) --> Line_465 $$ boolean ret = stmt.execute(sql)  [CD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_465 $$ boolean ret = stmt.execute(sql)  [FD]
Line_471 $$ public void body(Connection conn) --> Line_472 $$ s.execute("delete from t")  [CD]
Line_439 $$ Statement s = createStatement() --> Line_472 $$ s.execute("delete from t")  [FD]
Line_423 $$ Statement s = createStatement() --> Line_472 $$ s.execute("delete from t")  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_472 $$ s.execute("delete from t")  [FD]
Line_478 $$ public void tearDown() --> Line_480 $$ s.execute("drop table EXCEPTION_TABLE1")  [CD]
Line_479 $$ Statement s = createStatement() --> Line_480 $$ s.execute("drop table EXCEPTION_TABLE1")  [FD]
Line_439 $$ Statement s = createStatement() --> Line_480 $$ s.execute("drop table EXCEPTION_TABLE1")  [FD]
Line_423 $$ Statement s = createStatement() --> Line_480 $$ s.execute("drop table EXCEPTION_TABLE1")  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_480 $$ s.execute("drop table EXCEPTION_TABLE1")  [FD]
Line_486 $$ public void tearDown() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [CD]
Line_487 $$ Statement st = createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_349 $$ Statement st = cx.createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_325 $$ Statement st = createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_317 $$ Statement st = createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_300 $$ Statement st = cx.createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_488 $$ st.execute("DROP TABLE TEST_TABLE")  [FD]
Line_494 $$ public void installTrigger(Connection cx, String tableName, String geomName, String triggerAction, String referencing, String triggerStmt) --> Line_496 $$ s.execute(sql)  [CD]
Line_479 $$ Statement s = createStatement() --> Line_496 $$ s.execute(sql)  [FD]
Line_439 $$ Statement s = createStatement() --> Line_496 $$ s.execute(sql)  [FD]
Line_423 $$ Statement s = createStatement() --> Line_496 $$ s.execute(sql)  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_496 $$ s.execute(sql)  [FD]
Line_502 $$ public void setUp() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [CD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_503 $$ stmt.execute("ALTER TABLE testerr ADD CONSTRAINT testerr_pk PRIMARY KEY (id)")  [FD]
Line_509 $$ public void tearDown() --> Line_511 $$ stmt.execute("drop table testblob")  [CD]
Line_510 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_511 $$ stmt.execute("drop table testblob")  [FD]
Line_517 $$ public void createDDL() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [CD]
Line_510 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_518 $$ stmt.execute("CREATE PROCEDURE BASIC_CALL_0(INOUT F1 FLOAT, INOUT F2 DOUBLE, INOUT F3 REAL, INOUT F4 DATE, INOUT F5 TIME, INOUT F6 SMALLINT, INOUT F7 SMALLINT, INOUT F8 INTEGER, INOUT F9 BIGINT, INOUT F10 DECIMAL(9,2), INOUT F11 TIMESTAMP, INOUT F12 VARCHAR(128) FOR BIT DATA, INOUT F13 VARCHAR(256), INOUT F14 VARCHAR(256), INOUT F15 VARCHAR(256), INOUT F16 VARCHAR(256), INOUT F17 SMALLINT) " + "LANGUAGE JAVA PARAMETER STYLE JAVA EXTERNAL NAME '" + BasicTypeTest.class.getName() + ".basic_process_0' " + "DYNAMIC RESULT SETS 1")  [FD]
Line_527 $$ public void tearDown() --> Line_529 $$ st.execute("SHUTDOWN")  [CD]
Line_528 $$ Statement st = HsqlConn.createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_487 $$ Statement st = createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_349 $$ Statement st = cx.createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_325 $$ Statement st = createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_317 $$ Statement st = createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_300 $$ Statement st = cx.createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_529 $$ st.execute("SHUTDOWN")  [FD]
Line_535 $$ public void configureConnection() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [CD]
Line_536 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_537 $$ stmt.execute("set hive.fetch.output.serde = org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe")  [FD]
Line_544 $$ public void execute(ReviewDb db, String sql) --> Line_546 $$ s.execute(sql)  [CD]
Line_545 $$ Statement s = ((JdbcSchema) db).getConnection().createStatement() --> Line_546 $$ s.execute(sql)  [FD]
Line_479 $$ Statement s = createStatement() --> Line_546 $$ s.execute(sql)  [FD]
Line_439 $$ Statement s = createStatement() --> Line_546 $$ s.execute(sql)  [FD]
Line_423 $$ Statement s = createStatement() --> Line_546 $$ s.execute(sql)  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_546 $$ s.execute(sql)  [FD]
Line_552 $$ public void select(OracleConnection oracleConn) --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [CD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_554 $$ stmt.execute("SELECT 1 FROM DUAL")  [FD]
Line_560 $$ public void setUp() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [CD]
Line_561 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_562 $$ stmt.execute("create table GR_TAB (id int)")  [FD]
Line_568 $$ public void clear() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [CD]
Line_569 $$ Statement st = TestUtils.getConnection().createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_528 $$ Statement st = HsqlConn.createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_487 $$ Statement st = createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_349 $$ Statement st = cx.createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_325 $$ Statement st = createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_317 $$ Statement st = createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_300 $$ Statement st = cx.createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_214 $$ Statement st = getConnection().createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_206 $$ Statement st = getConnection().createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_180 $$ Statement st = createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_131 $$ Statement st = conn.createStatement() --> Line_570 $$ st.execute("SPARQL CLEAR GRAPH <" + TEST_GRAPH_NAME + ">")  [FD]
Line_576 $$ public void exchangeSubpartition(Connection connection, OracleTable table, String subPartitionName, OracleTable subPartitionTable) --> Line_579 $$ statement.execute(sql)  [CD]
Line_431 $$ Statement statement = delegatingConnection.createStatement() --> Line_579 $$ statement.execute(sql)  [FD]
Line_276 $$ Statement statement = context.createStatement(connection) --> Line_579 $$ statement.execute(sql)  [FD]
Line_267 $$ Statement statement = context.createStatement(connection) --> Line_579 $$ statement.execute(sql)  [FD]
Line_230 $$ final Statement statement = getConnection().createStatement() --> Line_579 $$ statement.execute(sql)  [FD]
Line_172 $$ Statement statement = connection.createStatement() --> Line_579 $$ statement.execute(sql)  [FD]
Line_164 $$ Statement statement = connection.createStatement() --> Line_579 $$ statement.execute(sql)  [FD]
Line_147 $$ final Statement statement = connection.createStatement() --> Line_579 $$ statement.execute(sql)  [FD]
Line_585 $$ public void setUp() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [CD]
Line_586 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_587 $$ stmt.execute("insert into app.t1 values (1, 'one'), " + "(2, 'two'), (4, 'four')")  [FD]
Line_594 $$ public void doExecute(ConcurrentTestCommandExecutor executor) --> Line_596 $$ stmt.execute(sql)  [CD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_596 $$ stmt.execute(sql)  [FD]
Line_602 $$ public void tearDown() --> Line_605 $$ stmt.execute("drop table updateClob")  [CD]
Line_604 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_605 $$ stmt.execute("drop table updateClob")  [FD]
Line_611 $$ public void executeOnMaster(String sql) --> Line_613 $$ s.execute(sql)  [CD]
Line_612 $$ Statement s = getMasterConnection().createStatement() --> Line_613 $$ s.execute(sql)  [FD]
Line_545 $$ Statement s = ((JdbcSchema) db).getConnection().createStatement() --> Line_613 $$ s.execute(sql)  [FD]
Line_479 $$ Statement s = createStatement() --> Line_613 $$ s.execute(sql)  [FD]
Line_439 $$ Statement s = createStatement() --> Line_613 $$ s.execute(sql)  [FD]
Line_423 $$ Statement s = createStatement() --> Line_613 $$ s.execute(sql)  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_613 $$ s.execute(sql)  [FD]
Line_619 $$ public void setSchema(String schema) --> Line_621 $$ stmt.execute("use " + schema)  [CD]
Line_620 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_621 $$ stmt.execute("use " + schema)  [FD]
Line_627 $$ public void setupTestTableWithData(String tableName, Path dataFilePath, Connection hs2Conn) --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [CD]
Line_620 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_628 $$ stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table " + tableName)  [FD]
Line_635 $$ public void setUp() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [CD]
Line_636 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_620 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_637 $$ stmt.execute("create table updateClob " + "(id integer primary key, data clob)")  [FD]
Line_644 $$ public void testStatementCopyOut() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [CD]
Line_645 $$ Statement stmt = con.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_636 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_620 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_646 $$ stmt.execute("COPY copytest TO STDOUT")  [FD]
Line_652 $$ public void testStatementCopyIn() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [CD]
Line_653 $$ Statement stmt = con.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_645 $$ Statement stmt = con.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_636 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_620 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_654 $$ stmt.execute("COPY copytest FROM STDIN")  [FD]
Line_660 $$ public void testWarningsAreCleared() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [CD]
Line_661 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_653 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_645 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_636 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_620 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_662 $$ stmt.execute("CREATE TEMP TABLE unused (a int primary key)")  [FD]
Line_660 $$ public void testWarningsAreCleared() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [CD]
Line_661 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_653 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_645 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_636 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_620 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_663 $$ stmt.executeQuery("SELECT 1")  [FD]
Line_670 $$ public void deleteSqlByID(int sqlmap_file_id) --> Line_672 $$ stmt.execute(command)  [CD]
Line_661 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_653 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_645 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_636 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_620 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_604 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_595 $$ Statement stmt = executor.getConnection().createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_586 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_561 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_553 $$ Statement stmt = oracleConn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_536 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_510 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_456 $$ Statement stmt = m_connection.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_448 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_374 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_333 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_292 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_284 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_222 $$ Statement stmt = createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_156 $$ Statement stmt = connection.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_139 $$ Statement stmt = conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_115 $$ Statement stmt = conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_107 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_99 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_91 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_83 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_74 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_65 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_56 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_47 $$ Statement stmt = _conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_38 $$ Statement stmt = conn.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_29 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_20 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_12 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_4 $$ Statement stmt = con.createStatement() --> Line_672 $$ stmt.execute(command)  [FD]
Line_680 $$ public void setUp() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [CD]
Line_681 $$ Statement s = createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_612 $$ Statement s = getMasterConnection().createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_545 $$ Statement s = ((JdbcSchema) db).getConnection().createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_479 $$ Statement s = createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_439 $$ Statement s = createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_423 $$ Statement s = createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_414 $$ Statement s = connDDL.createStatement() --> Line_682 $$ s.execute("CREATE FUNCTION  PADSTRING (DATA VARCHAR(32000), " + "LENGTH INTEGER) RETURNS VARCHAR(32000) EXTERNAL NAME " + "'org.apache.derbyTesting.functionTests.util.Formatters" + ".padString' LANGUAGE JAVA PARAMETER STYLE JAVA")  [FD]
Line_3 $$ public void tearDown() --> Line_4 $$ Statement stmt = con.createStatement()  [CD]
Line_11 $$ public void executeWhatever(String sql) --> Line_12 $$ Statement stmt = con.createStatement()  [CD]
Line_19 $$ public void delete() --> Line_20 $$ Statement stmt = con.createStatement()  [CD]
Line_27 $$ public void after() --> Line_29 $$ Statement stmt = con.createStatement()  [CD]
Line_36 $$ public void before() --> Line_38 $$ Statement stmt = conn.createStatement()  [CD]
Line_45 $$ public void setUp() --> Line_47 $$ Statement stmt = _conn.createStatement()  [CD]
Line_54 $$ public void setUp() --> Line_56 $$ Statement stmt = _conn.createStatement()  [CD]
Line_63 $$ public void setUp() --> Line_65 $$ Statement stmt = _conn.createStatement()  [CD]
Line_72 $$ public void setUp() --> Line_74 $$ Statement stmt = _conn.createStatement()  [CD]
Line_81 $$ public void setUp() --> Line_83 $$ Statement stmt = _conn.createStatement()  [CD]
Line_90 $$ public void after() --> Line_91 $$ Statement stmt = _conn.createStatement()  [CD]
Line_98 $$ public void testSelect() --> Line_99 $$ Statement stmt = _conn.createStatement()  [CD]
Line_106 $$ public void tearDown() --> Line_107 $$ Statement stmt = _conn.createStatement()  [CD]
Line_114 $$ public void executeSQL(String sql) --> Line_115 $$ Statement stmt = conn.createStatement()  [CD]
Line_130 $$ public void setUp() --> Line_131 $$ Statement st = conn.createStatement()  [CD]
Line_138 $$ public void after() --> Line_139 $$ Statement stmt = conn.createStatement()  [CD]
Line_146 $$ public void execute(String sql) --> Line_147 $$ final Statement statement = connection.createStatement()  [CD]
Line_154 $$ public void loadData(JdbcDataSource ds) --> Line_156 $$ Statement stmt = connection.createStatement()  [CD]
Line_163 $$ public void executeInsert() --> Line_164 $$ Statement statement = connection.createStatement()  [CD]
Line_171 $$ public void execute(String sql) --> Line_172 $$ Statement statement = connection.createStatement()  [CD]
Line_179 $$ public void tearDown() --> Line_180 $$ Statement st = createStatement()  [CD]
Line_188 $$ public void setSchema(String schema) --> Line_189 $$ Statement stm = createStatement()  [CD]
Line_196 $$ public void setTimeout(long t) --> Line_197 $$ Statement stm = createStatement()  [CD]
Line_205 $$ public void checkConnection() --> Line_206 $$ Statement st = getConnection().createStatement()  [CD]
Line_213 $$ public void updateHeartbeat() --> Line_214 $$ Statement st = getConnection().createStatement()  [CD]
Line_221 $$ public void grantRevokeAfterSettingSQLAuthProperty() --> Line_222 $$ Statement stmt = createStatement()  [CD]
Line_229 $$ public void shutdown(final boolean active) --> Line_230 $$ final Statement statement = getConnection().createStatement()  [CD]
Line_265 $$ public void testReload() --> Line_267 $$ Statement statement = context.createStatement(connection)  [CD]
Line_274 $$ public void adminCreatePartition() --> Line_276 $$ Statement statement = context.createStatement(connection)  [CD]
Line_283 $$ public void tearDown() --> Line_284 $$ Statement stmt = createStatement()  [CD]
Line_291 $$ public void setUp() --> Line_292 $$ Statement stmt = createStatement()  [CD]
Line_299 $$ public void setUp() --> Line_300 $$ Statement st = cx.createStatement()  [CD]
Line_316 $$ public void tearDown() --> Line_317 $$ Statement st = createStatement()  [CD]
Line_324 $$ public void setUp() --> Line_325 $$ Statement st = createStatement()  [CD]
Line_332 $$ public void tearDown() --> Line_333 $$ Statement stmt = createStatement()  [CD]
Line_340 $$ public void cleanup() --> Line_341 $$ Statement dropStmt = this.conn.createStatement()  [CD]
Line_348 $$ public void insertThreePoints() --> Line_349 $$ Statement st = cx.createStatement()  [CD]
Line_373 $$ public void setUp() --> Line_374 $$ Statement stmt = createStatement()  [CD]
Line_412 $$ public void setUp() --> Line_414 $$ Statement s = connDDL.createStatement()  [CD]
Line_422 $$ public void setUp() --> Line_423 $$ Statement s = createStatement()  [CD]
Line_430 $$ public void traceMarker() --> Line_431 $$ Statement statement = delegatingConnection.createStatement()  [CD]
Line_438 $$ public void setUp() --> Line_439 $$ Statement s = createStatement()  [CD]
Line_447 $$ public void tearDown() --> Line_448 $$ Statement stmt = createStatement()  [CD]
Line_455 $$ public void createSQLJSchema() --> Line_456 $$ Statement stmt = m_connection.createStatement()  [CD]
Line_478 $$ public void tearDown() --> Line_479 $$ Statement s = createStatement()  [CD]
Line_486 $$ public void tearDown() --> Line_487 $$ Statement st = createStatement()  [CD]
Line_509 $$ public void tearDown() --> Line_510 $$ Statement stmt = createStatement()  [CD]
Line_527 $$ public void tearDown() --> Line_528 $$ Statement st = HsqlConn.createStatement()  [CD]
Line_535 $$ public void configureConnection() --> Line_536 $$ Statement stmt = createStatement()  [CD]
Line_544 $$ public void execute(ReviewDb db, String sql) --> Line_545 $$ Statement s = ((JdbcSchema) db).getConnection().createStatement()  [CD]
Line_552 $$ public void select(OracleConnection oracleConn) --> Line_553 $$ Statement stmt = oracleConn.createStatement()  [CD]
Line_560 $$ public void setUp() --> Line_561 $$ Statement stmt = createStatement()  [CD]
Line_568 $$ public void clear() --> Line_569 $$ Statement st = TestUtils.getConnection().createStatement()  [CD]
Line_585 $$ public void setUp() --> Line_586 $$ Statement stmt = createStatement()  [CD]
Line_594 $$ public void doExecute(ConcurrentTestCommandExecutor executor) --> Line_595 $$ Statement stmt = executor.getConnection().createStatement()  [CD]
Line_602 $$ public void tearDown() --> Line_604 $$ Statement stmt = createStatement()  [CD]
Line_611 $$ public void executeOnMaster(String sql) --> Line_612 $$ Statement s = getMasterConnection().createStatement()  [CD]
Line_619 $$ public void setSchema(String schema) --> Line_620 $$ Statement stmt = createStatement()  [CD]
Line_635 $$ public void setUp() --> Line_636 $$ Statement stmt = createStatement()  [CD]
Line_644 $$ public void testStatementCopyOut() --> Line_645 $$ Statement stmt = con.createStatement()  [CD]
Line_652 $$ public void testStatementCopyIn() --> Line_653 $$ Statement stmt = con.createStatement()  [CD]
Line_660 $$ public void testWarningsAreCleared() --> Line_661 $$ Statement stmt = con.createStatement()  [CD]
Line_680 $$ public void setUp() --> Line_681 $$ Statement s = createStatement()  [CD]
