Line_33 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test") --> Line_34 $$ rs.next()  [FD]
Line_33 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test") --> Line_35 $$ assertEquals(1, rs.getInt(1))  [FD]
Line_33 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test") --> Line_45 $$ for (int row = 0; rs.next(); ++row)  [FD]
Line_33 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test") --> Line_46 $$ assertEquals(gen.getVerifyText(row), rs.getString(1))  [FD]
Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id") --> Line_628 $$ while (rset.next()) System.out.println(rset.getInt(1) + " " + rset.getString(2));  [FD]
Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id") --> Line_629 $$ System.out.println(rset.getInt(1) + " " + rset.getString(2))  [FD]
Line_3 $$ public void doConnStmtNoRS(String text) --> Line_6 $$ stmt.execute(text)  [CD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_6 $$ stmt.execute(text)  [FD]
Line_11 $$ public void createDDL() --> Line_14 $$ stmt.execute("CREATE TABLE T_BASIC_TYPE (F1 FLOAT, F2 DOUBLE, F3 REAL, F4 DATE, F5 TIME, F6 SMALLINT, F7 SMALLINT, F8 INTEGER, F9 BIGINT, F10 DECIMAL(9,2), F11 TIMESTAMP, F12 BLOB, F13 VARCHAR(256), F14 VARCHAR(256), F15 VARCHAR(256), F16 VARCHAR(256), F17 SMALLINT)")  [CD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_14 $$ stmt.execute("CREATE TABLE T_BASIC_TYPE (F1 FLOAT, F2 DOUBLE, F3 REAL, F4 DATE, F5 TIME, F6 SMALLINT, F7 SMALLINT, F8 INTEGER, F9 BIGINT, F10 DECIMAL(9,2), F11 TIMESTAMP, F12 BLOB, F13 VARCHAR(256), F14 VARCHAR(256), F15 VARCHAR(256), F16 VARCHAR(256), F17 SMALLINT)")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_14 $$ stmt.execute("CREATE TABLE T_BASIC_TYPE (F1 FLOAT, F2 DOUBLE, F3 REAL, F4 DATE, F5 TIME, F6 SMALLINT, F7 SMALLINT, F8 INTEGER, F9 BIGINT, F10 DECIMAL(9,2), F11 TIMESTAMP, F12 BLOB, F13 VARCHAR(256), F14 VARCHAR(256), F15 VARCHAR(256), F16 VARCHAR(256), F17 SMALLINT)")  [FD]
Line_19 $$ public void destroyDatabase(String database) --> Line_22 $$ stmt.execute("SHUTDOWN")  [CD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_22 $$ stmt.execute("SHUTDOWN")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_22 $$ stmt.execute("SHUTDOWN")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_22 $$ stmt.execute("SHUTDOWN")  [FD]
Line_27 $$ public void testCountDistinctNotNull() --> Line_31 $$ stat.execute("create table test(id int not null) as " + "select 1 from system_range(1, 10)")  [CD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_31 $$ stat.execute("create table test(id int not null) as " + "select 1 from system_range(1, 10)")  [FD]
Line_27 $$ public void testCountDistinctNotNull() --> Line_33 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")  [CD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_33 $$ ResultSet rs = stat.executeQuery("select count(distinct id) from test")  [FD]
Line_41 $$ public void verifyTableColumnContents(Connection connection, String table, String column, ColumnGenerator gen) --> Line_43 $$ assertTrue(st.execute("SELECT " + column + " FROM " + table))  [CD]
Line_42 $$ Statement st = connection.createStatement() --> Line_43 $$ assertTrue(st.execute("SELECT " + column + " FROM " + table))  [FD]
Line_52 $$ public void tearDown() --> Line_55 $$ stmt.execute("SHUTDOWN")  [CD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_55 $$ stmt.execute("SHUTDOWN")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_55 $$ stmt.execute("SHUTDOWN")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_55 $$ stmt.execute("SHUTDOWN")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_55 $$ stmt.execute("SHUTDOWN")  [FD]
Line_60 $$ public void createTable() --> Line_63 $$ stmt.execute("CREATE TABLE T_CLOB (ID INTEGER, DATA CLOB)")  [CD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_63 $$ stmt.execute("CREATE TABLE T_CLOB (ID INTEGER, DATA CLOB)")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_63 $$ stmt.execute("CREATE TABLE T_CLOB (ID INTEGER, DATA CLOB)")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_63 $$ stmt.execute("CREATE TABLE T_CLOB (ID INTEGER, DATA CLOB)")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_63 $$ stmt.execute("CREATE TABLE T_CLOB (ID INTEGER, DATA CLOB)")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_63 $$ stmt.execute("CREATE TABLE T_CLOB (ID INTEGER, DATA CLOB)")  [FD]
Line_68 $$ public void testDeleteGroup() --> Line_72 $$ stat.execute("delete from test where id not in " + "(select min(x) from test group by id)")  [CD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_72 $$ stat.execute("delete from test where id not in " + "(select min(x) from test group by id)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_72 $$ stat.execute("delete from test where id not in " + "(select min(x) from test group by id)")  [FD]
Line_78 $$ public void shutdown(DataSource dataSource, String databaseName) --> Line_81 $$ stmt.execute("SHUTDOWN")  [CD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_81 $$ stmt.execute("SHUTDOWN")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_81 $$ stmt.execute("SHUTDOWN")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_81 $$ stmt.execute("SHUTDOWN")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_81 $$ stmt.execute("SHUTDOWN")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_81 $$ stmt.execute("SHUTDOWN")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_81 $$ stmt.execute("SHUTDOWN")  [FD]
Line_86 $$ public void testEmptyStatements() --> Line_89 $$ stat.execute(" ;")  [CD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_89 $$ stat.execute(" ;")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_89 $$ stat.execute(" ;")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_89 $$ stat.execute(" ;")  [FD]
Line_94 $$ public void wrappedService(HttpServletRequest request, HttpServletResponse response, String[] path, java.util.LinkedHashMap<String, String> query) --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [CD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_99 $$ boolean results = stmt.execute("SELECT NOW();")  [FD]
Line_105 $$ public void shutdown(DataSource dataSource, String databaseName) --> Line_108 $$ stmt.execute("SHUTDOWN")  [CD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_108 $$ stmt.execute("SHUTDOWN")  [FD]
Line_113 $$ public void onRelease(JDBCDataStore store, Connection cx) --> Line_115 $$ st.execute(command)  [CD]
Line_42 $$ Statement st = connection.createStatement() --> Line_115 $$ st.execute(command)  [FD]
Line_121 $$ public void onBorrow(JDBCDataStore store, Connection cx) --> Line_123 $$ st.execute("SET @MYVAR = " + value)  [CD]
Line_42 $$ Statement st = connection.createStatement() --> Line_123 $$ st.execute("SET @MYVAR = " + value)  [FD]
Line_129 $$ public void onBorrow(JDBCDataStore store, Connection cx) --> Line_131 $$ st.execute(command)  [CD]
Line_42 $$ Statement st = connection.createStatement() --> Line_131 $$ st.execute(command)  [FD]
Line_137 $$ public void before() --> Line_140 $$ statement.execute("RUNSCRIPT FROM 'classpath:/backup.sql'")  [CD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_140 $$ statement.execute("RUNSCRIPT FROM 'classpath:/backup.sql'")  [FD]
Line_145 $$ public void f_test_createIndex() --> Line_148 $$ stmt.execute(sql)  [CD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_148 $$ stmt.execute(sql)  [FD]
Line_153 $$ public void execute(String sql) --> Line_156 $$ stmt.execute(sql)  [CD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_156 $$ stmt.execute(sql)  [FD]
Line_162 $$ public void testDefaultMinMax() --> Line_166 $$ stat.execute("create sequence b START WITH 7320917853639540658 INCREMENT -1")  [CD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_166 $$ stat.execute("create sequence b START WITH 7320917853639540658 INCREMENT -1")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_166 $$ stat.execute("create sequence b START WITH 7320917853639540658 INCREMENT -1")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_166 $$ stat.execute("create sequence b START WITH 7320917853639540658 INCREMENT -1")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_166 $$ stat.execute("create sequence b START WITH 7320917853639540658 INCREMENT -1")  [FD]
Line_171 $$ public void testAlterSequenceColumn() --> Line_175 $$ stat.execute("INSERT INTO TEST (name) VALUES('Other World')")  [CD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_175 $$ stat.execute("INSERT INTO TEST (name) VALUES('Other World')")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_175 $$ stat.execute("INSERT INTO TEST (name) VALUES('Other World')")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_175 $$ stat.execute("INSERT INTO TEST (name) VALUES('Other World')")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_175 $$ stat.execute("INSERT INTO TEST (name) VALUES('Other World')")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_175 $$ stat.execute("INSERT INTO TEST (name) VALUES('Other World')")  [FD]
Line_180 $$ public void testSchemaSearchPath() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [CD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_184 $$ stat.execute("CALL TEST_SEQ.CURRVAL")  [FD]
Line_189 $$ public void testRunscriptFromClasspath() --> Line_193 $$ stat.execute("select * from version")  [CD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_193 $$ stat.execute("select * from version")  [FD]
Line_198 $$ public void testLobUpdateMany() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [CD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_202 $$ stat.execute("create table post(id int primary key, text clob) as " + "select x, space(96) from system_range(1, 329)")  [FD]
Line_208 $$ public void testCreateAsSelect() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [CD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_212 $$ stat.execute("create table test(id int, data clob) as select 1, space(10000)")  [FD]
Line_217 $$ public void dropTable() --> Line_220 $$ statement.execute("drop table ACCOUNT")  [CD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_220 $$ statement.execute("drop table ACCOUNT")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_220 $$ statement.execute("drop table ACCOUNT")  [FD]
Line_225 $$ public void tearDown() --> Line_228 $$ statement.execute("drop table ACCOUNT")  [CD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_228 $$ statement.execute("drop table ACCOUNT")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_228 $$ statement.execute("drop table ACCOUNT")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_228 $$ statement.execute("drop table ACCOUNT")  [FD]
Line_233 $$ public void migrate(Connection connection) --> Line_235 $$ statement.execute("CREATE TRIGGER clinics_history_trigger AFTER INSERT ON clinics FOR EACH ROW CALL\n" + "\"org.flywaydb.core.internal.dbsupport.h2.TestTrigger\";")  [CD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_235 $$ statement.execute("CREATE TRIGGER clinics_history_trigger AFTER INSERT ON clinics FOR EACH ROW CALL\n" + "\"org.flywaydb.core.internal.dbsupport.h2.TestTrigger\";")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_235 $$ statement.execute("CREATE TRIGGER clinics_history_trigger AFTER INSERT ON clinics FOR EACH ROW CALL\n" + "\"org.flywaydb.core.internal.dbsupport.h2.TestTrigger\";")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_235 $$ statement.execute("CREATE TRIGGER clinics_history_trigger AFTER INSERT ON clinics FOR EACH ROW CALL\n" + "\"org.flywaydb.core.internal.dbsupport.h2.TestTrigger\";")  [FD]
Line_242 $$ public void execute(Connection connection) --> Line_244 $$ statement.execute("INSERT INTO test_user (name) VALUES ('Resolvix')")  [CD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_244 $$ statement.execute("INSERT INTO test_user (name) VALUES ('Resolvix')")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_244 $$ statement.execute("INSERT INTO test_user (name) VALUES ('Resolvix')")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_244 $$ statement.execute("INSERT INTO test_user (name) VALUES ('Resolvix')")  [FD]
Line_250 $$ public void testKeyAsColumnInMySQLMode() --> Line_253 $$ stat.execute("drop table test")  [CD]
Line_252 $$ Statement stat = c.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_253 $$ stat.execute("drop table test")  [FD]
Line_258 $$ public void testConstraintAlterTable() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [CD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_262 $$ stat.execute("alter table parent add column p2 varchar")  [FD]
Line_267 $$ public void createDatabase() --> Line_271 $$ st.execute("DROP TABLE T1")  [CD]
Line_270 $$ Statement st = conn.createStatement() --> Line_271 $$ st.execute("DROP TABLE T1")  [FD]
Line_42 $$ Statement st = connection.createStatement() --> Line_271 $$ st.execute("DROP TABLE T1")  [FD]
Line_276 $$ public void testViewParameters() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [CD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_280 $$ stat.execute("create view test as select 0 value, 'x' name from dual")  [FD]
Line_286 $$ public void testReferenceableIndexUsage() --> Line_289 $$ stat.execute("drop table if exists a, b")  [CD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_289 $$ stat.execute("drop table if exists a, b")  [FD]
Line_294 $$ public void testInsertRollback() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [CD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_298 $$ stmt.execute(CREATE_TABLE)  [FD]
Line_303 $$ public void executeSQL(Connection con, String sql) --> Line_305 $$ stmt.execute(sql)  [CD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_305 $$ stmt.execute(sql)  [FD]
Line_311 $$ public void fillSimpleTable3(Connection conn) --> Line_313 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE3 + " VALUES(3, 4)")  [CD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_313 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE3 + " VALUES(3, 4)")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_313 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE3 + " VALUES(3, 4)")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_313 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE3 + " VALUES(3, 4)")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_313 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE3 + " VALUES(3, 4)")  [FD]
Line_318 $$ public void fillSimpleTable1(Connection conn) --> Line_320 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE1 + " VALUES(2, 5, 7)")  [CD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_320 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE1 + " VALUES(2, 5, 7)")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_320 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE1 + " VALUES(2, 5, 7)")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_320 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE1 + " VALUES(2, 5, 7)")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_320 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE1 + " VALUES(2, 5, 7)")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_320 $$ statement.execute("INSERT INTO " + SIMPLE_TABLE1 + " VALUES(2, 5, 7)")  [FD]
Line_325 $$ public void doInConnection(java.sql.Connection connection) --> Line_327 $$ statement.execute("set constraints all deferred;")  [CD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_327 $$ statement.execute("set constraints all deferred;")  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_327 $$ statement.execute("set constraints all deferred;")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_327 $$ statement.execute("set constraints all deferred;")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_327 $$ statement.execute("set constraints all deferred;")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_327 $$ statement.execute("set constraints all deferred;")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_327 $$ statement.execute("set constraints all deferred;")  [FD]
Line_332 $$ public void createTable() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [CD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_335 $$ statement.execute("create table ACCOUNT ( ACC_ID INTEGER , ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255)  )")  [FD]
Line_340 $$ public void runSql(ConnectionProvider provider, String sql) --> Line_343 $$ statement.execute(sql)  [CD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_343 $$ statement.execute(sql)  [FD]
Line_348 $$ public void testLobServerMemory() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [CD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_352 $$ stat.execute("CREATE TABLE TEST(ID INT, DATA CLOB)")  [FD]
Line_357 $$ public void fillCustomersTable(Connection conn) --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [CD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_359 $$ statement.execute(DatabaseCreator.INSERT_CUSTOMERS7)  [FD]
Line_364 $$ public void execute(String sql) --> Line_368 $$ stm.execute(sql)  [CD]
Line_367 $$ Statement stm = con.createStatement() --> Line_368 $$ stm.execute(sql)  [FD]
Line_373 $$ public void setupDatabase() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [CD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_380 $$ statement.execute("create table licenses (license varchar(512))")  [FD]
Line_385 $$ public void fillTestTable5(Connection conn) --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [CD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_387 $$ statement.execute("INSERT INTO " + TEST_TABLE5 + " VALUES(3, '4')")  [FD]
Line_392 $$ public void fillOrdersTable(Connection conn) --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [CD]
Line_393 $$ Statement statement = conn.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_394 $$ statement.execute(DatabaseCreator.INSERT_ORDERS10)  [FD]
Line_399 $$ public void dropTable(Connection con, String table) --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [CD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_401 $$ stmt.execute("DROP TABLE " + table + " IF EXISTS;")  [FD]
Line_406 $$ public void initializeConnection(Connection connection) --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [CD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_408 $$ stmt.execute("ALTER SESSION SET NLS_TIMESTAMP_FORMAT = 'SYYYY-MM-DD HH24:MI:SS'")  [FD]
Line_413 $$ public void fillFKStrictTable(Connection conn) --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [CD]
Line_414 $$ Statement statement = conn.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_393 $$ Statement statement = conn.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_415 $$ statement.execute("INSERT INTO " + FKSTRICT_TABLE + " VALUES(3, 1, '3')")  [FD]
Line_421 $$ public void removeTable(Connection conn, String name) --> Line_423 $$ stat.execute("DROP TABLE " + name)  [CD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_423 $$ stat.execute("DROP TABLE " + name)  [FD]
Line_428 $$ public void testReadOnlyConnect() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [CD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_432 $$ stat.execute("insert into test select x from system_range(1, 11)")  [FD]
Line_437 $$ public void runStatement(VersionedPostgisDataStore dataStore, String sqlStatement) --> Line_440 $$ st.execute(sqlStatement)  [CD]
Line_270 $$ Statement st = conn.createStatement() --> Line_440 $$ st.execute(sqlStatement)  [FD]
Line_42 $$ Statement st = connection.createStatement() --> Line_440 $$ st.execute(sqlStatement)  [FD]
Line_446 $$ public void forceQuery(Connection c, String query) --> Line_448 $$ stmt.execute(query)  [CD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_448 $$ stmt.execute(query)  [FD]
Line_453 $$ public void fillSalesPeopleTable(Connection conn) --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [CD]
Line_454 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_414 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_393 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_455 $$ statement.execute(DatabaseCreator.INSERT_SALESPEOPLE6)  [FD]
Line_460 $$ public void testSortedSelect() --> Line_464 $$ stat.execute("drop table test")  [CD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_464 $$ stat.execute("drop table test")  [FD]
Line_469 $$ public void setupDatabase(Connection con) --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [CD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_471 $$ stmt.execute("CREATE TABLE " + TABLE_INDEX + "(name text, statement text, category text)")  [FD]
Line_477 $$ public void testClearSyntaxException() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [CD]
Line_479 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_480 $$ stat.execute("select t.x, t.x t.y from dual t")  [FD]
Line_485 $$ public void runConsistencyChecker(Connection con, String tableName) --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [CD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_487 $$ stmt.execute("values SYSCS_UTIL.SYSCS_CHECK_TABLE('APP',  'EMP')")  [FD]
Line_492 $$ public void truncate() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [CD]
Line_494 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_454 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_414 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_393 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_495 $$ statement.execute(QUERY_TRUNCATE)  [FD]
Line_500 $$ public void setup(Connection conn) --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [CD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_502 $$ stmt.execute("delete from departments where department_id >= 300")  [FD]
Line_507 $$ public void tablesExist(Connection c) --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [CD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_509 $$ stmt.execute("SELECT count(*) FROM COP_WORKFLOW_INSTANCE")  [FD]
Line_514 $$ public void initializeConnection(Connection cx) --> Line_516 $$ st.execute("set lockmode session where level=mvcc")  [CD]
Line_515 $$ Statement st = cx.createStatement() --> Line_516 $$ st.execute("set lockmode session where level=mvcc")  [FD]
Line_270 $$ Statement st = conn.createStatement() --> Line_516 $$ st.execute("set lockmode session where level=mvcc")  [FD]
Line_42 $$ Statement st = connection.createStatement() --> Line_516 $$ st.execute("set lockmode session where level=mvcc")  [FD]
Line_521 $$ public void initDatabaseAccess(Connection con) --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [CD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_523 $$ stmt.execute("CREATE ALIAS IF NOT EXISTS NOW_MILLIS FOR \"java.lang.System.currentTimeMillis\";")  [FD]
Line_528 $$ public void testQueryTimeout() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [CD]
Line_531 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_479 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_532 $$ stat.execute("SET QUERY_TIMEOUT 10")  [FD]
Line_528 $$ public void testQueryTimeout() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [CD]
Line_531 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_479 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_533 $$ assertThrows(ErrorCode.STATEMENT_WAS_CANCELED, stat).executeQuery("SELECT MAX(RAND()) " + "FROM SYSTEM_RANGE(1, 100000000)")  [FD]
Line_540 $$ public void executeSql(String sql, Connection connection) --> Line_542 $$ statement.execute(sql)  [CD]
Line_541 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_494 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_454 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_414 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_393 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_542 $$ statement.execute(sql)  [FD]
Line_547 $$ public void dropAll(Connection conn) --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [CD]
Line_548 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_531 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_479 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_549 $$ stat.execute("DROP SCHEMA IF EXISTS " + SCHEMA)  [FD]
Line_554 $$ public void fillParentTable(Connection conn) --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [CD]
Line_555 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_541 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_494 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_454 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_414 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_393 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_386 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_379 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_358 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_342 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_334 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_326 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_319 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_312 $$ Statement statement = conn.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_227 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_219 $$ Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_139 $$ final Statement statement = connection.createStatement() --> Line_556 $$ statement.execute("INSERT INTO " + PARENT_TABLE + " VALUES(3, 'test3')")  [FD]
Line_562 $$ public void work(Connection conn) --> Line_564 $$ stat.execute("insert into temp values(1)")  [CD]
Line_563 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_548 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_531 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_479 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_564 $$ stat.execute("insert into temp values(1)")  [FD]
Line_570 $$ public void testEmptyColumn() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [CD]
Line_573 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_563 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_548 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_531 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_479 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_463 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_431 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_422 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_351 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_288 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_279 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_261 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_252 $$ Statement stat = c.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_201 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_192 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_183 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_174 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_165 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_88 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_71 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_30 $$ Statement stat = conn.createStatement() --> Line_574 $$ stat.execute("select * from test_view where a between 1 and 2 and b = 2")  [FD]
Line_579 $$ public void runSQL(String sql, Connection cx) --> Line_581 $$ st.execute(sql)  [CD]
Line_580 $$ Statement st = cx.createStatement() --> Line_581 $$ st.execute(sql)  [FD]
Line_515 $$ Statement st = cx.createStatement() --> Line_581 $$ st.execute(sql)  [FD]
Line_270 $$ Statement st = conn.createStatement() --> Line_581 $$ st.execute(sql)  [FD]
Line_42 $$ Statement st = connection.createStatement() --> Line_581 $$ st.execute(sql)  [FD]
Line_587 $$ public void dropDataIdsTempTable(Connection connection, String dataIdsTableName) --> Line_589 $$ stmt.execute(query)  [CD]
Line_588 $$ Statement stmt = connection.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_589 $$ stmt.execute(query)  [FD]
Line_594 $$ public void truncate(Connection con) --> Line_596 $$ st.execute(sql)  [CD]
Line_580 $$ Statement st = cx.createStatement() --> Line_596 $$ st.execute(sql)  [FD]
Line_515 $$ Statement st = cx.createStatement() --> Line_596 $$ st.execute(sql)  [FD]
Line_270 $$ Statement st = conn.createStatement() --> Line_596 $$ st.execute(sql)  [FD]
Line_42 $$ Statement st = connection.createStatement() --> Line_596 $$ st.execute(sql)  [FD]
Line_602 $$ public void setupTestTableWithData(String tableName, Path dataFilePath, Connection hs2Conn) --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [CD]
Line_603 $$ Statement stmt = hs2Conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_588 $$ Statement stmt = connection.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_604 $$ stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string)")  [FD]
Line_610 $$ public void dropTab1(final Connection c) --> Line_612 $$ stmt.execute("drop table tab1")  [CD]
Line_611 $$ final Statement stmt = c.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_603 $$ Statement stmt = hs2Conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_588 $$ Statement stmt = connection.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_612 $$ stmt.execute("drop table tab1")  [FD]
Line_617 $$ public void getExecutedStatementWhereLoginName(String loginName) --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [CD]
Line_619 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_611 $$ final Statement stmt = c.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_603 $$ Statement stmt = hs2Conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_588 $$ Statement stmt = connection.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_620 $$ stmt.execute("select * from users where " + COLUMN_LOGIN + "='" + loginName + "'")  [FD]
Line_625 $$ public void dumpTable(Connection conn) --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [CD]
Line_626 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_619 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_611 $$ final Statement stmt = c.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_603 $$ Statement stmt = hs2Conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_588 $$ Statement stmt = connection.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_627 $$ ResultSet rset = stmt.executeQuery("select region_id, region_name from regions order by region_id")  [FD]
Line_625 $$ public void dumpTable(Connection conn) --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [CD]
Line_626 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_619 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_611 $$ final Statement stmt = c.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_603 $$ Statement stmt = hs2Conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_588 $$ Statement stmt = connection.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_522 $$ Statement stmt = con.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_508 $$ final Statement stmt = c.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_501 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_486 $$ Statement stmt = con.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_470 $$ Statement stmt = con.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_447 $$ Statement stmt = c.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_407 $$ Statement stmt = connection.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_400 $$ Statement stmt = con.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_304 $$ Statement stmt = con.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_297 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_147 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_107 $$ Statement stmt = connection.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_98 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_80 $$ Statement stmt = connection.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_62 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_54 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_21 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_13 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_5 $$ Statement stmt = conn.createStatement() --> Line_630 $$ stmt.execute("delete from regions where region_id > 100")  [FD]
Line_635 $$ public void testNoBegin() --> Line_639 $$ st.execute(sql)  [CD]
Line_637 $$ Statement st = connection.createStatement() --> Line_639 $$ st.execute(sql)  [FD]
Line_580 $$ Statement st = cx.createStatement() --> Line_639 $$ st.execute(sql)  [FD]
Line_515 $$ Statement st = cx.createStatement() --> Line_639 $$ st.execute(sql)  [FD]
Line_270 $$ Statement st = conn.createStatement() --> Line_639 $$ st.execute(sql)  [FD]
Line_42 $$ Statement st = connection.createStatement() --> Line_639 $$ st.execute(sql)  [FD]
Line_638 $$ String sql = getValidationQuery(connection) --> Line_639 $$ st.execute(sql)  [FD]
Line_3 $$ public void doConnStmtNoRS(String text) --> Line_5 $$ Statement stmt = conn.createStatement()  [CD]
Line_11 $$ public void createDDL() --> Line_13 $$ Statement stmt = conn.createStatement()  [CD]
Line_19 $$ public void destroyDatabase(String database) --> Line_21 $$ Statement stmt = conn.createStatement()  [CD]
Line_27 $$ public void testCountDistinctNotNull() --> Line_30 $$ Statement stat = conn.createStatement()  [CD]
Line_27 $$ public void testCountDistinctNotNull() --> Line_34 $$ rs.next()  [CD]
Line_27 $$ public void testCountDistinctNotNull() --> Line_35 $$ assertEquals(1, rs.getInt(1))  [CD]
Line_41 $$ public void verifyTableColumnContents(Connection connection, String table, String column, ColumnGenerator gen) --> Line_42 $$ Statement st = connection.createStatement()  [CD]
Line_41 $$ public void verifyTableColumnContents(Connection connection, String table, String column, ColumnGenerator gen) --> Line_45 $$ for (int row = 0; rs.next(); ++row)  [CD]
Line_45 $$ for (int row = 0; rs.next(); ++row) --> Line_46 $$ assertEquals(gen.getVerifyText(row), rs.getString(1))  [FD]
Line_52 $$ public void tearDown() --> Line_54 $$ Statement stmt = conn.createStatement()  [CD]
Line_60 $$ public void createTable() --> Line_62 $$ Statement stmt = conn.createStatement()  [CD]
Line_68 $$ public void testDeleteGroup() --> Line_71 $$ Statement stat = conn.createStatement()  [CD]
Line_78 $$ public void shutdown(DataSource dataSource, String databaseName) --> Line_80 $$ Statement stmt = connection.createStatement()  [CD]
Line_86 $$ public void testEmptyStatements() --> Line_88 $$ Statement stat = conn.createStatement()  [CD]
Line_94 $$ public void wrappedService(HttpServletRequest request, HttpServletResponse response, String[] path, java.util.LinkedHashMap<String, String> query) --> Line_98 $$ Statement stmt = conn.createStatement()  [CD]
Line_105 $$ public void shutdown(DataSource dataSource, String databaseName) --> Line_107 $$ Statement stmt = connection.createStatement()  [CD]
Line_137 $$ public void before() --> Line_139 $$ final Statement statement = connection.createStatement()  [CD]
Line_145 $$ public void f_test_createIndex() --> Line_147 $$ Statement stmt = conn.createStatement()  [CD]
Line_162 $$ public void testDefaultMinMax() --> Line_165 $$ Statement stat = conn.createStatement()  [CD]
Line_171 $$ public void testAlterSequenceColumn() --> Line_174 $$ Statement stat = conn.createStatement()  [CD]
Line_180 $$ public void testSchemaSearchPath() --> Line_183 $$ Statement stat = conn.createStatement()  [CD]
Line_189 $$ public void testRunscriptFromClasspath() --> Line_192 $$ Statement stat = conn.createStatement()  [CD]
Line_198 $$ public void testLobUpdateMany() --> Line_201 $$ Statement stat = conn.createStatement()  [CD]
Line_217 $$ public void dropTable() --> Line_219 $$ Statement statement = connection.createStatement()  [CD]
Line_225 $$ public void tearDown() --> Line_227 $$ Statement statement = connection.createStatement()  [CD]
Line_250 $$ public void testKeyAsColumnInMySQLMode() --> Line_252 $$ Statement stat = c.createStatement()  [CD]
Line_258 $$ public void testConstraintAlterTable() --> Line_261 $$ Statement stat = conn.createStatement()  [CD]
Line_267 $$ public void createDatabase() --> Line_270 $$ Statement st = conn.createStatement()  [CD]
Line_276 $$ public void testViewParameters() --> Line_279 $$ Statement stat = conn.createStatement()  [CD]
Line_286 $$ public void testReferenceableIndexUsage() --> Line_288 $$ Statement stat = conn.createStatement()  [CD]
Line_294 $$ public void testInsertRollback() --> Line_297 $$ Statement stmt = conn.createStatement()  [CD]
Line_303 $$ public void executeSQL(Connection con, String sql) --> Line_304 $$ Statement stmt = con.createStatement()  [CD]
Line_311 $$ public void fillSimpleTable3(Connection conn) --> Line_312 $$ Statement statement = conn.createStatement()  [CD]
Line_318 $$ public void fillSimpleTable1(Connection conn) --> Line_319 $$ Statement statement = conn.createStatement()  [CD]
Line_325 $$ public void doInConnection(java.sql.Connection connection) --> Line_326 $$ Statement statement = connection.createStatement()  [CD]
Line_332 $$ public void createTable() --> Line_334 $$ Statement statement = connection.createStatement()  [CD]
Line_340 $$ public void runSql(ConnectionProvider provider, String sql) --> Line_342 $$ Statement statement = connection.createStatement()  [CD]
Line_348 $$ public void testLobServerMemory() --> Line_351 $$ Statement stat = conn.createStatement()  [CD]
Line_357 $$ public void fillCustomersTable(Connection conn) --> Line_358 $$ Statement statement = conn.createStatement()  [CD]
Line_364 $$ public void execute(String sql) --> Line_367 $$ Statement stm = con.createStatement()  [CD]
Line_373 $$ public void setupDatabase() --> Line_379 $$ Statement statement = connection.createStatement()  [CD]
Line_385 $$ public void fillTestTable5(Connection conn) --> Line_386 $$ Statement statement = conn.createStatement()  [CD]
Line_392 $$ public void fillOrdersTable(Connection conn) --> Line_393 $$ Statement statement = conn.createStatement()  [CD]
Line_399 $$ public void dropTable(Connection con, String table) --> Line_400 $$ Statement stmt = con.createStatement()  [CD]
Line_406 $$ public void initializeConnection(Connection connection) --> Line_407 $$ Statement stmt = connection.createStatement()  [CD]
Line_413 $$ public void fillFKStrictTable(Connection conn) --> Line_414 $$ Statement statement = conn.createStatement()  [CD]
Line_421 $$ public void removeTable(Connection conn, String name) --> Line_422 $$ Statement stat = conn.createStatement()  [CD]
Line_428 $$ public void testReadOnlyConnect() --> Line_431 $$ Statement stat = conn.createStatement()  [CD]
Line_446 $$ public void forceQuery(Connection c, String query) --> Line_447 $$ Statement stmt = c.createStatement()  [CD]
Line_453 $$ public void fillSalesPeopleTable(Connection conn) --> Line_454 $$ Statement statement = conn.createStatement()  [CD]
Line_460 $$ public void testSortedSelect() --> Line_463 $$ Statement stat = conn.createStatement()  [CD]
Line_469 $$ public void setupDatabase(Connection con) --> Line_470 $$ Statement stmt = con.createStatement()  [CD]
Line_477 $$ public void testClearSyntaxException() --> Line_479 $$ Statement stat = conn.createStatement()  [CD]
Line_485 $$ public void runConsistencyChecker(Connection con, String tableName) --> Line_486 $$ Statement stmt = con.createStatement()  [CD]
Line_492 $$ public void truncate() --> Line_494 $$ Statement statement = connection.createStatement()  [CD]
Line_500 $$ public void setup(Connection conn) --> Line_501 $$ Statement stmt = conn.createStatement()  [CD]
Line_507 $$ public void tablesExist(Connection c) --> Line_508 $$ final Statement stmt = c.createStatement()  [CD]
Line_514 $$ public void initializeConnection(Connection cx) --> Line_515 $$ Statement st = cx.createStatement()  [CD]
Line_521 $$ public void initDatabaseAccess(Connection con) --> Line_522 $$ Statement stmt = con.createStatement()  [CD]
Line_528 $$ public void testQueryTimeout() --> Line_531 $$ Statement stat = conn.createStatement()  [CD]
Line_540 $$ public void executeSql(String sql, Connection connection) --> Line_541 $$ Statement statement = connection.createStatement()  [CD]
Line_547 $$ public void dropAll(Connection conn) --> Line_548 $$ Statement stat = conn.createStatement()  [CD]
Line_554 $$ public void fillParentTable(Connection conn) --> Line_555 $$ Statement statement = conn.createStatement()  [CD]
Line_562 $$ public void work(Connection conn) --> Line_563 $$ Statement stat = conn.createStatement()  [CD]
Line_570 $$ public void testEmptyColumn() --> Line_573 $$ Statement stat = conn.createStatement()  [CD]
Line_579 $$ public void runSQL(String sql, Connection cx) --> Line_580 $$ Statement st = cx.createStatement()  [CD]
Line_587 $$ public void dropDataIdsTempTable(Connection connection, String dataIdsTableName) --> Line_588 $$ Statement stmt = connection.createStatement()  [CD]
Line_602 $$ public void setupTestTableWithData(String tableName, Path dataFilePath, Connection hs2Conn) --> Line_603 $$ Statement stmt = hs2Conn.createStatement()  [CD]
Line_610 $$ public void dropTab1(final Connection c) --> Line_611 $$ final Statement stmt = c.createStatement()  [CD]
Line_617 $$ public void getExecutedStatementWhereLoginName(String loginName) --> Line_619 $$ Statement stmt = conn.createStatement()  [CD]
Line_625 $$ public void dumpTable(Connection conn) --> Line_626 $$ Statement stmt = conn.createStatement()  [CD]
Line_625 $$ public void dumpTable(Connection conn) --> Line_628 $$ while (rset.next()) System.out.println(rset.getInt(1) + " " + rset.getString(2));  [CD]
Line_628 $$ while (rset.next()) System.out.println(rset.getInt(1) + " " + rset.getString(2)); --> Line_629 $$ System.out.println(rset.getInt(1) + " " + rset.getString(2))  [CD]
Line_635 $$ public void testNoBegin() --> Line_637 $$ Statement st = connection.createStatement()  [CD]
Line_635 $$ public void testNoBegin() --> Line_638 $$ String sql = getValidationQuery(connection)  [CD]
