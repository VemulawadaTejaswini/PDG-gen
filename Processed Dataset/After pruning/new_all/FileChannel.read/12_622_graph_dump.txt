Line_5 $$ long read = ch.read(h) --> Line_6 $$ if (read != HINT_HEADER_SIZE)  [FD]
Line_5 $$ long read = ch.read(h) --> Line_15 $$ read = ch.read(key)  [FD]
Line_5 $$ long read = ch.read(h) --> Line_16 $$ if (read != key_len)  [FD]
Line_15 $$ read = ch.read(key) --> Line_16 $$ if (read != key_len)  [FD]
Line_3 $$ public void fold_keys_hintfile(KeyIter<T> iter, T acc) --> Line_5 $$ long read = ch.read(h)  [CD]
Line_4 $$ ByteBuffer h = ByteBuffer.wrap(header) --> Line_5 $$ long read = ch.read(h)  [FD]
Line_3 $$ public void fold_keys_hintfile(KeyIter<T> iter, T acc) --> Line_15 $$ read = ch.read(key)  [CD]
Line_14 $$ ByteBuffer key = ByteBuffer.wrap(k) --> Line_15 $$ read = ch.read(key)  [FD]
Line_3 $$ public void fold_keys_hintfile(KeyIter<T> iter, T acc) --> Line_4 $$ ByteBuffer h = ByteBuffer.wrap(header)  [CD]
Line_3 $$ public void fold_keys_hintfile(KeyIter<T> iter, T acc) --> Line_6 $$ if (read != HINT_HEADER_SIZE)  [CD]
Line_3 $$ public void fold_keys_hintfile(KeyIter<T> iter, T acc) --> Line_14 $$ ByteBuffer key = ByteBuffer.wrap(k)  [CD]
Line_3 $$ public void fold_keys_hintfile(KeyIter<T> iter, T acc) --> Line_16 $$ if (read != key_len)  [CD]
