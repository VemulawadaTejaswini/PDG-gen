Line_12 $$ if (size <= SHOW_LOG_LENGTH) --> Line_14 $$ filechannel.read(bb, 0)  [CD]
Line_8 $$ FileChannel filechannel = fis.getChannel() --> Line_14 $$ filechannel.read(bb, 0)  [FD]
Line_11 $$ ByteBuffer bb --> Line_14 $$ filechannel.read(bb, 0)  [FD]
Line_13 $$ bb = ByteBuffer.allocate((int) size) --> Line_14 $$ filechannel.read(bb, 0)  [FD]
Line_12 $$ if (size <= SHOW_LOG_LENGTH) --> Line_18 $$ filechannel.read(bb, pos)  [CD]
Line_8 $$ FileChannel filechannel = fis.getChannel() --> Line_18 $$ filechannel.read(bb, pos)  [FD]
Line_11 $$ ByteBuffer bb --> Line_18 $$ filechannel.read(bb, pos)  [FD]
Line_13 $$ bb = ByteBuffer.allocate((int) size) --> Line_18 $$ filechannel.read(bb, pos)  [FD]
Line_17 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH) --> Line_18 $$ filechannel.read(bb, pos)  [FD]
Line_16 $$ int pos = (int) (size - SHOW_LOG_LENGTH) --> Line_18 $$ filechannel.read(bb, pos)  [FD]
Line_12 $$ if (size <= SHOW_LOG_LENGTH) --> Line_13 $$ bb = ByteBuffer.allocate((int) size)  [CD]
Line_11 $$ ByteBuffer bb --> Line_13 $$ bb = ByteBuffer.allocate((int) size)  [FD]
Line_12 $$ if (size <= SHOW_LOG_LENGTH) --> Line_16 $$ int pos = (int) (size - SHOW_LOG_LENGTH)  [CD]
Line_12 $$ if (size <= SHOW_LOG_LENGTH) --> Line_17 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)  [CD]
Line_11 $$ ByteBuffer bb --> Line_17 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)  [FD]
Line_13 $$ bb = ByteBuffer.allocate((int) size) --> Line_17 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)  [FD]
