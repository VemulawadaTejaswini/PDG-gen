Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_6 $$ conn.setInstanceFollowRedirects(false)  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_7 $$ conn.connect()  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_8 $$ assertEquals(302, conn.getResponseCode())  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_9 $$ assertEquals("Temporary Redirect", conn.getResponseMessage())  [FD]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_10 $$ assertEquals("/a/b/c/d?q", conn.getHeaderField("Location"))  [FD]
Line_3 $$ public void testQueryRedirect() --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ URL url = new URI("http", null, "localhost", HTTP_SERVER_PORT, "/path", "redirect=/a/b/c/d?q", null).toURL() --> Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void testQueryRedirect() --> Line_4 $$ URL url = new URI("http", null, "localhost", HTTP_SERVER_PORT, "/path", "redirect=/a/b/c/d?q", null).toURL()  [CD]
Line_3 $$ public void testQueryRedirect() --> Line_6 $$ conn.setInstanceFollowRedirects(false)  [CD]
Line_3 $$ public void testQueryRedirect() --> Line_7 $$ conn.connect()  [CD]
Line_3 $$ public void testQueryRedirect() --> Line_8 $$ assertEquals(302, conn.getResponseCode())  [CD]
Line_3 $$ public void testQueryRedirect() --> Line_9 $$ assertEquals("Temporary Redirect", conn.getResponseMessage())  [CD]
Line_3 $$ public void testQueryRedirect() --> Line_10 $$ assertEquals("/a/b/c/d?q", conn.getHeaderField("Location"))  [CD]
