Line_28 $$ ResultSet result = statement.executeQuery() --> Line_29 $$ int size = result.getMetaData().getColumnCount()  [FD]
Line_37 $$ ResultSet result = statement.executeQuery() --> Line_38 $$ int size = result.getMetaData().getColumnCount()  [FD]
Line_28 $$ ResultSet result = statement.executeQuery() --> Line_38 $$ int size = result.getMetaData().getColumnCount()  [FD]
Line_134 $$ ResultSet resultSet = statement.executeQuery() --> Line_135 $$ resultSet.close()  [FD]
Line_3 $$ public void testMappingsWithEmbedEnumAndEnumDBTypes() --> Line_6 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_6 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_11 $$ public void testPrimitiveMappingsWithEmbed() --> Line_13 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_13 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_13 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_18 $$ public void testListWithEmptyEnums() --> Line_21 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_21 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_21 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_21 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_26 $$ public void test() --> Line_28 $$ ResultSet result = statement.executeQuery()  [CD]
Line_27 $$ PreparedStatement statement = connection.prepareStatement(sql) --> Line_28 $$ ResultSet result = statement.executeQuery()  [FD]
Line_34 $$ public void setup() --> Line_37 $$ ResultSet result = statement.executeQuery()  [CD]
Line_36 $$ PreparedStatement statement = connection.prepareStatement("SELECT EMP_ID FROM EMPLOYEE") --> Line_37 $$ ResultSet result = statement.executeQuery()  [FD]
Line_27 $$ PreparedStatement statement = connection.prepareStatement(sql) --> Line_37 $$ ResultSet result = statement.executeQuery()  [FD]
Line_43 $$ public void testObjectWithNullList() --> Line_45 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_45 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_45 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_45 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_45 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_50 $$ public void testListWithInvalidEnums() --> Line_53 $$ ps.executeQuery()  [CD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_53 $$ ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_53 $$ ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_53 $$ ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_53 $$ ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_53 $$ ps.executeQuery()  [FD]
Line_58 $$ public void testEnumMappings() --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_60 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_65 $$ public void testDateTimeMappings() --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_67 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_72 $$ public void testColumnMappings() --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_74 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_79 $$ public void testHStoreNull() --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_81 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_86 $$ public void enumTransformation() --> Line_89 $$ final ResultSet result = stmt.executeQuery()  [CD]
Line_87 $$ final PreparedStatement stmt = connection.prepareStatement(String.format("SELECT '%s' AS male_female;", dbCode)) --> Line_89 $$ final ResultSet result = stmt.executeQuery()  [FD]
Line_94 $$ public void testPrimitives() --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_96 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_101 $$ public void testNullString() --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_103 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_108 $$ public void testPrimitiveMappings() --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_110 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_115 $$ public void testPrimitiveBigDecimalMapper() --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_117 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_122 $$ public void testObjectStringMappingWithNullString() --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_125 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_130 $$ public void testInvalidTimeout() --> Line_134 $$ ResultSet resultSet = statement.executeQuery()  [CD]
Line_132 $$ PreparedStatement statement = connection.prepareStatement("select 'hello'") --> Line_134 $$ ResultSet resultSet = statement.executeQuery()  [FD]
Line_36 $$ PreparedStatement statement = connection.prepareStatement("SELECT EMP_ID FROM EMPLOYEE") --> Line_134 $$ ResultSet resultSet = statement.executeQuery()  [FD]
Line_27 $$ PreparedStatement statement = connection.prepareStatement(sql) --> Line_134 $$ ResultSet resultSet = statement.executeQuery()  [FD]
Line_140 $$ public void select(String sql, Class<T> clazz) --> Line_143 $$ ResultSet rs = stmt.executeQuery()  [CD]
Line_142 $$ PreparedStatement stmt = connection.prepareStatement(sql) --> Line_143 $$ ResultSet rs = stmt.executeQuery()  [FD]
Line_87 $$ final PreparedStatement stmt = connection.prepareStatement(String.format("SELECT '%s' AS male_female;", dbCode)) --> Line_143 $$ ResultSet rs = stmt.executeQuery()  [FD]
Line_149 $$ public void testNullObjectInObject() --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_152 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_157 $$ public void testHStoreFilled() --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_158 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, hstore('key', 'val') as map") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_159 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_164 $$ public void testEnumMappingsWithEnumInComplexType() --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_165 $$ final PreparedStatement ps = connection.prepareStatement("select * from simple_with_enumeration_type_function();") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_158 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, hstore('key', 'val') as map") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_167 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_172 $$ public void testObjectWithEmptyList() --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_173 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(ARRAY[]::tmp.simple_type[], 'str')::tmp.array_type as obj, 'str' as str ") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_165 $$ final PreparedStatement ps = connection.prepareStatement("select * from simple_with_enumeration_type_function();") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_158 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, hstore('key', 'val') as map") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_175 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_180 $$ public void testPrimitivesWithSearchPath() --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_182 $$ final PreparedStatement ps = connection.prepareStatement("SELECT primitives_function();") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_173 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(ARRAY[]::tmp.simple_type[], 'str')::tmp.array_type as obj, 'str' as str ") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_165 $$ final PreparedStatement ps = connection.prepareStatement("select * from simple_with_enumeration_type_function();") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_158 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, hstore('key', 'val') as map") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_183 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_188 $$ public void testSimpleStringSet() --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [CD]
Line_189 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['result_1', 'result_2']::text[] as arr") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_182 $$ final PreparedStatement ps = connection.prepareStatement("SELECT primitives_function();") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_173 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(ARRAY[]::tmp.simple_type[], 'str')::tmp.array_type as obj, 'str' as str ") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_165 $$ final PreparedStatement ps = connection.prepareStatement("select * from simple_with_enumeration_type_function();") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_158 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, hstore('key', 'val') as map") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str") --> Line_191 $$ final ResultSet rs = ps.executeQuery()  [FD]
Line_3 $$ public void testMappingsWithEmbedEnumAndEnumDBTypes() --> Line_4 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'VALUE_1'::enumeration as a, 'VALUE_2'::enumeration as b, 'str' as str")  [CD]
Line_11 $$ public void testPrimitiveMappingsWithEmbed() --> Line_12 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c, 'str' as str")  [CD]
Line_18 $$ public void testListWithEmptyEnums() --> Line_19 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY[]::enumeration[] as enum_arr")  [CD]
Line_26 $$ public void test() --> Line_27 $$ PreparedStatement statement = connection.prepareStatement(sql)  [CD]
Line_26 $$ public void test() --> Line_29 $$ int size = result.getMetaData().getColumnCount()  [CD]
Line_34 $$ public void setup() --> Line_36 $$ PreparedStatement statement = connection.prepareStatement("SELECT EMP_ID FROM EMPLOYEE")  [CD]
Line_34 $$ public void setup() --> Line_38 $$ int size = result.getMetaData().getColumnCount()  [CD]
Line_43 $$ public void testObjectWithNullList() --> Line_44 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as arr, 'str' as str ")  [CD]
Line_50 $$ public void testListWithInvalidEnums() --> Line_51 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['VALUE_3'::enumeration]::enumeration[] as enum_arr")  [CD]
Line_58 $$ public void testEnumMappings() --> Line_59 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 0 as a, 'VALUE_2' as b")  [CD]
Line_65 $$ public void testDateTimeMappings() --> Line_66 $$ final PreparedStatement ps = connection.prepareStatement("SELECT lt, gt, zone from tmp.test_time")  [CD]
Line_72 $$ public void testColumnMappings() --> Line_73 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 2 as l, 'c' as c")  [CD]
Line_79 $$ public void testHStoreNull() --> Line_80 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, null as map")  [CD]
Line_86 $$ public void enumTransformation() --> Line_87 $$ final PreparedStatement stmt = connection.prepareStatement(String.format("SELECT '%s' AS male_female;", dbCode))  [CD]
Line_94 $$ public void testPrimitives() --> Line_95 $$ final PreparedStatement ps = connection.prepareStatement("SELECT tmp.primitives_function();")  [CD]
Line_101 $$ public void testNullString() --> Line_102 $$ final PreparedStatement ps = connection.prepareStatement("SELECT null as str")  [CD]
Line_108 $$ public void testPrimitiveMappings() --> Line_109 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i, 2 as l, 'c' as c")  [CD]
Line_115 $$ public void testPrimitiveBigDecimalMapper() --> Line_116 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 1 as i")  [CD]
Line_122 $$ public void testObjectStringMappingWithNullString() --> Line_123 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(1,2,'c', null)::tmp.simple_type_for_embed as obj")  [CD]
Line_130 $$ public void testInvalidTimeout() --> Line_132 $$ PreparedStatement statement = connection.prepareStatement("select 'hello'")  [CD]
Line_130 $$ public void testInvalidTimeout() --> Line_135 $$ resultSet.close()  [CD]
Line_140 $$ public void select(String sql, Class<T> clazz) --> Line_142 $$ PreparedStatement stmt = connection.prepareStatement(sql)  [CD]
Line_149 $$ public void testNullObjectInObject() --> Line_150 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ROW(null,'str')::tmp.complex_type as obj")  [CD]
Line_157 $$ public void testHStoreFilled() --> Line_158 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, hstore('key', 'val') as map")  [CD]
Line_164 $$ public void testEnumMappingsWithEnumInComplexType() --> Line_165 $$ final PreparedStatement ps = connection.prepareStatement("select * from simple_with_enumeration_type_function();")  [CD]
Line_172 $$ public void testObjectWithEmptyList() --> Line_173 $$ final PreparedStatement ps = connection.prepareStatement("SELECT ROW(ARRAY[]::tmp.simple_type[], 'str')::tmp.array_type as obj, 'str' as str ")  [CD]
Line_180 $$ public void testPrimitivesWithSearchPath() --> Line_182 $$ final PreparedStatement ps = connection.prepareStatement("SELECT primitives_function();")  [CD]
Line_188 $$ public void testSimpleStringSet() --> Line_189 $$ final PreparedStatement ps = connection.prepareStatement("SELECT 'str' as str, ARRAY['result_1', 'result_2']::text[] as arr")  [CD]
