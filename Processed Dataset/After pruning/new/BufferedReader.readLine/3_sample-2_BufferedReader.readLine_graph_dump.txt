Line_2 $$ public void main(String args[]) --> Line_4 $$ BufferedReader in = new BufferedReader(converter) [CD]
Line_2 $$ public void main(String args[]) --> Line_5 $$ List<String> s1 = Arrays.asList(in.readLine().trim().split("\\s+")) [CD]
Line_4 $$ BufferedReader in = new BufferedReader(converter) --> Line_5 $$ List<String> s1 = Arrays.asList(in.readLine().trim().split("\\s+")) [FD]
Line_2 $$ public void main(String args[]) --> Line_6 $$ List<String> s2 = Arrays.asList(in.readLine().trim().split("\\s+")) [CD]
Line_4 $$ BufferedReader in = new BufferedReader(converter) --> Line_6 $$ List<String> s2 = Arrays.asList(in.readLine().trim().split("\\s+")) [FD]
Line_2 $$ public void main(String args[]) --> Line_7 $$ int big1 = Integer.parseInt(in.readLine().trim()) [CD]
Line_4 $$ BufferedReader in = new BufferedReader(converter) --> Line_7 $$ int big1 = Integer.parseInt(in.readLine().trim()) [FD]
Line_2 $$ public void main(String args[]) --> Line_8 $$ int big2 = Integer.parseInt(in.readLine().trim()) [CD]
Line_4 $$ BufferedReader in = new BufferedReader(converter) --> Line_8 $$ int big2 = Integer.parseInt(in.readLine().trim()) [FD]
Line_2 $$ public void main(String args[]) --> Line_9 $$ System.out.println(jaccard(s1, s2)) [CD]
Line_5 $$ List<String> s1 = Arrays.asList(in.readLine().trim().split("\\s+")) --> Line_9 $$ System.out.println(jaccard(s1, s2)) [FD]
Line_6 $$ List<String> s2 = Arrays.asList(in.readLine().trim().split("\\s+")) --> Line_9 $$ System.out.println(jaccard(s1, s2)) [FD]
Line_2 $$ public void main(String args[]) --> Line_10 $$ System.out.println(sampleCorrectedJaccard(s1, s2, big1, big2)) [CD]
Line_5 $$ List<String> s1 = Arrays.asList(in.readLine().trim().split("\\s+")) --> Line_10 $$ System.out.println(sampleCorrectedJaccard(s1, s2, big1, big2)) [FD]
Line_6 $$ List<String> s2 = Arrays.asList(in.readLine().trim().split("\\s+")) --> Line_10 $$ System.out.println(sampleCorrectedJaccard(s1, s2, big1, big2)) [FD]
Line_7 $$ int big1 = Integer.parseInt(in.readLine().trim()) --> Line_10 $$ System.out.println(sampleCorrectedJaccard(s1, s2, big1, big2)) [FD]
Line_8 $$ int big2 = Integer.parseInt(in.readLine().trim()) --> Line_10 $$ System.out.println(sampleCorrectedJaccard(s1, s2, big1, big2)) [FD]
