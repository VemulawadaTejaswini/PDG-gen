Line_5 $$ final HttpURLConnection get = (HttpURLConnection) url.openConnection() --> Line_6 $$ get.setRequestProperty("Accept-Encoding", "gzip")  [FD]
Line_5 $$ final HttpURLConnection get = (HttpURLConnection) url.openConnection() --> Line_7 $$ Assert.assertEquals("gzip", get.getContentEncoding())  [FD]
Line_8 $$ final HttpURLConnection post = (HttpURLConnection) url.openConnection() --> Line_9 $$ post.setRequestProperty("Accept-Encoding", "gzip")  [FD]
Line_8 $$ final HttpURLConnection post = (HttpURLConnection) url.openConnection() --> Line_10 $$ post.setRequestMethod("POST")  [FD]
Line_8 $$ final HttpURLConnection post = (HttpURLConnection) url.openConnection() --> Line_11 $$ Assert.assertEquals("gzip", post.getContentEncoding())  [FD]
Line_12 $$ final HttpURLConnection getNoGzip = (HttpURLConnection) url.openConnection() --> Line_13 $$ Assert.assertNotEquals("gzip", getNoGzip.getContentEncoding())  [FD]
Line_14 $$ final HttpURLConnection postNoGzip = (HttpURLConnection) url.openConnection() --> Line_15 $$ postNoGzip.setRequestMethod("POST")  [FD]
Line_14 $$ final HttpURLConnection postNoGzip = (HttpURLConnection) url.openConnection() --> Line_16 $$ Assert.assertNotEquals("gzip", postNoGzip.getContentEncoding())  [FD]
Line_3 $$ public void testGzipCompression() --> Line_5 $$ final HttpURLConnection get = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ final URL url = new URL("http://localhost:" + port + "/default") --> Line_5 $$ final HttpURLConnection get = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void testGzipCompression() --> Line_8 $$ final HttpURLConnection post = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ final URL url = new URL("http://localhost:" + port + "/default") --> Line_8 $$ final HttpURLConnection post = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void testGzipCompression() --> Line_12 $$ final HttpURLConnection getNoGzip = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ final URL url = new URL("http://localhost:" + port + "/default") --> Line_12 $$ final HttpURLConnection getNoGzip = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void testGzipCompression() --> Line_14 $$ final HttpURLConnection postNoGzip = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ final URL url = new URL("http://localhost:" + port + "/default") --> Line_14 $$ final HttpURLConnection postNoGzip = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void testGzipCompression() --> Line_4 $$ final URL url = new URL("http://localhost:" + port + "/default")  [CD]
Line_3 $$ public void testGzipCompression() --> Line_6 $$ get.setRequestProperty("Accept-Encoding", "gzip")  [CD]
Line_3 $$ public void testGzipCompression() --> Line_7 $$ Assert.assertEquals("gzip", get.getContentEncoding())  [CD]
Line_3 $$ public void testGzipCompression() --> Line_9 $$ post.setRequestProperty("Accept-Encoding", "gzip")  [CD]
Line_3 $$ public void testGzipCompression() --> Line_10 $$ post.setRequestMethod("POST")  [CD]
Line_3 $$ public void testGzipCompression() --> Line_11 $$ Assert.assertEquals("gzip", post.getContentEncoding())  [CD]
Line_3 $$ public void testGzipCompression() --> Line_13 $$ Assert.assertNotEquals("gzip", getNoGzip.getContentEncoding())  [CD]
Line_3 $$ public void testGzipCompression() --> Line_15 $$ postNoGzip.setRequestMethod("POST")  [CD]
Line_3 $$ public void testGzipCompression() --> Line_16 $$ Assert.assertNotEquals("gzip", postNoGzip.getContentEncoding())  [CD]
