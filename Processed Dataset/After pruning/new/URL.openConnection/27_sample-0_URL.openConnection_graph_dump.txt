Line_2 $$ public void testCallIndexPage() --> Line_3 $$ URL url = new URL(this.baseUrl) [CD]
Line_2 $$ public void testCallIndexPage() --> Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() [CD]
Line_3 $$ URL url = new URL(this.baseUrl) --> Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public void testCallIndexPage() --> Line_5 $$ connection.setRequestProperty("Authorization", "bearer 74eccf5f-0995-4e1c-b08c-d05dd5a0f89b") [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_5 $$ connection.setRequestProperty("Authorization", "bearer 74eccf5f-0995-4e1c-b08c-d05dd5a0f89b") [FD]
Line_2 $$ public void testCallIndexPage() --> Line_6 $$ connection.connect() [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_6 $$ connection.connect() [FD]
Line_2 $$ public void testCallIndexPage() --> Line_7 $$ assertEquals(200, connection.getResponseCode()) [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_7 $$ assertEquals(200, connection.getResponseCode()) [FD]
Line_2 $$ public void testCallIndexPage() --> Line_8 $$ String output = IOUtils.toString(connection.getInputStream()) [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_8 $$ String output = IOUtils.toString(connection.getInputStream()) [FD]
Line_2 $$ public void testCallIndexPage() --> Line_9 $$ assertTrue(output.contains("emma.blunt")) [CD]
Line_8 $$ String output = IOUtils.toString(connection.getInputStream()) --> Line_9 $$ assertTrue(output.contains("emma.blunt")) [FD]
