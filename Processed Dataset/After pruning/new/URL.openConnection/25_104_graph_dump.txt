Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_6 $$ connection.setRequestMethod("GET")  [FD]
Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_7 $$ connection.setRequestProperty("Accept", "text/plain")  [FD]
Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_8 $$ connection.connect()  [FD]
Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_9 $$ assertEquals(400, connection.getResponseCode())  [FD]
Line_3 $$ public void invalidRequestUri(final String path) --> Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()  [CD]
Line_4 $$ final URL url = new URL(getBaseUri().toString() + path + "/resource --> Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()  [FD]
Line_3 $$ public void invalidRequestUri(final String path) --> Line_4 $$ final URL url = new URL(getBaseUri().toString() + path + "/resource  [CD]
Line_3 $$ public void invalidRequestUri(final String path) --> Line_6 $$ connection.setRequestMethod("GET")  [CD]
Line_3 $$ public void invalidRequestUri(final String path) --> Line_7 $$ connection.setRequestProperty("Accept", "text/plain")  [CD]
Line_3 $$ public void invalidRequestUri(final String path) --> Line_8 $$ connection.connect()  [CD]
Line_3 $$ public void invalidRequestUri(final String path) --> Line_9 $$ assertEquals(400, connection.getResponseCode())  [CD]
