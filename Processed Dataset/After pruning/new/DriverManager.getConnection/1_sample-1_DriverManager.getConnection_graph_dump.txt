Line_2 $$ public void testLeadingPKWithTrailingRVC2() --> Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props) [CD]
Line_2 $$ public void testLeadingPKWithTrailingRVC2() --> Line_4 $$ conn.createStatement().execute("CREATE TABLE in_test ( user VARCHAR, tenant_id VARCHAR(5) NOT NULL,tenant_type_id VARCHAR(3) NOT NULL,  id INTEGER NOT NULL CONSTRAINT pk PRIMARY KEY (tenant_id, tenant_type_id, id))") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props) --> Line_4 $$ conn.createStatement().execute("CREATE TABLE in_test ( user VARCHAR, tenant_id VARCHAR(5) NOT NULL,tenant_type_id VARCHAR(3) NOT NULL,  id INTEGER NOT NULL CONSTRAINT pk PRIMARY KEY (tenant_id, tenant_type_id, id))") [FD]
Line_2 $$ public void testLeadingPKWithTrailingRVC2() --> Line_5 $$ conn.createStatement().execute("upsert into in_test (tenant_id, tenant_type_id, id, user) values ('a', 'a', 1, 'BonA')") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props) --> Line_5 $$ conn.createStatement().execute("upsert into in_test (tenant_id, tenant_type_id, id, user) values ('a', 'a', 1, 'BonA')") [FD]
Line_2 $$ public void testLeadingPKWithTrailingRVC2() --> Line_6 $$ conn.createStatement().execute("upsert into in_test (tenant_id, tenant_type_id, id, user) values ('a', 'a', 2, 'BonB')") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl(), props) --> Line_6 $$ conn.createStatement().execute("upsert into in_test (tenant_id, tenant_type_id, id, user) values ('a', 'a', 2, 'BonB')") [FD]
