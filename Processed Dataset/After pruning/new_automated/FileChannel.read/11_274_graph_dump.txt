Line_10 $$ if (size <= SHOW_LOG_LENGTH) --> Line_12 $$ channel.read(bb, 0)  [CD]
Line_7 $$ FileChannel channel = fis.getChannel() --> Line_12 $$ channel.read(bb, 0)  [FD]
Line_9 $$ ByteBuffer bb --> Line_12 $$ channel.read(bb, 0)  [FD]
Line_11 $$ bb = ByteBuffer.allocate((int) size) --> Line_12 $$ channel.read(bb, 0)  [FD]
Line_10 $$ if (size <= SHOW_LOG_LENGTH) --> Line_16 $$ channel.read(bb, pos)  [CD]
Line_7 $$ FileChannel channel = fis.getChannel() --> Line_16 $$ channel.read(bb, pos)  [FD]
Line_9 $$ ByteBuffer bb --> Line_16 $$ channel.read(bb, pos)  [FD]
Line_11 $$ bb = ByteBuffer.allocate((int) size) --> Line_16 $$ channel.read(bb, pos)  [FD]
Line_15 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH) --> Line_16 $$ channel.read(bb, pos)  [FD]
Line_14 $$ int pos = (int) (size - SHOW_LOG_LENGTH) --> Line_16 $$ channel.read(bb, pos)  [FD]
Line_10 $$ if (size <= SHOW_LOG_LENGTH) --> Line_11 $$ bb = ByteBuffer.allocate((int) size)  [CD]
Line_9 $$ ByteBuffer bb --> Line_11 $$ bb = ByteBuffer.allocate((int) size)  [FD]
Line_10 $$ if (size <= SHOW_LOG_LENGTH) --> Line_14 $$ int pos = (int) (size - SHOW_LOG_LENGTH)  [CD]
Line_10 $$ if (size <= SHOW_LOG_LENGTH) --> Line_15 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)  [CD]
Line_9 $$ ByteBuffer bb --> Line_15 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)  [FD]
Line_11 $$ bb = ByteBuffer.allocate((int) size) --> Line_15 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)  [FD]
