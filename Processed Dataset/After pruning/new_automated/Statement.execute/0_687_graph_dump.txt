Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual") --> Line_7 $$ assertTrue(rs.next())  [FD]
Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual") --> Line_8 $$ assertEquals("0 args", 0, rs.getInt(1))  [FD]
Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual") --> Line_9 $$ assertFalse(rs.next())  [FD]
Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual") --> Line_10 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")  [FD]
Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual") --> Line_11 $$ assertFalse(rs.next())  [FD]
Line_3 $$ public void testControl() --> Line_5 $$ stat.execute("create alias overload0 for \"" + ME + ".overload0\"")  [CD]
Line_4 $$ Statement stat = conn.createStatement() --> Line_5 $$ stat.execute("create alias overload0 for \"" + ME + ".overload0\"")  [FD]
Line_3 $$ public void testControl() --> Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")  [CD]
Line_4 $$ Statement stat = conn.createStatement() --> Line_6 $$ ResultSet rs = stat.executeQuery("select overload0() from dual")  [FD]
Line_3 $$ public void testControl() --> Line_4 $$ Statement stat = conn.createStatement()  [CD]
Line_3 $$ public void testControl() --> Line_7 $$ assertTrue(rs.next())  [CD]
Line_3 $$ public void testControl() --> Line_8 $$ assertEquals("0 args", 0, rs.getInt(1))  [CD]
Line_3 $$ public void testControl() --> Line_9 $$ assertFalse(rs.next())  [CD]
Line_3 $$ public void testControl() --> Line_10 $$ rs = meta.getProcedures(null, null, "OVERLOAD0")  [CD]
Line_3 $$ public void testControl() --> Line_11 $$ assertFalse(rs.next())  [CD]
Line_10 $$ rs = meta.getProcedures(null, null, "OVERLOAD0") --> Line_11 $$ assertFalse(rs.next())  [FD]
