Line_4 $$ for (int i = 0; i < columnMapping.length; i++) --> Line_14 $$ g.fill(weightRect)  [CD]
Line_6 $$ Rectangle2D weightRect = null --> Line_14 $$ g.fill(weightRect)  [FD]
Line_8 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) --> Line_14 $$ g.fill(weightRect)  [FD]
Line_10 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight) --> Line_14 $$ g.fill(weightRect)  [FD]
Line_12 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight) --> Line_14 $$ g.fill(weightRect)  [FD]
Line_4 $$ for (int i = 0; i < columnMapping.length; i++) --> Line_6 $$ Rectangle2D weightRect = null  [CD]
Line_6 $$ Rectangle2D weightRect = null --> Line_8 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight)  [FD]
Line_6 $$ Rectangle2D weightRect = null --> Line_10 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight)  [FD]
Line_8 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) --> Line_10 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight)  [FD]
Line_6 $$ Rectangle2D weightRect = null --> Line_12 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight)  [FD]
Line_8 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) --> Line_12 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight)  [FD]
Line_10 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight) --> Line_12 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight)  [FD]
