Line_5 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm()) --> Line_6 $$ bundle.start()  [FD]
Line_5 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm()) --> Line_7 $$ assertEquals("Precondition", Bundle.ACTIVE, bundle.getState())  [FD]
Line_5 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm()) --> Line_8 $$ BundleWiringDTO dto = bundle.adapt(BundleWiringDTO.class)  [FD]
Line_5 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm()) --> Line_9 $$ assertEquals(bundle.getBundleId(), dto.bundle)  [FD]
Line_3 $$ public void testBundleWiringDTO() --> Line_5 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())  [CD]
Line_4 $$ File bf = createBundle(mf) --> Line_5 $$ Bundle bundle = framework.getBundleContext().installBundle(bf.toURI().toURL().toExternalForm())  [FD]
Line_3 $$ public void testBundleWiringDTO() --> Line_4 $$ File bf = createBundle(mf)  [CD]
Line_3 $$ public void testBundleWiringDTO() --> Line_6 $$ bundle.start()  [CD]
Line_3 $$ public void testBundleWiringDTO() --> Line_7 $$ assertEquals("Precondition", Bundle.ACTIVE, bundle.getState())  [CD]
Line_3 $$ public void testBundleWiringDTO() --> Line_8 $$ BundleWiringDTO dto = bundle.adapt(BundleWiringDTO.class)  [CD]
Line_3 $$ public void testBundleWiringDTO() --> Line_9 $$ assertEquals(bundle.getBundleId(), dto.bundle)  [CD]
