Line_5 $$ FileInputStream fis = new FileInputStream(file) --> Line_6 $$ FileChannel channel = fis.getChannel() [FD]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) --> Line_10 $$ bb = ByteBuffer.allocate((int) size) [CD]
Line_8 $$ ByteBuffer bb --> Line_10 $$ bb = ByteBuffer.allocate((int) size) [FD]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) --> Line_11 $$ channel.read(bb, 0) [CD]
Line_6 $$ FileChannel channel = fis.getChannel() --> Line_11 $$ channel.read(bb, 0) [FD]
Line_8 $$ ByteBuffer bb --> Line_11 $$ channel.read(bb, 0) [FD]
Line_10 $$ bb = ByteBuffer.allocate((int) size) --> Line_11 $$ channel.read(bb, 0) [FD]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) --> Line_13 $$ int pos = (int) (size - SHOW_LOG_LENGTH) [CD]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) --> Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH) [CD]
Line_8 $$ ByteBuffer bb --> Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH) [FD]
Line_10 $$ bb = ByteBuffer.allocate((int) size) --> Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH) [FD]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) --> Line_15 $$ channel.read(bb, pos) [CD]
Line_6 $$ FileChannel channel = fis.getChannel() --> Line_15 $$ channel.read(bb, pos) [FD]
Line_8 $$ ByteBuffer bb --> Line_15 $$ channel.read(bb, pos) [FD]
Line_10 $$ bb = ByteBuffer.allocate((int) size) --> Line_15 $$ channel.read(bb, pos) [FD]
Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH) --> Line_15 $$ channel.read(bb, pos) [FD]
Line_13 $$ int pos = (int) (size - SHOW_LOG_LENGTH) --> Line_15 $$ channel.read(bb, pos) [FD]
