Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) --> Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder) [CD]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) --> Line_4 $$ fc.read(header) [CD]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder) --> Line_4 $$ fc.read(header) [FD]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) --> Line_6 $$ int type = getUnsignedShort(header) [CD]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder) --> Line_6 $$ int type = getUnsignedShort(header) [FD]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) --> Line_7 $$ long count = getUnsignedInt(header) [CD]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder) --> Line_7 $$ long count = getUnsignedInt(header) [FD]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) --> Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) [CD]
Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) --> Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) [CD]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) --> Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count) [CD]
Line_6 $$ int type = getUnsignedShort(header) --> Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count) [FD]
Line_7 $$ long count = getUnsignedInt(header) --> Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count) [FD]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) --> Line_24 $$ if (size > 0L) [CD]
Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count) --> Line_24 $$ if (size > 0L) [FD]
Line_24 $$ if (size > 0L) --> Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder) [CD]
Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count) --> Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder) [FD]
Line_24 $$ if (size > 0L) --> Line_29 $$ fc.read(data) [CD]
Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder) --> Line_29 $$ fc.read(data) [FD]
