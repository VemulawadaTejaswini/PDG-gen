Line_2 $$ public void testBlobRangeEndGreaterThanContentSize(@ArquillianResource URL url) --> Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection() [CD]
Line_3 $$ URL pageUrl = new URL(url, "serveblob?name=testrangeend.txt&mimeType=text/plain&contents=" + CONTENTS + "&blobRange=bytes=2-1000") --> Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection() [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection() --> Line_5 $$ String response = readFullyAndClose(connection.getInputStream()) [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection() --> Line_6 $$ assertEquals(PARTIAL_CONTENT, connection.getResponseCode()) [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection() --> Line_7 $$ assertEquals("bytes 2-25/26", connection.getHeaderField("Content-Range")) [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) pageUrl.openConnection() --> Line_9 $$ connection.disconnect() [FD]
Line_2 $$ public void testBlobRangeEndGreaterThanContentSize(@ArquillianResource URL url) --> Line_3 $$ URL pageUrl = new URL(url, "serveblob?name=testrangeend.txt&mimeType=text/plain&contents=" + CONTENTS + "&blobRange=bytes=2-1000") [CD]
Line_2 $$ public void testBlobRangeEndGreaterThanContentSize(@ArquillianResource URL url) --> Line_5 $$ String response = readFullyAndClose(connection.getInputStream()) [CD]
Line_2 $$ public void testBlobRangeEndGreaterThanContentSize(@ArquillianResource URL url) --> Line_6 $$ assertEquals(PARTIAL_CONTENT, connection.getResponseCode()) [CD]
Line_2 $$ public void testBlobRangeEndGreaterThanContentSize(@ArquillianResource URL url) --> Line_7 $$ assertEquals("bytes 2-25/26", connection.getHeaderField("Content-Range")) [CD]
Line_2 $$ public void testBlobRangeEndGreaterThanContentSize(@ArquillianResource URL url) --> Line_9 $$ connection.disconnect() [CD]
