Line_2 $$ public void call() --> Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [CD]
Line_5 $$ URL url = createURL(MockDagEngineService.JOB_ID + 1 + MockDagEngineService.JOB_ID_END, params) --> Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [FD]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_7 $$ conn.setRequestMethod("GET") [FD]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_8 $$ assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode()) [FD]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_9 $$ assertEquals(ErrorCode.E0306.name(), conn.getHeaderField(RestConstants.OOZIE_ERROR_CODE)) [FD]
Line_2 $$ public void call() --> Line_5 $$ URL url = createURL(MockDagEngineService.JOB_ID + 1 + MockDagEngineService.JOB_ID_END, params) [CD]
Line_2 $$ public void call() --> Line_7 $$ conn.setRequestMethod("GET") [CD]
Line_2 $$ public void call() --> Line_8 $$ assertEquals(HttpServletResponse.SC_BAD_REQUEST, conn.getResponseCode()) [CD]
Line_2 $$ public void call() --> Line_9 $$ assertEquals(ErrorCode.E0306.name(), conn.getHeaderField(RestConstants.OOZIE_ERROR_CODE)) [CD]
