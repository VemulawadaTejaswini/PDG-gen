Line_2 $$ public void testTryCatchFinally() --> Line_6 $$ Class<?> basic = loader.loadClass("testdata.Basic") [CD]
Line_3 $$ ClassLoader loader = mergeAndLoad("/testdata/Basic.dex", "/testdata/TryCatchFinally.dex") --> Line_6 $$ Class<?> basic = loader.loadClass("testdata.Basic") [FD]
Line_6 $$ Class<?> basic = loader.loadClass("testdata.Basic") --> Line_7 $$ assertEquals(1, basic.getDeclaredMethods().length) [FD]
Line_2 $$ public void testTryCatchFinally() --> Line_8 $$ Class<?> tryCatchFinally = loader.loadClass("testdata.TryCatchFinally") [CD]
Line_3 $$ ClassLoader loader = mergeAndLoad("/testdata/Basic.dex", "/testdata/TryCatchFinally.dex") --> Line_8 $$ Class<?> tryCatchFinally = loader.loadClass("testdata.TryCatchFinally") [FD]
Line_8 $$ Class<?> tryCatchFinally = loader.loadClass("testdata.TryCatchFinally") --> Line_9 $$ tryCatchFinally.getDeclaredMethod("method").invoke(null) [FD]
Line_2 $$ public void testTryCatchFinally() --> Line_3 $$ ClassLoader loader = mergeAndLoad("/testdata/Basic.dex", "/testdata/TryCatchFinally.dex") [CD]
Line_2 $$ public void testTryCatchFinally() --> Line_7 $$ assertEquals(1, basic.getDeclaredMethods().length) [CD]
Line_2 $$ public void testTryCatchFinally() --> Line_9 $$ tryCatchFinally.getDeclaredMethod("method").invoke(null) [CD]
