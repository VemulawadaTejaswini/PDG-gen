Line_3 $$ for (int i = 0; i < columnMapping.length; i++) --> Line_13 $$ g.fill(weightRect) [CD]
Line_5 $$ Rectangle2D weightRect = null --> Line_13 $$ g.fill(weightRect) [FD]
Line_7 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) --> Line_13 $$ g.fill(weightRect) [FD]
Line_9 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight) --> Line_13 $$ g.fill(weightRect) [FD]
Line_11 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight) --> Line_13 $$ g.fill(weightRect) [FD]
Line_3 $$ for (int i = 0; i < columnMapping.length; i++) --> Line_5 $$ Rectangle2D weightRect = null [CD]
Line_5 $$ Rectangle2D weightRect = null --> Line_7 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) [FD]
Line_5 $$ Rectangle2D weightRect = null --> Line_9 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight) [FD]
Line_7 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) --> Line_9 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight) [FD]
Line_5 $$ Rectangle2D weightRect = null --> Line_11 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight) [FD]
Line_7 $$ weightRect = new Rectangle2D.Double(currentX, 0.0d, columnDistance / 2.0d, pixHeight) --> Line_11 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight) [FD]
Line_9 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance / 2.0d, pixHeight) --> Line_11 $$ weightRect = new Rectangle2D.Double(currentX - (columnDistance / 2.0d), 0.0d, columnDistance, pixHeight) [FD]
