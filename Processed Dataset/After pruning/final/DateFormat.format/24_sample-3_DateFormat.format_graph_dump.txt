Line_2 $$ public void compare(final Calendar expected, final Calendar actual) --> Line_3 $$ final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: " + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime()) [CD]
Line_3 $$ final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: " + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime()) --> Line_5 $$ assertEquals(msg, expected.get(Calendar.YEAR), actual.get(Calendar.YEAR)) [FD]
Line_3 $$ final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: " + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime()) --> Line_6 $$ assertEquals(msg, expected.get(Calendar.MONTH), actual.get(Calendar.MONTH)) [FD]
Line_3 $$ final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: " + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime()) --> Line_7 $$ assertEquals(msg, expected.get(Calendar.DAY_OF_MONTH), actual.get(Calendar.DAY_OF_MONTH)) [FD]
Line_3 $$ final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: " + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime()) --> Line_8 $$ assertEquals(msg, expected.get(Calendar.HOUR), actual.get(Calendar.HOUR)) [FD]
Line_3 $$ final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: " + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime()) --> Line_9 $$ assertEquals(msg, expected.get(Calendar.MINUTE), actual.get(Calendar.MINUTE)) [FD]
Line_2 $$ public void compare(final Calendar expected, final Calendar actual) --> Line_5 $$ assertEquals(msg, expected.get(Calendar.YEAR), actual.get(Calendar.YEAR)) [CD]
Line_2 $$ public void compare(final Calendar expected, final Calendar actual) --> Line_6 $$ assertEquals(msg, expected.get(Calendar.MONTH), actual.get(Calendar.MONTH)) [CD]
Line_2 $$ public void compare(final Calendar expected, final Calendar actual) --> Line_7 $$ assertEquals(msg, expected.get(Calendar.DAY_OF_MONTH), actual.get(Calendar.DAY_OF_MONTH)) [CD]
Line_2 $$ public void compare(final Calendar expected, final Calendar actual) --> Line_8 $$ assertEquals(msg, expected.get(Calendar.HOUR), actual.get(Calendar.HOUR)) [CD]
Line_2 $$ public void compare(final Calendar expected, final Calendar actual) --> Line_9 $$ assertEquals(msg, expected.get(Calendar.MINUTE), actual.get(Calendar.MINUTE)) [CD]
