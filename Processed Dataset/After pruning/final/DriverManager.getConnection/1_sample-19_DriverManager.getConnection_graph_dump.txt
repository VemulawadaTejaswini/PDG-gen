Line_2 $$ public void initTableValues(String tenantId, byte[][] splits, long ts) --> Line_4 $$ Connection conn = DriverManager.getConnection(url, props) [CD]
Line_3 $$ Properties props = new Properties(TEST_PROPERTIES) --> Line_4 $$ Connection conn = DriverManager.getConnection(url, props) [FD]
Line_4 $$ Connection conn = DriverManager.getConnection(url, props) --> Line_5 $$ assertNoRows(conn) [FD]
Line_4 $$ Connection conn = DriverManager.getConnection(url, props) --> Line_6 $$ initTableValues(conn, tenantId) [FD]
Line_4 $$ Connection conn = DriverManager.getConnection(url, props) --> Line_7 $$ conn.commit() [FD]
Line_4 $$ Connection conn = DriverManager.getConnection(url, props) --> Line_8 $$ conn.close() [FD]
Line_2 $$ public void initTableValues(String tenantId, byte[][] splits, long ts) --> Line_3 $$ Properties props = new Properties(TEST_PROPERTIES) [CD]
Line_2 $$ public void initTableValues(String tenantId, byte[][] splits, long ts) --> Line_5 $$ assertNoRows(conn) [CD]
Line_2 $$ public void initTableValues(String tenantId, byte[][] splits, long ts) --> Line_6 $$ initTableValues(conn, tenantId) [CD]
Line_2 $$ public void initTableValues(String tenantId, byte[][] splits, long ts) --> Line_7 $$ conn.commit() [CD]
Line_2 $$ public void initTableValues(String tenantId, byte[][] splits, long ts) --> Line_8 $$ conn.close() [CD]
