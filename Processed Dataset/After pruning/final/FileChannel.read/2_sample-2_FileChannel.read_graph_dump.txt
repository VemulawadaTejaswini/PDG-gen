Line_2 $$ public void readValue(byte[] key, int chunk, int valueLocation) --> Line_4 $$ dataFile.read(sizeBuffer, valueLocation) [CD]
Line_3 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(headerSize) --> Line_4 $$ dataFile.read(sizeBuffer, valueLocation) [FD]
Line_9 $$ if (keySize == -1 && valueSize == -1) --> Line_11 $$ dataFile.read(sizeBuffer, valueLocation) [CD]
Line_3 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(headerSize) --> Line_11 $$ dataFile.read(sizeBuffer, valueLocation) [FD]
Line_8 $$ do --> Line_17 $$ dataFile.read(buffer, valueLocation) [CD]
Line_16 $$ ByteBuffer buffer = ByteBuffer.allocate(keySize + valueSize) --> Line_17 $$ dataFile.read(buffer, valueLocation) [FD]
Line_14 $$ valueLocation += (2 * ByteUtils.SIZE_OF_INT) --> Line_17 $$ dataFile.read(buffer, valueLocation) [FD]
Line_14 $$ valueLocation += (2 * ByteUtils.SIZE_OF_INT) --> Line_11 $$ dataFile.read(sizeBuffer, valueLocation) [FD]
Line_21 $$ valueLocation += (keySize + valueSize) --> Line_11 $$ dataFile.read(sizeBuffer, valueLocation) [FD]
Line_21 $$ valueLocation += (keySize + valueSize) --> Line_17 $$ dataFile.read(buffer, valueLocation) [FD]
Line_2 $$ public void readValue(byte[] key, int chunk, int valueLocation) --> Line_3 $$ ByteBuffer sizeBuffer = ByteBuffer.allocate(headerSize) [CD]
Line_2 $$ public void readValue(byte[] key, int chunk, int valueLocation) --> Line_8 $$ do [CD]
Line_8 $$ do --> Line_9 $$ if (keySize == -1 && valueSize == -1) [CD]
Line_9 $$ if (keySize == -1 && valueSize == -1) --> Line_14 $$ valueLocation += (2 * ByteUtils.SIZE_OF_INT) [CD]
Line_8 $$ do --> Line_16 $$ ByteBuffer buffer = ByteBuffer.allocate(keySize + valueSize) [CD]
Line_8 $$ do --> Line_21 $$ valueLocation += (keySize + valueSize) [CD]
Line_14 $$ valueLocation += (2 * ByteUtils.SIZE_OF_INT) --> Line_21 $$ valueLocation += (keySize + valueSize) [FD]
