Line_2 $$ public void validateMessage(FileChannel channel, long start, long len, ByteBuffer buffer) --> Line_4 $$ int read = channel.read(buffer, start) [CD]
Line_4 $$ int read = channel.read(buffer, start) --> Line_5 $$ if (read < 4) [FD]
Line_10 $$ while (messageBuffer.hasRemaining()) --> Line_11 $$ read = channel.read(messageBuffer, curr) [CD]
Line_4 $$ int read = channel.read(buffer, start) --> Line_11 $$ read = channel.read(messageBuffer, curr) [FD]
Line_9 $$ ByteBuffer messageBuffer = ByteBuffer.allocate(size) --> Line_11 $$ read = channel.read(messageBuffer, curr) [FD]
Line_11 $$ read = channel.read(messageBuffer, curr) --> Line_12 $$ if (read < 0) [FD]
Line_4 $$ int read = channel.read(buffer, start) --> Line_12 $$ if (read < 0) [FD]
Line_2 $$ public void validateMessage(FileChannel channel, long start, long len, ByteBuffer buffer) --> Line_5 $$ if (read < 4) [CD]
Line_2 $$ public void validateMessage(FileChannel channel, long start, long len, ByteBuffer buffer) --> Line_9 $$ ByteBuffer messageBuffer = ByteBuffer.allocate(size) [CD]
Line_2 $$ public void validateMessage(FileChannel channel, long start, long len, ByteBuffer buffer) --> Line_10 $$ while (messageBuffer.hasRemaining()) [CD]
Line_9 $$ ByteBuffer messageBuffer = ByteBuffer.allocate(size) --> Line_10 $$ while (messageBuffer.hasRemaining()) [FD]
Line_10 $$ while (messageBuffer.hasRemaining()) --> Line_12 $$ if (read < 0) [CD]
