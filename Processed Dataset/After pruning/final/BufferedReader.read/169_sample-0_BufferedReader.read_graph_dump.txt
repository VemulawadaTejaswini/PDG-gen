Line_2 $$ public void testClientRequestStallsContentProxyIdlesTimeout() --> Line_4 $$ SimpleHttpResponse response = parser.readResponse(reader) [CD]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), "UTF-8")) --> Line_4 $$ SimpleHttpResponse response = parser.readResponse(reader) [FD]
Line_4 $$ SimpleHttpResponse response = parser.readResponse(reader) --> Line_5 $$ Assert.assertTrue(Integer.parseInt(response.getCode()) >= 500) [FD]
Line_4 $$ SimpleHttpResponse response = parser.readResponse(reader) --> Line_6 $$ String connectionHeader = response.getHeaders().get("connection") [FD]
Line_2 $$ public void testClientRequestStallsContentProxyIdlesTimeout() --> Line_9 $$ Assert.assertEquals(-1, reader.read()) [CD]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), "UTF-8")) --> Line_9 $$ Assert.assertEquals(-1, reader.read()) [FD]
Line_2 $$ public void testClientRequestStallsContentProxyIdlesTimeout() --> Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream(), "UTF-8")) [CD]
Line_2 $$ public void testClientRequestStallsContentProxyIdlesTimeout() --> Line_5 $$ Assert.assertTrue(Integer.parseInt(response.getCode()) >= 500) [CD]
Line_2 $$ public void testClientRequestStallsContentProxyIdlesTimeout() --> Line_6 $$ String connectionHeader = response.getHeaders().get("connection") [CD]
